{
  "hash": "dd4ec8946a69591258c8e04ead406aa5",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"10 Lessons in Data Visualization\"\nsubtitle: \"CSSCR Short Workshop, Fall 2025\"\nauthor: \"Brian Leung\"\ninstitute: |\n  ### Consultant, Center for Social Science Computation and Research \\\n  ### Ph.D. Candidate, Department of Political Science \\\n  ### University of Washington\nformat: \n  revealjs:\n      incremental: true \n      theme: styles.scss\n      width: 1800\n      margin: 0.2\n      fig-width: 11\n      fig-asp: 0.618\n      slide-number: true\n      cache: true\neditor_options: \n  chunk_output_type: console\n---\n\n\n\n\n\n\n\n\n## Preview\n\n-   Developed during my TA-ship for Chris Adolph's [CS&SS 569](https://faculty.washington.edu/cadolph/?page=22)\n\n-   Based on `ggplot2` and `tidyverse`\n\n-   Code and materials available on my [personal website](https://brianleungkp.github.io/)\n\n-   Not going to cover every method or data\n\n-   But should be generalizable enough to better your vis.\n\n## Preview\n\n-   Key idea: data vis. is about *storytelling*\n\n-   How to tell a good story?\n\n    -   Get rid of extraneous and distracting details\n\n    -   Provide enough context to situate the story\n\n    -   Accentuate interesting or surprising patterns\n\n-   Ask yourself: What is the main takeaway with a graph for readers?\n\n## 10 lessons\n\n:::::: columns\n::: {.column width=\"33%\"}\n-   *Get rid of things*\n    1.  Start with minimalist aesthetics\n    2.  Get rid of excessive ink or space\n    3.  Replace bad labels\n:::\n\n::: {.column width=\"33%\"}\n-   *Accentuate patterns*\n    4.  Choose nice colors\n    5.  Use small multiples\n    6.  Diagonalize (sort) whenever possible\n:::\n\n::: {.column width=\"33%\"}\n-   *Provide context*\n    7.  Highlight observations\n    8.  Juxtapose observations\\\n    9.  Present uncertainty\n:::\n::::::\n\n::: center\n-   *Last but not least*\n    10. Save graphics with code\n:::\n\n# Set up {background-color=\"#DFDDE8\"}\n\n## Gapminder data\n\n\n\n\n\n\n::: {.cell output-location='column-fragment'}\n\n```{.r .cell-code}\n## Install pacakges\n# install.packages(c(\"tidyverse\", \"gapminder\", \"scales\", \"RColorBrewer\", \"ggrepel\", \"ggforce\", \"modelsummary\"))\n\n## Load and inspect data from gapminder:\nlibrary(tidyverse)\nlibrary(gapminder)\n\ngapminder %>%\n  print(n = 100)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1,704 × 6\n    country     continent  year lifeExp      pop gdpPercap\n    <fct>       <fct>     <int>   <dbl>    <int>     <dbl>\n  1 Afghanistan Asia       1952    28.8  8425333      779.\n  2 Afghanistan Asia       1957    30.3  9240934      821.\n  3 Afghanistan Asia       1962    32.0 10267083      853.\n  4 Afghanistan Asia       1967    34.0 11537966      836.\n  5 Afghanistan Asia       1972    36.1 13079460      740.\n  6 Afghanistan Asia       1977    38.4 14880372      786.\n  7 Afghanistan Asia       1982    39.9 12881816      978.\n  8 Afghanistan Asia       1987    40.8 13867957      852.\n  9 Afghanistan Asia       1992    41.7 16317921      649.\n 10 Afghanistan Asia       1997    41.8 22227415      635.\n 11 Afghanistan Asia       2002    42.1 25268405      727.\n 12 Afghanistan Asia       2007    43.8 31889923      975.\n 13 Albania     Europe     1952    55.2  1282697     1601.\n 14 Albania     Europe     1957    59.3  1476505     1942.\n 15 Albania     Europe     1962    64.8  1728137     2313.\n 16 Albania     Europe     1967    66.2  1984060     2760.\n 17 Albania     Europe     1972    67.7  2263554     3313.\n 18 Albania     Europe     1977    68.9  2509048     3533.\n 19 Albania     Europe     1982    70.4  2780097     3631.\n 20 Albania     Europe     1987    72    3075321     3739.\n 21 Albania     Europe     1992    71.6  3326498     2497.\n 22 Albania     Europe     1997    73.0  3428038     3193.\n 23 Albania     Europe     2002    75.7  3508512     4604.\n 24 Albania     Europe     2007    76.4  3600523     5937.\n 25 Algeria     Africa     1952    43.1  9279525     2449.\n 26 Algeria     Africa     1957    45.7 10270856     3014.\n 27 Algeria     Africa     1962    48.3 11000948     2551.\n 28 Algeria     Africa     1967    51.4 12760499     3247.\n 29 Algeria     Africa     1972    54.5 14760787     4183.\n 30 Algeria     Africa     1977    58.0 17152804     4910.\n 31 Algeria     Africa     1982    61.4 20033753     5745.\n 32 Algeria     Africa     1987    65.8 23254956     5681.\n 33 Algeria     Africa     1992    67.7 26298373     5023.\n 34 Algeria     Africa     1997    69.2 29072015     4797.\n 35 Algeria     Africa     2002    71.0 31287142     5288.\n 36 Algeria     Africa     2007    72.3 33333216     6223.\n 37 Angola      Africa     1952    30.0  4232095     3521.\n 38 Angola      Africa     1957    32.0  4561361     3828.\n 39 Angola      Africa     1962    34    4826015     4269.\n 40 Angola      Africa     1967    36.0  5247469     5523.\n 41 Angola      Africa     1972    37.9  5894858     5473.\n 42 Angola      Africa     1977    39.5  6162675     3009.\n 43 Angola      Africa     1982    39.9  7016384     2757.\n 44 Angola      Africa     1987    39.9  7874230     2430.\n 45 Angola      Africa     1992    40.6  8735988     2628.\n 46 Angola      Africa     1997    41.0  9875024     2277.\n 47 Angola      Africa     2002    41.0 10866106     2773.\n 48 Angola      Africa     2007    42.7 12420476     4797.\n 49 Argentina   Americas   1952    62.5 17876956     5911.\n 50 Argentina   Americas   1957    64.4 19610538     6857.\n 51 Argentina   Americas   1962    65.1 21283783     7133.\n 52 Argentina   Americas   1967    65.6 22934225     8053.\n 53 Argentina   Americas   1972    67.1 24779799     9443.\n 54 Argentina   Americas   1977    68.5 26983828    10079.\n 55 Argentina   Americas   1982    69.9 29341374     8998.\n 56 Argentina   Americas   1987    70.8 31620918     9140.\n 57 Argentina   Americas   1992    71.9 33958947     9308.\n 58 Argentina   Americas   1997    73.3 36203463    10967.\n 59 Argentina   Americas   2002    74.3 38331121     8798.\n 60 Argentina   Americas   2007    75.3 40301927    12779.\n 61 Australia   Oceania    1952    69.1  8691212    10040.\n 62 Australia   Oceania    1957    70.3  9712569    10950.\n 63 Australia   Oceania    1962    70.9 10794968    12217.\n 64 Australia   Oceania    1967    71.1 11872264    14526.\n 65 Australia   Oceania    1972    71.9 13177000    16789.\n 66 Australia   Oceania    1977    73.5 14074100    18334.\n 67 Australia   Oceania    1982    74.7 15184200    19477.\n 68 Australia   Oceania    1987    76.3 16257249    21889.\n 69 Australia   Oceania    1992    77.6 17481977    23425.\n 70 Australia   Oceania    1997    78.8 18565243    26998.\n 71 Australia   Oceania    2002    80.4 19546792    30688.\n 72 Australia   Oceania    2007    81.2 20434176    34435.\n 73 Austria     Europe     1952    66.8  6927772     6137.\n 74 Austria     Europe     1957    67.5  6965860     8843.\n 75 Austria     Europe     1962    69.5  7129864    10751.\n 76 Austria     Europe     1967    70.1  7376998    12835.\n 77 Austria     Europe     1972    70.6  7544201    16662.\n 78 Austria     Europe     1977    72.2  7568430    19749.\n 79 Austria     Europe     1982    73.2  7574613    21597.\n 80 Austria     Europe     1987    74.9  7578903    23688.\n 81 Austria     Europe     1992    76.0  7914969    27042.\n 82 Austria     Europe     1997    77.5  8069876    29096.\n 83 Austria     Europe     2002    79.0  8148312    32418.\n 84 Austria     Europe     2007    79.8  8199783    36126.\n 85 Bahrain     Asia       1952    50.9   120447     9867.\n 86 Bahrain     Asia       1957    53.8   138655    11636.\n 87 Bahrain     Asia       1962    56.9   171863    12753.\n 88 Bahrain     Asia       1967    59.9   202182    14805.\n 89 Bahrain     Asia       1972    63.3   230800    18269.\n 90 Bahrain     Asia       1977    65.6   297410    19340.\n 91 Bahrain     Asia       1982    69.1   377967    19211.\n 92 Bahrain     Asia       1987    70.8   454612    18524.\n 93 Bahrain     Asia       1992    72.6   529491    19036.\n 94 Bahrain     Asia       1997    73.9   598561    20292.\n 95 Bahrain     Asia       2002    74.8   656397    23404.\n 96 Bahrain     Asia       2007    75.6   708573    29796.\n 97 Bangladesh  Asia       1952    37.5 46886859      684.\n 98 Bangladesh  Asia       1957    39.3 51365468      662.\n 99 Bangladesh  Asia       1962    41.2 56839289      686.\n100 Bangladesh  Asia       1967    43.5 62821884      721.\n# ℹ 1,604 more rows\n```\n\n\n:::\n:::\n\n\n\n\n\n\n## Basic ggplot2\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\n## Establish `aes`thetics mappings between\n## variables and visual properties:\nggplot(\n  data = gapminder,\n  )\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/basic1.0_non_seq_01_output-1.png){width=1056}\n:::\n:::\n::::\n:::::\n\n## Basic ggplot2\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\n## Establish `aes`thetics mappings between\n## variables and visual properties:\nggplot(\n  data = gapminder,\n  mapping = aes(\n      x = gdpPercap,\n    )\n  )\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/basic1.0_non_seq_02_output-1.png){width=1056}\n:::\n:::\n::::\n:::::\n\n## Basic ggplot2\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\n## Establish `aes`thetics mappings between\n## variables and visual properties:\nggplot(\n  data = gapminder,\n  mapping = aes(\n      x = gdpPercap,\n      y = lifeExp\n    )\n  )\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/basic1.0_non_seq_03_output-1.png){width=1056}\n:::\n:::\n::::\n:::::\n\n\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\n\n## Basic ggplot2\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\n## Plot them in specific `geom_` layers:\nggplot(\n  data = gapminder,\n  mapping = aes(\n     x = gdpPercap,\n     y = lifeExp\n    )\n  ) +\n  geom_point()\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/basic1.1_non_seq_01_output-1.png){width=1056}\n:::\n:::\n::::\n:::::\n\n\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\n\n## Basic ggplot2\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\n## You can technically map many variables\n## But the curse of dimensionality!\nggplot(\n  data = gapminder,\n  mapping = aes(\n    x = gdpPercap,\n    y = lifeExp,\n    )\n  ) +\n  geom_point()\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/basic1.2_non_seq_01_output-1.png){width=1056}\n:::\n:::\n::::\n:::::\n\n## Basic ggplot2\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\n## You can technically map many variables\n## But the curse of dimensionality!\nggplot(\n  data = gapminder,\n  mapping = aes(\n    x = gdpPercap,\n    y = lifeExp,\n    color = continent,\n    )\n  ) +\n  geom_point()\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/basic1.2_non_seq_02_output-1.png){width=1056}\n:::\n:::\n::::\n:::::\n\n## Basic ggplot2\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\n## You can technically map many variables\n## But the curse of dimensionality!\nggplot(\n  data = gapminder,\n  mapping = aes(\n    x = gdpPercap,\n    y = lifeExp,\n    color = continent,\n    shape = continent,\n    )\n  ) +\n  geom_point()\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/basic1.2_non_seq_03_output-1.png){width=1056}\n:::\n:::\n::::\n:::::\n\n## Basic ggplot2\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\n## You can technically map many variables\n## But the curse of dimensionality!\nggplot(\n  data = gapminder,\n  mapping = aes(\n    x = gdpPercap,\n    y = lifeExp,\n    color = continent,\n    shape = continent,\n    size = log(pop),\n    )\n  ) +\n  geom_point()\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/basic1.2_non_seq_04_output-1.png){width=1056}\n:::\n:::\n::::\n:::::\n\n## Basic ggplot2\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\n## You can technically map many variables\n## But the curse of dimensionality!\nggplot(\n  data = gapminder,\n  mapping = aes(\n    x = gdpPercap,\n    y = lifeExp,\n    color = continent,\n    shape = continent,\n    size = log(pop),\n    alpha = year\n    )\n  ) +\n  geom_point()\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/basic1.2_non_seq_05_output-1.png){width=1056}\n:::\n:::\n::::\n:::::\n\n\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\n\n## Basic ggplot2\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\n## Simpler syntax\nggplot(gapminder,\n       aes(x = gdpPercap,\n           y = lifeExp,\n           color = continent)) +\n  geom_point()\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/basic1.3_non_seq_01_output-1.png){width=1056}\n:::\n:::\n::::\n:::::\n\n\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\n\n# Lesson 1: Start with minimalist aesthetics {background-color=\"#DFDDE8\"}\n\n## Lesson 1: Start with minimalist aesthetics\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\nggplot(gapminder,\n       aes(x = gdpPercap,\n           y = lifeExp,\n           color = continent)) +\ngeom_point()\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/lesson1.1_non_seq_01_output-1.png){width=1056}\n:::\n:::\n::::\n:::::\n\n## Lesson 1: Start with minimalist aesthetics\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\nggplot(gapminder,\n       aes(x = gdpPercap,\n           y = lifeExp,\n           color = continent)) +\ngeom_point() +\ntheme(\n  panel.background = element_rect(fill = \"white\"),\n)\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/lesson1.1_non_seq_02_output-1.png){width=1056}\n:::\n:::\n::::\n:::::\n\n## Lesson 1: Start with minimalist aesthetics\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\nggplot(gapminder,\n       aes(x = gdpPercap,\n           y = lifeExp,\n           color = continent)) +\ngeom_point() +\ntheme(\n  panel.background = element_rect(fill = \"white\"),\n  aspect.ratio = 1/1.618,\n)\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/lesson1.1_non_seq_03_output-1.png){width=1056}\n:::\n:::\n::::\n:::::\n\n## Lesson 1: Start with minimalist aesthetics\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\nggplot(gapminder,\n       aes(x = gdpPercap,\n           y = lifeExp,\n           color = continent)) +\ngeom_point() +\ntheme(\n  panel.background = element_rect(fill = \"white\"),\n  aspect.ratio = 1/1.618,\n  axis.line.x.bottom = element_line(linewidth = 0.2),\n)\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/lesson1.1_non_seq_04_output-1.png){width=1056}\n:::\n:::\n::::\n:::::\n\n## Lesson 1: Start with minimalist aesthetics\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\nggplot(gapminder,\n       aes(x = gdpPercap,\n           y = lifeExp,\n           color = continent)) +\ngeom_point() +\ntheme(\n  panel.background = element_rect(fill = \"white\"),\n  aspect.ratio = 1/1.618,\n  axis.line.x.bottom = element_line(linewidth = 0.2),\n  panel.grid.major.y = element_line(color = \"gray75\", linewidth = 0.1),\n)\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/lesson1.1_non_seq_05_output-1.png){width=1056}\n:::\n:::\n::::\n:::::\n\n## Lesson 1: Start with minimalist aesthetics\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\nggplot(gapminder,\n       aes(x = gdpPercap,\n           y = lifeExp,\n           color = continent)) +\ngeom_point() +\ntheme(\n  panel.background = element_rect(fill = \"white\"),\n  aspect.ratio = 1/1.618,\n  axis.line.x.bottom = element_line(linewidth = 0.2),\n  panel.grid.major.y = element_line(color = \"gray75\", linewidth = 0.1),\n  panel.grid.major.x = element_line(color = \"gray75\", linewidth = 0.1)\n)\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/lesson1.1_non_seq_06_output-1.png){width=1056}\n:::\n:::\n::::\n:::::\n\n\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\n\n## Lesson 1: Start with minimalist aesthetics\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\n## A customized theme\nurl <- \"https://raw.githubusercontent.com/brianleungkp/brianleungkp.github.io/refs/heads/main/datavis/theme_cavis.R\"\nsource(url)\n\nggplot(gapminder,\n       aes(x = gdpPercap,\n           y = lifeExp,\n           color = continent)) +\n  geom_point() +\n  theme_cavis\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/lesson1.2_rotate_01_output-1.png){width=1056}\n:::\n:::\n::::\n:::::\n\n## Lesson 1: Start with minimalist aesthetics\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\n## A customized theme\nurl <- \"https://raw.githubusercontent.com/brianleungkp/brianleungkp.github.io/refs/heads/main/datavis/theme_cavis.R\"\nsource(url)\n\nggplot(gapminder,\n       aes(x = gdpPercap,\n           y = lifeExp,\n           color = continent)) +\n  geom_point() +\n  theme_cavis_hgrid\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/lesson1.2_rotate_02_output-1.png){width=1056}\n:::\n:::\n::::\n:::::\n\n## Lesson 1: Start with minimalist aesthetics\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\n## A customized theme\nurl <- \"https://raw.githubusercontent.com/brianleungkp/brianleungkp.github.io/refs/heads/main/datavis/theme_cavis.R\"\nsource(url)\n\nggplot(gapminder,\n       aes(x = gdpPercap,\n           y = lifeExp,\n           color = continent)) +\n  geom_point() +\n  theme_cavis_vgrid\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/lesson1.2_rotate_03_output-1.png){width=1056}\n:::\n:::\n::::\n:::::\n\n## Lesson 1: Start with minimalist aesthetics\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\n## A customized theme\nurl <- \"https://raw.githubusercontent.com/brianleungkp/brianleungkp.github.io/refs/heads/main/datavis/theme_cavis.R\"\nsource(url)\n\nggplot(gapminder,\n       aes(x = gdpPercap,\n           y = lifeExp,\n           color = continent)) +\n  geom_point() +\n  theme_cavis_grids\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/lesson1.2_rotate_04_output-1.png){width=1056}\n:::\n:::\n::::\n:::::\n\n\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\n\n## Lesson 1: Start with minimalist aesthetics\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\n## Or from ggplot2\nggplot(gapminder,\n       aes(x = gdpPercap,\n           y = lifeExp,\n           color = continent))\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/lesson1.3_auto_01_output-1.png){width=1056}\n:::\n:::\n::::\n:::::\n\n## Lesson 1: Start with minimalist aesthetics\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\n## Or from ggplot2\nggplot(gapminder,\n       aes(x = gdpPercap,\n           y = lifeExp,\n           color = continent)) +\ngeom_point()\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/lesson1.3_auto_02_output-1.png){width=1056}\n:::\n:::\n::::\n:::::\n\n## Lesson 1: Start with minimalist aesthetics\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\n## Or from ggplot2\nggplot(gapminder,\n       aes(x = gdpPercap,\n           y = lifeExp,\n           color = continent)) +\ngeom_point() +\ntheme_minimal(base_family = \"Roboto Condensed\")\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/lesson1.3_auto_03_output-1.png){width=1056}\n:::\n:::\n::::\n:::::\n\n\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\n\n# Lesson 2: Get rid of excessive space or ink {background-color=\"#DFDDE8\"}\n\n## Lesson 2: Get rid of excessive space or ink\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\nggplot(gapminder,\n       aes(x = gdpPercap,\n           y = lifeExp,\n           color = continent))\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/lesson2.1_auto_01_output-1.png){width=1056}\n:::\n:::\n::::\n:::::\n\n## Lesson 2: Get rid of excessive space or ink\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\nggplot(gapminder,\n       aes(x = gdpPercap,\n           y = lifeExp,\n           color = continent)) +\n  geom_point()\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/lesson2.1_auto_02_output-1.png){width=1056}\n:::\n:::\n::::\n:::::\n\n## Lesson 2: Get rid of excessive space or ink\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\nggplot(gapminder,\n       aes(x = gdpPercap,\n           y = lifeExp,\n           color = continent)) +\n  geom_point() +\n  theme_cavis_grids\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/lesson2.1_auto_03_output-1.png){width=1056}\n:::\n:::\n::::\n:::::\n\n## Lesson 2: Get rid of excessive space or ink\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\nggplot(gapminder,\n       aes(x = gdpPercap,\n           y = lifeExp,\n           color = continent)) +\n  geom_point() +\n  theme_cavis_grids +\n  scale_x_continuous(trans = \"log\")\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/lesson2.1_auto_04_output-1.png){width=1056}\n:::\n:::\n::::\n:::::\n\n## Lesson 2: Get rid of excessive space or ink\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\nggplot(gapminder,\n       aes(x = gdpPercap,\n           y = lifeExp,\n           color = continent)) +\n  geom_point() +\n  theme_cavis_grids +\n  scale_x_continuous(trans = \"log\") +\n  theme(plot.background = element_rect(color = \"black\", linewidth = 1, linetype = 3))\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/lesson2.1_auto_05_output-1.png){width=1056}\n:::\n:::\n::::\n:::::\n\n\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\n\n## Lesson 2: Get rid of excessive space or ink\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\nggplot(gapminder,\n       aes(x = gdpPercap,\n           y = lifeExp,\n           color = continent)) +\n  geom_point() +\n  theme_cavis_grids +\n  scale_x_continuous(trans = \"log\") +\n  theme(legend.position = \"top\", plot.background = element_rect(color = \"black\", linewidth = 1, linetype = 3))\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/lesson2.2_rotate_01_output-1.png){width=1056}\n:::\n:::\n::::\n:::::\n\n## Lesson 2: Get rid of excessive space or ink\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\nggplot(gapminder,\n       aes(x = gdpPercap,\n           y = lifeExp,\n           color = continent)) +\n  geom_point() +\n  theme_cavis_grids +\n  scale_x_continuous(trans = \"log\") +\n  theme(legend.position = \"bottom\")\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/lesson2.2_rotate_02_output-1.png){width=1056}\n:::\n:::\n::::\n:::::\n\n## Lesson 2: Get rid of excessive space or ink\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\nggplot(gapminder,\n       aes(x = gdpPercap,\n           y = lifeExp,\n           color = continent)) +\n  geom_point() +\n  theme_cavis_grids +\n  scale_x_continuous(trans = \"log\") +\n  theme(legend.position = \"top\")\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/lesson2.2_rotate_03_output-1.png){width=1056}\n:::\n:::\n::::\n:::::\n\n\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\n\n## Lesson 2: Get rid of excessive space or ink\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\ngapminder\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1,704 × 6\n   country     continent  year lifeExp      pop gdpPercap\n   <fct>       <fct>     <int>   <dbl>    <int>     <dbl>\n 1 Afghanistan Asia       1952    28.8  8425333      779.\n 2 Afghanistan Asia       1957    30.3  9240934      821.\n 3 Afghanistan Asia       1962    32.0 10267083      853.\n 4 Afghanistan Asia       1967    34.0 11537966      836.\n 5 Afghanistan Asia       1972    36.1 13079460      740.\n 6 Afghanistan Asia       1977    38.4 14880372      786.\n 7 Afghanistan Asia       1982    39.9 12881816      978.\n 8 Afghanistan Asia       1987    40.8 13867957      852.\n 9 Afghanistan Asia       1992    41.7 16317921      649.\n10 Afghanistan Asia       1997    41.8 22227415      635.\n# ℹ 1,694 more rows\n```\n\n\n:::\n:::\n::::\n:::::\n\n## Lesson 2: Get rid of excessive space or ink\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\ngapminder %>%\n  group_by(country, continent)\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1,704 × 6\n# Groups:   country, continent [142]\n   country     continent  year lifeExp      pop gdpPercap\n   <fct>       <fct>     <int>   <dbl>    <int>     <dbl>\n 1 Afghanistan Asia       1952    28.8  8425333      779.\n 2 Afghanistan Asia       1957    30.3  9240934      821.\n 3 Afghanistan Asia       1962    32.0 10267083      853.\n 4 Afghanistan Asia       1967    34.0 11537966      836.\n 5 Afghanistan Asia       1972    36.1 13079460      740.\n 6 Afghanistan Asia       1977    38.4 14880372      786.\n 7 Afghanistan Asia       1982    39.9 12881816      978.\n 8 Afghanistan Asia       1987    40.8 13867957      852.\n 9 Afghanistan Asia       1992    41.7 16317921      649.\n10 Afghanistan Asia       1997    41.8 22227415      635.\n# ℹ 1,694 more rows\n```\n\n\n:::\n:::\n::::\n:::::\n\n## Lesson 2: Get rid of excessive space or ink\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\ngapminder %>%\n  group_by(country, continent) %>%\n  summarize(lifeExp_mean = mean(lifeExp))\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 142 × 3\n# Groups:   country [142]\n   country     continent lifeExp_mean\n   <fct>       <fct>            <dbl>\n 1 Afghanistan Asia              37.5\n 2 Albania     Europe            68.4\n 3 Algeria     Africa            59.0\n 4 Angola      Africa            37.9\n 5 Argentina   Americas          69.1\n 6 Australia   Oceania           74.7\n 7 Austria     Europe            73.1\n 8 Bahrain     Asia              65.6\n 9 Bangladesh  Asia              49.8\n10 Belgium     Europe            73.6\n# ℹ 132 more rows\n```\n\n\n:::\n:::\n::::\n:::::\n\n## Lesson 2: Get rid of excessive space or ink\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\ngapminder %>%\n  group_by(country, continent) %>%\n  summarize(lifeExp_mean = mean(lifeExp)) %>%\n  ungroup()\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 142 × 3\n   country     continent lifeExp_mean\n   <fct>       <fct>            <dbl>\n 1 Afghanistan Asia              37.5\n 2 Albania     Europe            68.4\n 3 Algeria     Africa            59.0\n 4 Angola      Africa            37.9\n 5 Argentina   Americas          69.1\n 6 Australia   Oceania           74.7\n 7 Austria     Europe            73.1\n 8 Bahrain     Asia              65.6\n 9 Bangladesh  Asia              49.8\n10 Belgium     Europe            73.6\n# ℹ 132 more rows\n```\n\n\n:::\n:::\n::::\n:::::\n\n## Lesson 2: Get rid of excessive space or ink\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\ngapminder %>%\n  group_by(country, continent) %>%\n  summarize(lifeExp_mean = mean(lifeExp)) %>%\n  ungroup() %>%\n  slice_sample(n = 20)\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 20 × 3\n   country     continent lifeExp_mean\n   <fct>       <fct>            <dbl>\n 1 Haiti       Americas          50.2\n 2 Albania     Europe            68.4\n 3 Mexico      Americas          65.4\n 4 Syria       Asia              61.3\n 5 Myanmar     Asia              53.3\n 6 Liberia     Africa            42.5\n 7 Philippines Asia              61.0\n 8 Canada      Americas          74.9\n 9 Cameroon    Africa            48.1\n10 Belgium     Europe            73.6\n11 Mauritania  Africa            52.3\n12 Nepal       Asia              49.0\n13 Sudan       Africa            48.4\n14 Korea, Rep. Asia              65.0\n15 Costa Rica  Americas          70.2\n16 Sri Lanka   Asia              66.5\n17 Spain       Europe            74.2\n18 Honduras    Americas          57.9\n19 China       Asia              61.8\n20 Israel      Asia              73.6\n```\n\n\n:::\n:::\n::::\n:::::\n\n## Lesson 2: Get rid of excessive space or ink\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\ngapminder %>%\n  group_by(country, continent) %>%\n  summarize(lifeExp_mean = mean(lifeExp)) %>%\n  ungroup() %>%\n  slice_sample(n = 20) ->\n  lifeExp_mean_sample\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n\n:::\n::::\n:::::\n\n\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\n\n## Lesson 2: Get rid of excessive space or ink\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\nggplot(lifeExp_mean_sample,\n       aes(y = fct_reorder(country, lifeExp_mean),\n           x = lifeExp_mean)) +\n  geom_col(\n  )\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/lesson2.4_non_seq_01_output-1.png){width=1056}\n:::\n:::\n::::\n:::::\n\n## Lesson 2: Get rid of excessive space or ink\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\nggplot(lifeExp_mean_sample,\n       aes(y = fct_reorder(country, lifeExp_mean),\n           x = lifeExp_mean)) +\n  geom_col(\n    aes(fill = continent)\n  )\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/lesson2.4_non_seq_02_output-1.png){width=1056}\n:::\n:::\n::::\n:::::\n\n\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\n\n## Lesson 2: Get rid of excessive space or ink\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\nggplot(lifeExp_mean_sample,\n       aes(y = fct_reorder(country, lifeExp_mean),\n           x = lifeExp_mean,\n           color = continent))\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/lesson2.5_auto_01_output-1.png){width=1056}\n:::\n:::\n::::\n:::::\n\n## Lesson 2: Get rid of excessive space or ink\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\nggplot(lifeExp_mean_sample,\n       aes(y = fct_reorder(country, lifeExp_mean),\n           x = lifeExp_mean,\n           color = continent)) +\n  theme_cavis_hgrid\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/lesson2.5_auto_02_output-1.png){width=1056}\n:::\n:::\n::::\n:::::\n\n## Lesson 2: Get rid of excessive space or ink\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\nggplot(lifeExp_mean_sample,\n       aes(y = fct_reorder(country, lifeExp_mean),\n           x = lifeExp_mean,\n           color = continent)) +\n  theme_cavis_hgrid +\n  theme(aspect.ratio = 1.618,\n        legend.position = \"top\")\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/lesson2.5_auto_03_output-1.png){width=1056}\n:::\n:::\n::::\n:::::\n\n## Lesson 2: Get rid of excessive space or ink\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\nggplot(lifeExp_mean_sample,\n       aes(y = fct_reorder(country, lifeExp_mean),\n           x = lifeExp_mean,\n           color = continent)) +\n  theme_cavis_hgrid +\n  theme(aspect.ratio = 1.618,\n        legend.position = \"top\") +\n  geom_point(size = 7)\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/lesson2.5_auto_04_output-1.png){width=1056}\n:::\n:::\n::::\n:::::\n\n## Lesson 2: Get rid of excessive space or ink\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\nggplot(lifeExp_mean_sample,\n       aes(y = fct_reorder(country, lifeExp_mean),\n           x = lifeExp_mean,\n           color = continent)) +\n  theme_cavis_hgrid +\n  theme(aspect.ratio = 1.618,\n        legend.position = \"top\") +\n  geom_point(size = 7) +\n  geom_text(aes(label = round(lifeExp_mean, 0)),\n            color = \"white\",\n            size = 3.5)\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/lesson2.5_auto_05_output-1.png){width=1056}\n:::\n:::\n::::\n:::::\n\n## Lesson 2: Get rid of excessive space or ink\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\nggplot(lifeExp_mean_sample,\n       aes(y = fct_reorder(country, lifeExp_mean),\n           x = lifeExp_mean,\n           color = continent)) +\n  theme_cavis_hgrid +\n  theme(aspect.ratio = 1.618,\n        legend.position = \"top\") +\n  geom_point(size = 7) +\n  geom_text(aes(label = round(lifeExp_mean, 0)),\n            color = \"white\",\n            size = 3.5) +\n  labs(y = NULL,\n       x = \"Avg. life expectancy\")\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/lesson2.5_auto_06_output-1.png){width=1056}\n:::\n:::\n::::\n:::::\n\n## Lesson 2: Get rid of excessive space or ink\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\nggplot(lifeExp_mean_sample,\n       aes(y = fct_reorder(country, lifeExp_mean),\n           x = lifeExp_mean,\n           color = continent)) +\n  theme_cavis_hgrid +\n  theme(aspect.ratio = 1.618,\n        legend.position = \"top\") +\n  geom_point(size = 7) +\n  geom_text(aes(label = round(lifeExp_mean, 0)),\n            color = \"white\",\n            size = 3.5) +\n  labs(y = NULL,\n       x = \"Avg. life expectancy\") +\n  guides(\n    color = guide_legend(\n      override.aes = list(size = 3)\n    )\n  )\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/lesson2.5_auto_07_output-1.png){width=1056}\n:::\n:::\n::::\n:::::\n\n\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\n\n# Lesson 3: Replace bad labels {background-color=\"#DFDDE8\"}\n\n## Lesson 3: Replace bad labels\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(scales)\n\nggplot(gapminder,\n       aes(x = gdpPercap, y = lifeExp,\n           color = continent)) +\n  geom_point() +\n  theme_cavis_grids +\n  theme(legend.position = \"top\")\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/lesson3.1_non_seq_01_output-1.png){width=1056}\n:::\n:::\n::::\n:::::\n\n## Lesson 3: Replace bad labels\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(scales)\n\nggplot(gapminder,\n       aes(x = gdpPercap, y = lifeExp,\n           color = continent)) +\n  geom_point() +\n  theme_cavis_grids +\n  theme(legend.position = \"top\") +\n  scale_y_continuous(\n    breaks = seq(30, 80, 10)\n  )\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/lesson3.1_non_seq_02_output-1.png){width=1056}\n:::\n:::\n::::\n:::::\n\n## Lesson 3: Replace bad labels\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(scales)\n\nggplot(gapminder,\n       aes(x = gdpPercap, y = lifeExp,\n           color = continent)) +\n  geom_point() +\n  theme_cavis_grids +\n  theme(legend.position = \"top\") +\n  scale_y_continuous(\n    breaks = seq(30, 80, 10)\n  ) +\n  scale_x_continuous(\n    trans = \"log10\",\n  )\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/lesson3.1_non_seq_03_output-1.png){width=1056}\n:::\n:::\n::::\n:::::\n\n## Lesson 3: Replace bad labels\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(scales)\n\nggplot(gapminder,\n       aes(x = gdpPercap, y = lifeExp,\n           color = continent)) +\n  geom_point() +\n  theme_cavis_grids +\n  theme(legend.position = \"top\") +\n  scale_y_continuous(\n    breaks = seq(30, 80, 10)\n  ) +\n  scale_x_continuous(\n    trans = \"log10\",\n    breaks = breaks_log(n = 6, base = 10),\n  )\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/lesson3.1_non_seq_04_output-1.png){width=1056}\n:::\n:::\n::::\n:::::\n\n## Lesson 3: Replace bad labels\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(scales)\n\nggplot(gapminder,\n       aes(x = gdpPercap, y = lifeExp,\n           color = continent)) +\n  geom_point() +\n  theme_cavis_grids +\n  theme(legend.position = \"top\") +\n  scale_y_continuous(\n    breaks = seq(30, 80, 10)\n  ) +\n  scale_x_continuous(\n    trans = \"log10\",\n    breaks = breaks_log(n = 6, base = 10),\n    labels = label_comma()\n  )\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/lesson3.1_non_seq_05_output-1.png){width=1056}\n:::\n:::\n::::\n:::::\n\n## Lesson 3: Replace bad labels\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(scales)\n\nggplot(gapminder,\n       aes(x = gdpPercap, y = lifeExp,\n           color = continent)) +\n  geom_point() +\n  theme_cavis_grids +\n  theme(legend.position = \"top\") +\n  scale_y_continuous(\n    breaks = seq(30, 80, 10)\n  ) +\n  scale_x_continuous(\n    trans = \"log10\",\n    breaks = breaks_log(n = 6, base = 10),\n    labels = label_comma()\n  ) +\n  labs(\n    x = \"GDP per capita (logged)\",\n    y = \"Life expectancy\",\n  )\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/lesson3.1_non_seq_06_output-1.png){width=1056}\n:::\n:::\n::::\n:::::\n\n## Lesson 3: Replace bad labels\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(scales)\n\nggplot(gapminder,\n       aes(x = gdpPercap, y = lifeExp,\n           color = continent)) +\n  geom_point() +\n  theme_cavis_grids +\n  theme(legend.position = \"top\") +\n  scale_y_continuous(\n    breaks = seq(30, 80, 10)\n  ) +\n  scale_x_continuous(\n    trans = \"log10\",\n    breaks = breaks_log(n = 6, base = 10),\n    labels = label_comma()\n  ) +\n  labs(\n    x = \"GDP per capita (logged)\",\n    y = \"Life expectancy\",\n    title = \"Positive association between GDP per capita and life expectancy\",\n    subtitle = \"Data source: Gapminder\"\n  )\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/lesson3.1_non_seq_07_output-1.png){width=1056}\n:::\n:::\n::::\n:::::\n\n\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\n\n# Lesson 4: Choose nice colors {background-color=\"#DFDDE8\"}\n\n## Lesson 4: Choose nice colors\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(RColorBrewer)\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n\n:::\n::::\n:::::\n\n## Lesson 4: Choose nice colors\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(RColorBrewer)\n\n## see all palettes\ndisplay.brewer.all()\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/lesson4.1_auto_02_output-1.png){width=1056}\n:::\n:::\n::::\n:::::\n\n## Lesson 4: Choose nice colors\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(RColorBrewer)\n\n## see all palettes\ndisplay.brewer.all()\n\n## choose specific colors\nset1 <- brewer.pal(n = 5, name = \"Set1\")\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/lesson4.1_auto_03_output-1.png){width=1056}\n:::\n:::\n::::\n:::::\n\n## Lesson 4: Choose nice colors\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(RColorBrewer)\n\n## see all palettes\ndisplay.brewer.all()\n\n## choose specific colors\nset1 <- brewer.pal(n = 5, name = \"Set1\")\ndark2 <- brewer.pal(n = 5, name = \"Dark2\")\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/lesson4.1_auto_04_output-1.png){width=1056}\n:::\n:::\n::::\n:::::\n\n## Lesson 4: Choose nice colors\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(RColorBrewer)\n\n## see all palettes\ndisplay.brewer.all()\n\n## choose specific colors\nset1 <- brewer.pal(n = 5, name = \"Set1\")\ndark2 <- brewer.pal(n = 5, name = \"Dark2\")\n\n## inspect Hex codes\nprint(set1); print(dark2)\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/lesson4.1_auto_05_output-1.png){width=1056}\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"#E41A1C\" \"#377EB8\" \"#4DAF4A\" \"#984EA3\" \"#FF7F00\"\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"#1B9E77\" \"#D95F02\" \"#7570B3\" \"#E7298A\" \"#66A61E\"\n```\n\n\n:::\n:::\n::::\n:::::\n\n\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\n\n## Lesson 4: Choose nice colors\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\nggplot(gapminder,\n       aes(x = gdpPercap, y = lifeExp,\n           color = continent)) +\n  theme_cavis_grids +\n  scale_x_continuous(trans = \"log10\") +\n  theme(legend.position = \"top\") +\n  geom_point(alpha = 0.8) +\n  scale_color_manual(values = set1)\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/lesson4.3_rotate_01_output-1.png){width=1056}\n:::\n:::\n::::\n:::::\n\n## Lesson 4: Choose nice colors\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\nggplot(gapminder,\n       aes(x = gdpPercap, y = lifeExp,\n           color = continent)) +\n  theme_cavis_grids +\n  scale_x_continuous(trans = \"log10\") +\n  theme(legend.position = \"top\") +\n  geom_point(alpha = 0.8) +\n  scale_color_manual(values = dark2)\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/lesson4.3_rotate_02_output-1.png){width=1056}\n:::\n:::\n::::\n:::::\n\n## Lesson 4: Choose nice colors\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\nggplot(gapminder,\n       aes(x = gdpPercap, y = lifeExp,\n           color = continent)) +\n  theme_cavis_grids +\n  scale_x_continuous(trans = \"log10\") +\n  theme(legend.position = \"top\") +\n  geom_point(alpha = 0.8) +\n  scale_color_brewer(type = \"qual\", palette = 4)\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/lesson4.3_rotate_03_output-1.png){width=1056}\n:::\n:::\n::::\n:::::\n\n## Lesson 4: Choose nice colors\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\nggplot(gapminder,\n       aes(x = gdpPercap, y = lifeExp,\n           color = continent)) +\n  theme_cavis_grids +\n  scale_x_continuous(trans = \"log10\") +\n  theme(legend.position = \"top\") +\n  geom_point(alpha = 0.8) +\n  scale_color_brewer(type = \"qual\", palette = 7)\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/lesson4.3_rotate_04_output-1.png){width=1056}\n:::\n:::\n::::\n:::::\n\n\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\n\n# Lesson 5: Use small multiples {background-color=\"#DFDDE8\"}\n\n## Lesson 5: Use small multiples\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\n## create a decade variable\ngapminder\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1,704 × 6\n   country     continent  year lifeExp      pop gdpPercap\n   <fct>       <fct>     <int>   <dbl>    <int>     <dbl>\n 1 Afghanistan Asia       1952    28.8  8425333      779.\n 2 Afghanistan Asia       1957    30.3  9240934      821.\n 3 Afghanistan Asia       1962    32.0 10267083      853.\n 4 Afghanistan Asia       1967    34.0 11537966      836.\n 5 Afghanistan Asia       1972    36.1 13079460      740.\n 6 Afghanistan Asia       1977    38.4 14880372      786.\n 7 Afghanistan Asia       1982    39.9 12881816      978.\n 8 Afghanistan Asia       1987    40.8 13867957      852.\n 9 Afghanistan Asia       1992    41.7 16317921      649.\n10 Afghanistan Asia       1997    41.8 22227415      635.\n# ℹ 1,694 more rows\n```\n\n\n:::\n:::\n::::\n:::::\n\n## Lesson 5: Use small multiples\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\n## create a decade variable\ngapminder %>%\n  mutate(decade = year %/% 10)\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1,704 × 7\n   country     continent  year lifeExp      pop gdpPercap decade\n   <fct>       <fct>     <int>   <dbl>    <int>     <dbl>  <dbl>\n 1 Afghanistan Asia       1952    28.8  8425333      779.    195\n 2 Afghanistan Asia       1957    30.3  9240934      821.    195\n 3 Afghanistan Asia       1962    32.0 10267083      853.    196\n 4 Afghanistan Asia       1967    34.0 11537966      836.    196\n 5 Afghanistan Asia       1972    36.1 13079460      740.    197\n 6 Afghanistan Asia       1977    38.4 14880372      786.    197\n 7 Afghanistan Asia       1982    39.9 12881816      978.    198\n 8 Afghanistan Asia       1987    40.8 13867957      852.    198\n 9 Afghanistan Asia       1992    41.7 16317921      649.    199\n10 Afghanistan Asia       1997    41.8 22227415      635.    199\n# ℹ 1,694 more rows\n```\n\n\n:::\n:::\n::::\n:::::\n\n## Lesson 5: Use small multiples\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\n## create a decade variable\ngapminder %>%\n  mutate(decade = year %/% 10) %>%\n  mutate(decade = decade * 10)\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1,704 × 7\n   country     continent  year lifeExp      pop gdpPercap decade\n   <fct>       <fct>     <int>   <dbl>    <int>     <dbl>  <dbl>\n 1 Afghanistan Asia       1952    28.8  8425333      779.   1950\n 2 Afghanistan Asia       1957    30.3  9240934      821.   1950\n 3 Afghanistan Asia       1962    32.0 10267083      853.   1960\n 4 Afghanistan Asia       1967    34.0 11537966      836.   1960\n 5 Afghanistan Asia       1972    36.1 13079460      740.   1970\n 6 Afghanistan Asia       1977    38.4 14880372      786.   1970\n 7 Afghanistan Asia       1982    39.9 12881816      978.   1980\n 8 Afghanistan Asia       1987    40.8 13867957      852.   1980\n 9 Afghanistan Asia       1992    41.7 16317921      649.   1990\n10 Afghanistan Asia       1997    41.8 22227415      635.   1990\n# ℹ 1,694 more rows\n```\n\n\n:::\n:::\n::::\n:::::\n\n## Lesson 5: Use small multiples\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\n## create a decade variable\ngapminder %>%\n  mutate(decade = year %/% 10) %>%\n  mutate(decade = decade * 10) ->\n  gapminder\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n\n:::\n::::\n:::::\n\n## Lesson 5: Use small multiples\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\n## create a decade variable\ngapminder %>%\n  mutate(decade = year %/% 10) %>%\n  mutate(decade = decade * 10) ->\n  gapminder\n\n## find the means of gdpPerca and lifeExp\ngdpPercap_mean <- log(mean(gapminder$gdpPercap))\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n\n:::\n::::\n:::::\n\n## Lesson 5: Use small multiples\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\n## create a decade variable\ngapminder %>%\n  mutate(decade = year %/% 10) %>%\n  mutate(decade = decade * 10) ->\n  gapminder\n\n## find the means of gdpPerca and lifeExp\ngdpPercap_mean <- log(mean(gapminder$gdpPercap))\nlifeExp_mean <- mean(gapminder$lifeExp)\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n\n:::\n::::\n:::::\n\n\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\n\n## Lesson 5: Use small multiples\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\n## Method 1: facet_grid\nggplot(gapminder,\n       aes(x = log(gdpPercap),\n           y = lifeExp))\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/lesson5.2_auto_01_output-1.png){width=1056}\n:::\n:::\n::::\n:::::\n\n## Lesson 5: Use small multiples\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\n## Method 1: facet_grid\nggplot(gapminder,\n       aes(x = log(gdpPercap),\n           y = lifeExp)) +\n  theme_cavis_grids\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/lesson5.2_auto_02_output-1.png){width=1056}\n:::\n:::\n::::\n:::::\n\n## Lesson 5: Use small multiples\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\n## Method 1: facet_grid\nggplot(gapminder,\n       aes(x = log(gdpPercap),\n           y = lifeExp)) +\n  theme_cavis_grids +\n  facet_grid(continent ~ decade)\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/lesson5.2_auto_03_output-1.png){width=1056}\n:::\n:::\n::::\n:::::\n\n## Lesson 5: Use small multiples\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\n## Method 1: facet_grid\nggplot(gapminder,\n       aes(x = log(gdpPercap),\n           y = lifeExp)) +\n  theme_cavis_grids +\n  facet_grid(continent ~ decade) +\n  geom_point(alpha = 0.5)\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/lesson5.2_auto_04_output-1.png){width=1056}\n:::\n:::\n::::\n:::::\n\n## Lesson 5: Use small multiples\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\n## Method 1: facet_grid\nggplot(gapminder,\n       aes(x = log(gdpPercap),\n           y = lifeExp)) +\n  theme_cavis_grids +\n  facet_grid(continent ~ decade) +\n  geom_point(alpha = 0.5) +\n  geom_vline(xintercept = gdpPercap_mean,\n             linetype = 2,\n             color = \"grey\")\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/lesson5.2_auto_05_output-1.png){width=1056}\n:::\n:::\n::::\n:::::\n\n## Lesson 5: Use small multiples\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\n## Method 1: facet_grid\nggplot(gapminder,\n       aes(x = log(gdpPercap),\n           y = lifeExp)) +\n  theme_cavis_grids +\n  facet_grid(continent ~ decade) +\n  geom_point(alpha = 0.5) +\n  geom_vline(xintercept = gdpPercap_mean,\n             linetype = 2,\n             color = \"grey\") +\n  geom_hline(yintercept = lifeExp_mean,\n             linetype = 2,\n             color = \"grey\")\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/lesson5.2_auto_06_output-1.png){width=1056}\n:::\n:::\n::::\n:::::\n\n\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\n\n## Lesson 5: Use small multiples\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\n## facet_grid vs. facet_wrap\n## Imagine we have some NAs\ngapminder\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1,704 × 7\n   country     continent  year lifeExp      pop gdpPercap decade\n   <fct>       <fct>     <int>   <dbl>    <int>     <dbl>  <dbl>\n 1 Afghanistan Asia       1952    28.8  8425333      779.   1950\n 2 Afghanistan Asia       1957    30.3  9240934      821.   1950\n 3 Afghanistan Asia       1962    32.0 10267083      853.   1960\n 4 Afghanistan Asia       1967    34.0 11537966      836.   1960\n 5 Afghanistan Asia       1972    36.1 13079460      740.   1970\n 6 Afghanistan Asia       1977    38.4 14880372      786.   1970\n 7 Afghanistan Asia       1982    39.9 12881816      978.   1980\n 8 Afghanistan Asia       1987    40.8 13867957      852.   1980\n 9 Afghanistan Asia       1992    41.7 16317921      649.   1990\n10 Afghanistan Asia       1997    41.8 22227415      635.   1990\n# ℹ 1,694 more rows\n```\n\n\n:::\n:::\n::::\n:::::\n\n## Lesson 5: Use small multiples\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\n## facet_grid vs. facet_wrap\n## Imagine we have some NAs\ngapminder %>%\n  group_by(continent, decade)\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1,704 × 7\n# Groups:   continent, decade [30]\n   country     continent  year lifeExp      pop gdpPercap decade\n   <fct>       <fct>     <int>   <dbl>    <int>     <dbl>  <dbl>\n 1 Afghanistan Asia       1952    28.8  8425333      779.   1950\n 2 Afghanistan Asia       1957    30.3  9240934      821.   1950\n 3 Afghanistan Asia       1962    32.0 10267083      853.   1960\n 4 Afghanistan Asia       1967    34.0 11537966      836.   1960\n 5 Afghanistan Asia       1972    36.1 13079460      740.   1970\n 6 Afghanistan Asia       1977    38.4 14880372      786.   1970\n 7 Afghanistan Asia       1982    39.9 12881816      978.   1980\n 8 Afghanistan Asia       1987    40.8 13867957      852.   1980\n 9 Afghanistan Asia       1992    41.7 16317921      649.   1990\n10 Afghanistan Asia       1997    41.8 22227415      635.   1990\n# ℹ 1,694 more rows\n```\n\n\n:::\n:::\n::::\n:::::\n\n## Lesson 5: Use small multiples\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\n## facet_grid vs. facet_wrap\n## Imagine we have some NAs\ngapminder %>%\n  group_by(continent, decade) %>%\n  nest()\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 30 × 3\n# Groups:   continent, decade [30]\n   continent decade data             \n   <fct>      <dbl> <list>           \n 1 Asia        1950 <tibble [66 × 5]>\n 2 Asia        1960 <tibble [66 × 5]>\n 3 Asia        1970 <tibble [66 × 5]>\n 4 Asia        1980 <tibble [66 × 5]>\n 5 Asia        1990 <tibble [66 × 5]>\n 6 Asia        2000 <tibble [66 × 5]>\n 7 Europe      1950 <tibble [60 × 5]>\n 8 Europe      1960 <tibble [60 × 5]>\n 9 Europe      1970 <tibble [60 × 5]>\n10 Europe      1980 <tibble [60 × 5]>\n# ℹ 20 more rows\n```\n\n\n:::\n:::\n::::\n:::::\n\n## Lesson 5: Use small multiples\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\n## facet_grid vs. facet_wrap\n## Imagine we have some NAs\ngapminder %>%\n  group_by(continent, decade) %>%\n  nest() %>%\n  ungroup()\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 30 × 3\n   continent decade data             \n   <fct>      <dbl> <list>           \n 1 Asia        1950 <tibble [66 × 5]>\n 2 Asia        1960 <tibble [66 × 5]>\n 3 Asia        1970 <tibble [66 × 5]>\n 4 Asia        1980 <tibble [66 × 5]>\n 5 Asia        1990 <tibble [66 × 5]>\n 6 Asia        2000 <tibble [66 × 5]>\n 7 Europe      1950 <tibble [60 × 5]>\n 8 Europe      1960 <tibble [60 × 5]>\n 9 Europe      1970 <tibble [60 × 5]>\n10 Europe      1980 <tibble [60 × 5]>\n# ℹ 20 more rows\n```\n\n\n:::\n:::\n::::\n:::::\n\n## Lesson 5: Use small multiples\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\n## facet_grid vs. facet_wrap\n## Imagine we have some NAs\ngapminder %>%\n  group_by(continent, decade) %>%\n  nest() %>%\n  ungroup() %>%\n  slice_sample(n = 10)\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 10 × 3\n   continent decade data              \n   <fct>      <dbl> <list>            \n 1 Asia        1950 <tibble [66 × 5]> \n 2 Africa      1950 <tibble [104 × 5]>\n 3 Americas    1950 <tibble [50 × 5]> \n 4 Americas    2000 <tibble [50 × 5]> \n 5 Europe      2000 <tibble [60 × 5]> \n 6 Americas    1970 <tibble [50 × 5]> \n 7 Europe      1960 <tibble [60 × 5]> \n 8 Asia        1990 <tibble [66 × 5]> \n 9 Africa      1970 <tibble [104 × 5]>\n10 Oceania     1980 <tibble [4 × 5]>  \n```\n\n\n:::\n:::\n::::\n:::::\n\n## Lesson 5: Use small multiples\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\n## facet_grid vs. facet_wrap\n## Imagine we have some NAs\ngapminder %>%\n  group_by(continent, decade) %>%\n  nest() %>%\n  ungroup() %>%\n  slice_sample(n = 10) %>%\n  unnest(cols = data)\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 448 × 7\n   continent decade country      year lifeExp       pop gdpPercap\n   <fct>      <dbl> <fct>       <int>   <dbl>     <int>     <dbl>\n 1 Oceania     1970 Australia    1972    71.9  13177000    16789.\n 2 Oceania     1970 Australia    1977    73.5  14074100    18334.\n 3 Oceania     1970 New Zealand  1972    71.9   2929100    16046.\n 4 Oceania     1970 New Zealand  1977    72.2   3164900    16234.\n 5 Americas    2000 Argentina    2002    74.3  38331121     8798.\n 6 Americas    2000 Argentina    2007    75.3  40301927    12779.\n 7 Americas    2000 Bolivia      2002    63.9   8445134     3413.\n 8 Americas    2000 Bolivia      2007    65.6   9119152     3822.\n 9 Americas    2000 Brazil       2002    71.0 179914212     8131.\n10 Americas    2000 Brazil       2007    72.4 190010647     9066.\n# ℹ 438 more rows\n```\n\n\n:::\n:::\n::::\n:::::\n\n## Lesson 5: Use small multiples\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\n## facet_grid vs. facet_wrap\n## Imagine we have some NAs\ngapminder %>%\n  group_by(continent, decade) %>%\n  nest() %>%\n  ungroup() %>%\n  slice_sample(n = 10) %>%\n  unnest(cols = data) ->\n  gapminder_sample\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n\n:::\n::::\n:::::\n\n\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\n\n## Lesson 5: Use small multiples\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\n## facet_grid vs. facet_wrap\nggplot(gapminder_sample,\n       aes(x = log(gdpPercap),\n           y = lifeExp)) +\n  theme_cavis_grids +\n  geom_point(alpha = 0.5) +\n  facet_grid(continent ~ decade)\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/lesson5.4_rotate_01_output-1.png){width=1056}\n:::\n:::\n::::\n:::::\n\n## Lesson 5: Use small multiples\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\n## facet_grid vs. facet_wrap\nggplot(gapminder_sample,\n       aes(x = log(gdpPercap),\n           y = lifeExp)) +\n  theme_cavis_grids +\n  geom_point(alpha = 0.5) +\n  facet_wrap(continent ~ decade)\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/lesson5.4_rotate_02_output-1.png){width=1056}\n:::\n:::\n::::\n:::::\n\n## Lesson 5: Use small multiples\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\n## facet_grid vs. facet_wrap\nggplot(gapminder_sample,\n       aes(x = log(gdpPercap),\n           y = lifeExp)) +\n  theme_cavis_grids +\n  geom_point(alpha = 0.5) +\n  facet_wrap(continent ~ decade, nrow = 2)\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/lesson5.4_rotate_03_output-1.png){width=1056}\n:::\n:::\n::::\n:::::\n\n\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\n\n## Lesson 5: Use small multiples\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\n## facet_wrap is more flexible\n## but use it carefully...\nggplot(gapminder_sample,\n       aes(x = lifeExp))\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/lesson5.5_auto_01_output-1.png){width=1056}\n:::\n:::\n::::\n:::::\n\n## Lesson 5: Use small multiples\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\n## facet_wrap is more flexible\n## but use it carefully...\nggplot(gapminder_sample,\n       aes(x = lifeExp)) +\n  geom_histogram()\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/lesson5.5_auto_02_output-1.png){width=1056}\n:::\n:::\n::::\n:::::\n\n## Lesson 5: Use small multiples\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\n## facet_wrap is more flexible\n## but use it carefully...\nggplot(gapminder_sample,\n       aes(x = lifeExp)) +\n  geom_histogram() +\n  facet_wrap(~ country, nrow = 6)\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/lesson5.5_auto_03_output-1.png){width=1056}\n:::\n:::\n::::\n:::::\n\n\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\n\n# Lesson 6: Diagonalize (sort) whenever possible {background-color=\"#DFDDE8\"}\n\n## Lesson 6: Diagonalize (sort) whenever possible\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\n## 1. categorize lifeExp\n## 2. select on Asia & Africa\ngapminder\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1,704 × 7\n   country     continent  year lifeExp      pop gdpPercap decade\n   <fct>       <fct>     <int>   <dbl>    <int>     <dbl>  <dbl>\n 1 Afghanistan Asia       1952    28.8  8425333      779.   1950\n 2 Afghanistan Asia       1957    30.3  9240934      821.   1950\n 3 Afghanistan Asia       1962    32.0 10267083      853.   1960\n 4 Afghanistan Asia       1967    34.0 11537966      836.   1960\n 5 Afghanistan Asia       1972    36.1 13079460      740.   1970\n 6 Afghanistan Asia       1977    38.4 14880372      786.   1970\n 7 Afghanistan Asia       1982    39.9 12881816      978.   1980\n 8 Afghanistan Asia       1987    40.8 13867957      852.   1980\n 9 Afghanistan Asia       1992    41.7 16317921      649.   1990\n10 Afghanistan Asia       1997    41.8 22227415      635.   1990\n# ℹ 1,694 more rows\n```\n\n\n:::\n:::\n::::\n:::::\n\n## Lesson 6: Diagonalize (sort) whenever possible\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\n## 1. categorize lifeExp\n## 2. select on Asia & Africa\ngapminder %>%\n  mutate(lifeExp_cat = cut(lifeExp, 5, dig.lab = 2))\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1,704 × 8\n   country     continent  year lifeExp      pop gdpPercap decade lifeExp_cat\n   <fct>       <fct>     <int>   <dbl>    <int>     <dbl>  <dbl> <fct>      \n 1 Afghanistan Asia       1952    28.8  8425333      779.   1950 (24,35]    \n 2 Afghanistan Asia       1957    30.3  9240934      821.   1950 (24,35]    \n 3 Afghanistan Asia       1962    32.0 10267083      853.   1960 (24,35]    \n 4 Afghanistan Asia       1967    34.0 11537966      836.   1960 (24,35]    \n 5 Afghanistan Asia       1972    36.1 13079460      740.   1970 (35,47]    \n 6 Afghanistan Asia       1977    38.4 14880372      786.   1970 (35,47]    \n 7 Afghanistan Asia       1982    39.9 12881816      978.   1980 (35,47]    \n 8 Afghanistan Asia       1987    40.8 13867957      852.   1980 (35,47]    \n 9 Afghanistan Asia       1992    41.7 16317921      649.   1990 (35,47]    \n10 Afghanistan Asia       1997    41.8 22227415      635.   1990 (35,47]    \n# ℹ 1,694 more rows\n```\n\n\n:::\n:::\n::::\n:::::\n\n## Lesson 6: Diagonalize (sort) whenever possible\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\n## 1. categorize lifeExp\n## 2. select on Asia & Africa\ngapminder %>%\n  mutate(lifeExp_cat = cut(lifeExp, 5, dig.lab = 2)) %>%\n  filter(continent %in% c(\"Asia\", \"Africa\"))\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1,020 × 8\n   country     continent  year lifeExp      pop gdpPercap decade lifeExp_cat\n   <fct>       <fct>     <int>   <dbl>    <int>     <dbl>  <dbl> <fct>      \n 1 Afghanistan Asia       1952    28.8  8425333      779.   1950 (24,35]    \n 2 Afghanistan Asia       1957    30.3  9240934      821.   1950 (24,35]    \n 3 Afghanistan Asia       1962    32.0 10267083      853.   1960 (24,35]    \n 4 Afghanistan Asia       1967    34.0 11537966      836.   1960 (24,35]    \n 5 Afghanistan Asia       1972    36.1 13079460      740.   1970 (35,47]    \n 6 Afghanistan Asia       1977    38.4 14880372      786.   1970 (35,47]    \n 7 Afghanistan Asia       1982    39.9 12881816      978.   1980 (35,47]    \n 8 Afghanistan Asia       1987    40.8 13867957      852.   1980 (35,47]    \n 9 Afghanistan Asia       1992    41.7 16317921      649.   1990 (35,47]    \n10 Afghanistan Asia       1997    41.8 22227415      635.   1990 (35,47]    \n# ℹ 1,010 more rows\n```\n\n\n:::\n:::\n::::\n:::::\n\n## Lesson 6: Diagonalize (sort) whenever possible\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\n## 1. categorize lifeExp\n## 2. select on Asia & Africa\ngapminder %>%\n  mutate(lifeExp_cat = cut(lifeExp, 5, dig.lab = 2)) %>%\n  filter(continent %in% c(\"Asia\", \"Africa\")) ->\n  gapminder_aa\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n\n:::\n::::\n:::::\n\n\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\n\n## Lesson 6: Diagonalize (sort) whenever possible\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\nggplot(gapminder_aa,\n       aes(x = year,\n           y = country,\n           fill = lifeExp_cat))\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/lesson6.2_auto_01_output-1.png){width=1056}\n:::\n:::\n::::\n:::::\n\n## Lesson 6: Diagonalize (sort) whenever possible\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\nggplot(gapminder_aa,\n       aes(x = year,\n           y = country,\n           fill = lifeExp_cat)) +\n  geom_tile()\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/lesson6.2_auto_02_output-1.png){width=1056}\n:::\n:::\n::::\n:::::\n\n## Lesson 6: Diagonalize (sort) whenever possible\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\nggplot(gapminder_aa,\n       aes(x = year,\n           y = country,\n           fill = lifeExp_cat)) +\n  geom_tile() +\n  scale_fill_brewer(palette = \"YlGnBu\")\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/lesson6.2_auto_03_output-1.png){width=1056}\n:::\n:::\n::::\n:::::\n\n\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\n\n## Lesson 6: Diagonalize (sort) whenever possible\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\nggplot(gapminder_aa,\n       aes(x = year,\n           y = fct_reorder(country, lifeExp),\n           fill = lifeExp_cat)) +\n  geom_tile() +\n  scale_fill_brewer(palette = \"YlGnBu\")\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/lesson6.3_non_seq_01_output-1.png){width=1056}\n:::\n:::\n::::\n:::::\n\n## Lesson 6: Diagonalize (sort) whenever possible\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\nggplot(gapminder_aa,\n       aes(x = year,\n           y = fct_reorder(country, lifeExp),\n           fill = lifeExp_cat)) +\n  geom_tile() +\n  scale_fill_brewer(palette = \"YlGnBu\") +\n  labs(y = NULL, x = NULL,\n       fill = \"Life Expectancy\")\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/lesson6.3_non_seq_02_output-1.png){width=1056}\n:::\n:::\n::::\n:::::\n\n## Lesson 6: Diagonalize (sort) whenever possible\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\nggplot(gapminder_aa,\n       aes(x = year,\n           y = fct_reorder(country, lifeExp),\n           fill = lifeExp_cat)) +\n  geom_tile() +\n  scale_fill_brewer(palette = \"YlGnBu\") +\n  labs(y = NULL, x = NULL,\n       fill = \"Life Expectancy\") +\n  theme_cavis +\n  theme(aspect.ratio = 1.618,\n        )\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/lesson6.3_non_seq_03_output-1.png){width=1056}\n:::\n:::\n::::\n:::::\n\n## Lesson 6: Diagonalize (sort) whenever possible\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\nggplot(gapminder_aa,\n       aes(x = year,\n           y = fct_reorder(country, lifeExp),\n           fill = lifeExp_cat)) +\n  geom_tile() +\n  scale_fill_brewer(palette = \"YlGnBu\") +\n  labs(y = NULL, x = NULL,\n       fill = \"Life Expectancy\") +\n  theme_cavis +\n  theme(aspect.ratio = 1.618,\n        text = element_text(size = 8),\n        )\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/lesson6.3_non_seq_04_output-1.png){width=1056}\n:::\n:::\n::::\n:::::\n\n## Lesson 6: Diagonalize (sort) whenever possible\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\nggplot(gapminder_aa,\n       aes(x = year,\n           y = fct_reorder(country, lifeExp),\n           fill = lifeExp_cat)) +\n  geom_tile() +\n  scale_fill_brewer(palette = \"YlGnBu\") +\n  labs(y = NULL, x = NULL,\n       fill = \"Life Expectancy\") +\n  theme_cavis +\n  theme(aspect.ratio = 1.618,\n        text = element_text(size = 8),\n        axis.text.y.left = element_text(size = 6),\n        )\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/lesson6.3_non_seq_05_output-1.png){width=1056}\n:::\n:::\n::::\n:::::\n\n## Lesson 6: Diagonalize (sort) whenever possible\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\nggplot(gapminder_aa,\n       aes(x = year,\n           y = fct_reorder(country, lifeExp),\n           fill = lifeExp_cat)) +\n  geom_tile() +\n  scale_fill_brewer(palette = \"YlGnBu\") +\n  labs(y = NULL, x = NULL,\n       fill = \"Life Expectancy\") +\n  theme_cavis +\n  theme(aspect.ratio = 1.618,\n        text = element_text(size = 8),\n        axis.text.y.left = element_text(size = 6),\n        legend.position = \"top\",\n        )\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/lesson6.3_non_seq_06_output-1.png){width=1056}\n:::\n:::\n::::\n:::::\n\n## Lesson 6: Diagonalize (sort) whenever possible\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\nggplot(gapminder_aa,\n       aes(x = year,\n           y = fct_reorder(country, lifeExp),\n           fill = lifeExp_cat)) +\n  geom_tile() +\n  scale_fill_brewer(palette = \"YlGnBu\") +\n  labs(y = NULL, x = NULL,\n       fill = \"Life Expectancy\") +\n  theme_cavis +\n  theme(aspect.ratio = 1.618,\n        text = element_text(size = 8),\n        axis.text.y.left = element_text(size = 6),\n        legend.position = \"top\",\n        legend.text.position = \"top\",\n        )\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/lesson6.3_non_seq_07_output-1.png){width=1056}\n:::\n:::\n::::\n:::::\n\n## Lesson 6: Diagonalize (sort) whenever possible\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\nggplot(gapminder_aa,\n       aes(x = year,\n           y = fct_reorder(country, lifeExp),\n           fill = lifeExp_cat)) +\n  geom_tile() +\n  scale_fill_brewer(palette = \"YlGnBu\") +\n  labs(y = NULL, x = NULL,\n       fill = \"Life Expectancy\") +\n  theme_cavis +\n  theme(aspect.ratio = 1.618,\n        text = element_text(size = 8),\n        axis.text.y.left = element_text(size = 6),\n        legend.position = \"top\",\n        legend.text.position = \"top\",\n        legend.key.height = unit(0.15, \"cm\"),\n        )\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/lesson6.3_non_seq_08_output-1.png){width=1056}\n:::\n:::\n::::\n:::::\n\n## Lesson 6: Diagonalize (sort) whenever possible\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\nggplot(gapminder_aa,\n       aes(x = year,\n           y = fct_reorder(country, lifeExp),\n           fill = lifeExp_cat)) +\n  geom_tile() +\n  scale_fill_brewer(palette = \"YlGnBu\") +\n  labs(y = NULL, x = NULL,\n       fill = \"Life Expectancy\") +\n  theme_cavis +\n  theme(aspect.ratio = 1.618,\n        text = element_text(size = 8),\n        axis.text.y.left = element_text(size = 6),\n        legend.position = \"top\",\n        legend.text.position = \"top\",\n        legend.key.height = unit(0.15, \"cm\"),\n        legend.key.width = unit(0.75, \"cm\")\n        )\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/lesson6.3_non_seq_09_output-1.png){width=1056}\n:::\n:::\n::::\n:::::\n\n## Lesson 6: Diagonalize (sort) whenever possible\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\nggplot(gapminder_aa,\n       aes(x = year,\n           y = fct_reorder(country, lifeExp),\n           fill = lifeExp_cat)) +\n  geom_tile() +\n  scale_fill_brewer(palette = \"YlGnBu\") +\n  labs(y = NULL, x = NULL,\n       fill = \"Life Expectancy\") +\n  theme_cavis +\n  theme(aspect.ratio = 1.618,\n        text = element_text(size = 8),\n        axis.text.y.left = element_text(size = 6),\n        legend.position = \"top\",\n        legend.text.position = \"top\",\n        legend.key.height = unit(0.15, \"cm\"),\n        legend.key.width = unit(0.75, \"cm\")\n        ) +\n  coord_fixed(expand = FALSE)\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/lesson6.3_non_seq_10_output-1.png){width=1056}\n:::\n:::\n::::\n:::::\n\n\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\n\n# Lesson 7: Highlight interesting observations {background-color=\"#DFDDE8\"}\n\n## Lesson 7: Highlight interesting observations\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggrepel)\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n\n:::\n::::\n:::::\n\n## Lesson 7: Highlight interesting observations\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggrepel)\n\ngapminder_aa\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1,020 × 8\n   country     continent  year lifeExp      pop gdpPercap decade lifeExp_cat\n   <fct>       <fct>     <int>   <dbl>    <int>     <dbl>  <dbl> <fct>      \n 1 Afghanistan Asia       1952    28.8  8425333      779.   1950 (24,35]    \n 2 Afghanistan Asia       1957    30.3  9240934      821.   1950 (24,35]    \n 3 Afghanistan Asia       1962    32.0 10267083      853.   1960 (24,35]    \n 4 Afghanistan Asia       1967    34.0 11537966      836.   1960 (24,35]    \n 5 Afghanistan Asia       1972    36.1 13079460      740.   1970 (35,47]    \n 6 Afghanistan Asia       1977    38.4 14880372      786.   1970 (35,47]    \n 7 Afghanistan Asia       1982    39.9 12881816      978.   1980 (35,47]    \n 8 Afghanistan Asia       1987    40.8 13867957      852.   1980 (35,47]    \n 9 Afghanistan Asia       1992    41.7 16317921      649.   1990 (35,47]    \n10 Afghanistan Asia       1997    41.8 22227415      635.   1990 (35,47]    \n# ℹ 1,010 more rows\n```\n\n\n:::\n:::\n::::\n:::::\n\n## Lesson 7: Highlight interesting observations\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggrepel)\n\ngapminder_aa %>%\n  filter(year == 2007)\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 85 × 8\n   country      continent  year lifeExp       pop gdpPercap decade lifeExp_cat\n   <fct>        <fct>     <int>   <dbl>     <int>     <dbl>  <dbl> <fct>      \n 1 Afghanistan  Asia       2007    43.8  31889923      975.   2000 (35,47]    \n 2 Algeria      Africa     2007    72.3  33333216     6223.   2000 (71,83]    \n 3 Angola       Africa     2007    42.7  12420476     4797.   2000 (35,47]    \n 4 Bahrain      Asia       2007    75.6    708573    29796.   2000 (71,83]    \n 5 Bangladesh   Asia       2007    64.1 150448339     1391.   2000 (59,71]    \n 6 Benin        Africa     2007    56.7   8078314     1441.   2000 (47,59]    \n 7 Botswana     Africa     2007    50.7   1639131    12570.   2000 (47,59]    \n 8 Burkina Faso Africa     2007    52.3  14326203     1217.   2000 (47,59]    \n 9 Burundi      Africa     2007    49.6   8390505      430.   2000 (47,59]    \n10 Cambodia     Asia       2007    59.7  14131858     1714.   2000 (59,71]    \n# ℹ 75 more rows\n```\n\n\n:::\n:::\n::::\n:::::\n\n## Lesson 7: Highlight interesting observations\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggrepel)\n\ngapminder_aa %>%\n  filter(year == 2007) ->\n  gapminder_aa_07\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n\n:::\n::::\n:::::\n\n## Lesson 7: Highlight interesting observations\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggrepel)\n\ngapminder_aa %>%\n  filter(year == 2007) ->\n  gapminder_aa_07\n\nggplot(gapminder_aa_07,\n         aes(x = gdpPercap,\n             y = lifeExp))\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/lesson7.1_auto_05_output-1.png){width=1056}\n:::\n:::\n::::\n:::::\n\n## Lesson 7: Highlight interesting observations\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggrepel)\n\ngapminder_aa %>%\n  filter(year == 2007) ->\n  gapminder_aa_07\n\nggplot(gapminder_aa_07,\n         aes(x = gdpPercap,\n             y = lifeExp)) +\n  theme_cavis_grids\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/lesson7.1_auto_06_output-1.png){width=1056}\n:::\n:::\n::::\n:::::\n\n## Lesson 7: Highlight interesting observations\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggrepel)\n\ngapminder_aa %>%\n  filter(year == 2007) ->\n  gapminder_aa_07\n\nggplot(gapminder_aa_07,\n         aes(x = gdpPercap,\n             y = lifeExp)) +\n  theme_cavis_grids +\n  geom_point()\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/lesson7.1_auto_07_output-1.png){width=1056}\n:::\n:::\n::::\n:::::\n\n## Lesson 7: Highlight interesting observations\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggrepel)\n\ngapminder_aa %>%\n  filter(year == 2007) ->\n  gapminder_aa_07\n\nggplot(gapminder_aa_07,\n         aes(x = gdpPercap,\n             y = lifeExp)) +\n  theme_cavis_grids +\n  geom_point() +\n  scale_x_continuous(trans = \"log10\")\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/lesson7.1_auto_08_output-1.png){width=1056}\n:::\n:::\n::::\n:::::\n\n## Lesson 7: Highlight interesting observations\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggrepel)\n\ngapminder_aa %>%\n  filter(year == 2007) ->\n  gapminder_aa_07\n\nggplot(gapminder_aa_07,\n         aes(x = gdpPercap,\n             y = lifeExp)) +\n  theme_cavis_grids +\n  geom_point() +\n  scale_x_continuous(trans = \"log10\") +\n  geom_text(aes(label = country))\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/lesson7.1_auto_09_output-1.png){width=1056}\n:::\n:::\n::::\n:::::\n\n\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\n\n## Lesson 7: Highlight interesting observations\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggrepel)\n\ngapminder_aa %>%\n  filter(year == 2007) ->\n  gapminder_aa_07\n\nggplot(gapminder_aa_07,\n         aes(x = gdpPercap,\n             y = lifeExp)) +\n  theme_cavis_grids +\n  geom_point() +\n  scale_x_continuous(trans = \"log10\") +\n  geom_text_repel(aes(label = country))\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/lesson7.1_rotate_01_output-1.png){width=1056}\n:::\n:::\n::::\n:::::\n\n## Lesson 7: Highlight interesting observations\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggrepel)\n\ngapminder_aa %>%\n  filter(year == 2007) ->\n  gapminder_aa_07\n\nggplot(gapminder_aa_07,\n         aes(x = gdpPercap,\n             y = lifeExp)) +\n  theme_cavis_grids +\n  geom_point() +\n  scale_x_continuous(trans = \"log10\") +\n  geom_label_repel(aes(label = country))\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/lesson7.1_rotate_02_output-1.png){width=1056}\n:::\n:::\n::::\n:::::\n\n## Lesson 7: Highlight interesting observations\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\n## any unusual obs\nggplot(gapminder_aa_07,\n         aes(x = gdpPercap,\n             y = lifeExp)) +\n  theme_cavis_grids +\n  geom_point() +\n  scale_x_continuous(trans = \"log10\")\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/lesson7.2_non_seq_01_output-1.png){width=1056}\n:::\n:::\n::::\n:::::\n\n## Lesson 7: Highlight interesting observations\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\n## any unusual obs\nggplot(gapminder_aa_07,\n         aes(x = gdpPercap,\n             y = lifeExp)) +\n  theme_cavis_grids +\n  geom_point() +\n  scale_x_continuous(trans = \"log10\") +\n  geom_smooth(\n  )\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/lesson7.2_non_seq_02_output-1.png){width=1056}\n:::\n:::\n::::\n:::::\n\n## Lesson 7: Highlight interesting observations\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\n## any unusual obs\nggplot(gapminder_aa_07,\n         aes(x = gdpPercap,\n             y = lifeExp)) +\n  theme_cavis_grids +\n  geom_point() +\n  scale_x_continuous(trans = \"log10\") +\n  geom_smooth(\n    method = \"lm\",\n  )\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/lesson7.2_non_seq_03_output-1.png){width=1056}\n:::\n:::\n::::\n:::::\n\n## Lesson 7: Highlight interesting observations\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\n## any unusual obs\nggplot(gapminder_aa_07,\n         aes(x = gdpPercap,\n             y = lifeExp)) +\n  theme_cavis_grids +\n  geom_point() +\n  scale_x_continuous(trans = \"log10\") +\n  geom_smooth(\n    method = \"lm\",\n    color = \"grey30\"\n  )\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/lesson7.2_non_seq_04_output-1.png){width=1056}\n:::\n:::\n::::\n:::::\n\n\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\n\n## Lesson 7: Highlight interesting observations\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(broom)\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n\n:::\n::::\n:::::\n\n## Lesson 7: Highlight interesting observations\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(broom)\n\nlm_res <- lm(lifeExp ~ log10(gdpPercap),\n             data = gapminder_aa_07)\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n\n:::\n::::\n:::::\n\n## Lesson 7: Highlight interesting observations\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(broom)\n\nlm_res <- lm(lifeExp ~ log10(gdpPercap),\n             data = gapminder_aa_07)\n\nlm_res\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = lifeExp ~ log10(gdpPercap), data = gapminder_aa_07)\n\nCoefficients:\n     (Intercept)  log10(gdpPercap)  \n           8.435            15.176  \n```\n\n\n:::\n:::\n::::\n:::::\n\n## Lesson 7: Highlight interesting observations\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(broom)\n\nlm_res <- lm(lifeExp ~ log10(gdpPercap),\n             data = gapminder_aa_07)\n\nlm_res %>%\n  augment(data = gapminder_aa_07)\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 85 × 14\n   country   continent  year lifeExp    pop gdpPercap decade lifeExp_cat .fitted\n   <fct>     <fct>     <int>   <dbl>  <int>     <dbl>  <dbl> <fct>         <dbl>\n 1 Afghanis… Asia       2007    43.8 3.19e7      975.   2000 (35,47]        53.8\n 2 Algeria   Africa     2007    72.3 3.33e7     6223.   2000 (71,83]        66.0\n 3 Angola    Africa     2007    42.7 1.24e7     4797.   2000 (35,47]        64.3\n 4 Bahrain   Asia       2007    75.6 7.09e5    29796.   2000 (71,83]        76.3\n 5 Banglade… Asia       2007    64.1 1.50e8     1391.   2000 (59,71]        56.1\n 6 Benin     Africa     2007    56.7 8.08e6     1441.   2000 (47,59]        56.4\n 7 Botswana  Africa     2007    50.7 1.64e6    12570.   2000 (47,59]        70.6\n 8 Burkina … Africa     2007    52.3 1.43e7     1217.   2000 (47,59]        55.3\n 9 Burundi   Africa     2007    49.6 8.39e6      430.   2000 (47,59]        48.4\n10 Cambodia  Asia       2007    59.7 1.41e7     1714.   2000 (59,71]        57.5\n# ℹ 75 more rows\n# ℹ 5 more variables: .resid <dbl>, .hat <dbl>, .sigma <dbl>, .cooksd <dbl>,\n#   .std.resid <dbl>\n```\n\n\n:::\n:::\n::::\n:::::\n\n## Lesson 7: Highlight interesting observations\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(broom)\n\nlm_res <- lm(lifeExp ~ log10(gdpPercap),\n             data = gapminder_aa_07)\n\nlm_res %>%\n  augment(data = gapminder_aa_07) ->\n  gapminder_aa_07_augmented\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n\n:::\n::::\n:::::\n\n## Lesson 7: Highlight interesting observations\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(broom)\n\nlm_res <- lm(lifeExp ~ log10(gdpPercap),\n             data = gapminder_aa_07)\n\nlm_res %>%\n  augment(data = gapminder_aa_07) ->\n  gapminder_aa_07_augmented\n\ngapminder_aa_07_augmented\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 85 × 14\n   country   continent  year lifeExp    pop gdpPercap decade lifeExp_cat .fitted\n   <fct>     <fct>     <int>   <dbl>  <int>     <dbl>  <dbl> <fct>         <dbl>\n 1 Afghanis… Asia       2007    43.8 3.19e7      975.   2000 (35,47]        53.8\n 2 Algeria   Africa     2007    72.3 3.33e7     6223.   2000 (71,83]        66.0\n 3 Angola    Africa     2007    42.7 1.24e7     4797.   2000 (35,47]        64.3\n 4 Bahrain   Asia       2007    75.6 7.09e5    29796.   2000 (71,83]        76.3\n 5 Banglade… Asia       2007    64.1 1.50e8     1391.   2000 (59,71]        56.1\n 6 Benin     Africa     2007    56.7 8.08e6     1441.   2000 (47,59]        56.4\n 7 Botswana  Africa     2007    50.7 1.64e6    12570.   2000 (47,59]        70.6\n 8 Burkina … Africa     2007    52.3 1.43e7     1217.   2000 (47,59]        55.3\n 9 Burundi   Africa     2007    49.6 8.39e6      430.   2000 (47,59]        48.4\n10 Cambodia  Asia       2007    59.7 1.41e7     1714.   2000 (59,71]        57.5\n# ℹ 75 more rows\n# ℹ 5 more variables: .resid <dbl>, .hat <dbl>, .sigma <dbl>, .cooksd <dbl>,\n#   .std.resid <dbl>\n```\n\n\n:::\n:::\n::::\n:::::\n\n## Lesson 7: Highlight interesting observations\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(broom)\n\nlm_res <- lm(lifeExp ~ log10(gdpPercap),\n             data = gapminder_aa_07)\n\nlm_res %>%\n  augment(data = gapminder_aa_07) ->\n  gapminder_aa_07_augmented\n\ngapminder_aa_07_augmented %>%\n  slice_max(order_by = abs(.resid), n = 5)\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 14\n  country    continent  year lifeExp    pop gdpPercap decade lifeExp_cat .fitted\n  <fct>      <fct>     <int>   <dbl>  <int>     <dbl>  <dbl> <fct>         <dbl>\n1 Swaziland  Africa     2007    39.6 1.13e6     4513.   2000 (35,47]        63.9\n2 Angola     Africa     2007    42.7 1.24e7     4797.   2000 (35,47]        64.3\n3 Botswana   Africa     2007    50.7 1.64e6    12570.   2000 (47,59]        70.6\n4 South Afr… Africa     2007    49.3 4.40e7     9270.   2000 (47,59]        68.6\n5 Equatoria… Africa     2007    51.6 5.51e5    12154.   2000 (47,59]        70.4\n# ℹ 5 more variables: .resid <dbl>, .hat <dbl>, .sigma <dbl>, .cooksd <dbl>,\n#   .std.resid <dbl>\n```\n\n\n:::\n:::\n::::\n:::::\n\n## Lesson 7: Highlight interesting observations\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(broom)\n\nlm_res <- lm(lifeExp ~ log10(gdpPercap),\n             data = gapminder_aa_07)\n\nlm_res %>%\n  augment(data = gapminder_aa_07) ->\n  gapminder_aa_07_augmented\n\ngapminder_aa_07_augmented %>%\n  slice_max(order_by = abs(.resid), n = 5) ->\n  outliers\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n\n:::\n::::\n:::::\n\n\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\n\n## Lesson 7: Highlight interesting observations\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggforce)\n\nggplot(gapminder_aa_07,\n         aes(x = gdpPercap,\n             y = lifeExp)) +\n  theme_cavis_grids +\n  geom_point() +\n  scale_x_continuous(trans = \"log10\") +\n  geom_smooth(\n    method = \"lm\",\n    color = \"grey30\"\n  )\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/lesson7.4_non_seq_01_output-1.png){width=1056}\n:::\n:::\n::::\n:::::\n\n## Lesson 7: Highlight interesting observations\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggforce)\n\nggplot(gapminder_aa_07,\n         aes(x = gdpPercap,\n             y = lifeExp)) +\n  theme_cavis_grids +\n  geom_point() +\n  scale_x_continuous(trans = \"log10\") +\n  geom_smooth(\n    method = \"lm\",\n    color = \"grey30\"\n  ) +\n  geom_text_repel(data = outliers,\n                  aes(label = country))\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/lesson7.4_non_seq_02_output-1.png){width=1056}\n:::\n:::\n::::\n:::::\n\n## Lesson 7: Highlight interesting observations\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggforce)\n\nggplot(gapminder_aa_07,\n         aes(x = gdpPercap,\n             y = lifeExp)) +\n  theme_cavis_grids +\n  geom_point() +\n  scale_x_continuous(trans = \"log10\") +\n  geom_smooth(\n    method = \"lm\",\n    color = \"grey30\"\n  ) +\n  geom_text_repel(data = outliers,\n                  aes(label = country)) +\n  geom_mark_ellipse(data = outliers,\n                    linetype = 2)\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/lesson7.4_non_seq_03_output-1.png){width=1056}\n:::\n:::\n::::\n:::::\n\n## Lesson 7: Highlight interesting observations\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggforce)\n\nggplot(gapminder_aa_07,\n         aes(x = gdpPercap,\n             y = lifeExp)) +\n  theme_cavis_grids +\n  geom_point() +\n  scale_x_continuous(trans = \"log10\") +\n  geom_smooth(\n    method = \"lm\",\n    color = \"grey30\"\n  ) +\n  geom_text_repel(data = outliers,\n                  aes(label = country)) +\n  geom_mark_ellipse(data = outliers,\n                    linetype = 2) +\n  coord_cartesian(clip = \"off\")\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/lesson7.4_non_seq_04_output-1.png){width=1056}\n:::\n:::\n::::\n:::::\n\n\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\n\n# Lesson 8: Juxtapose observations {background-color=\"#DFDDE8\"}\n\n## Lesson 8: Juxtapose observations\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\ngapminder\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1,704 × 7\n   country     continent  year lifeExp      pop gdpPercap decade\n   <fct>       <fct>     <int>   <dbl>    <int>     <dbl>  <dbl>\n 1 Afghanistan Asia       1952    28.8  8425333      779.   1950\n 2 Afghanistan Asia       1957    30.3  9240934      821.   1950\n 3 Afghanistan Asia       1962    32.0 10267083      853.   1960\n 4 Afghanistan Asia       1967    34.0 11537966      836.   1960\n 5 Afghanistan Asia       1972    36.1 13079460      740.   1970\n 6 Afghanistan Asia       1977    38.4 14880372      786.   1970\n 7 Afghanistan Asia       1982    39.9 12881816      978.   1980\n 8 Afghanistan Asia       1987    40.8 13867957      852.   1980\n 9 Afghanistan Asia       1992    41.7 16317921      649.   1990\n10 Afghanistan Asia       1997    41.8 22227415      635.   1990\n# ℹ 1,694 more rows\n```\n\n\n:::\n:::\n::::\n:::::\n\n## Lesson 8: Juxtapose observations\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\ngapminder %>%\n  filter(continent %in% c(\"Asia\"))\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 396 × 7\n   country     continent  year lifeExp      pop gdpPercap decade\n   <fct>       <fct>     <int>   <dbl>    <int>     <dbl>  <dbl>\n 1 Afghanistan Asia       1952    28.8  8425333      779.   1950\n 2 Afghanistan Asia       1957    30.3  9240934      821.   1950\n 3 Afghanistan Asia       1962    32.0 10267083      853.   1960\n 4 Afghanistan Asia       1967    34.0 11537966      836.   1960\n 5 Afghanistan Asia       1972    36.1 13079460      740.   1970\n 6 Afghanistan Asia       1977    38.4 14880372      786.   1970\n 7 Afghanistan Asia       1982    39.9 12881816      978.   1980\n 8 Afghanistan Asia       1987    40.8 13867957      852.   1980\n 9 Afghanistan Asia       1992    41.7 16317921      649.   1990\n10 Afghanistan Asia       1997    41.8 22227415      635.   1990\n# ℹ 386 more rows\n```\n\n\n:::\n:::\n::::\n:::::\n\n## Lesson 8: Juxtapose observations\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\ngapminder %>%\n  filter(continent %in% c(\"Asia\")) ->\n  gapminder_asia\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n\n:::\n::::\n:::::\n\n## Lesson 8: Juxtapose observations\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\ngapminder %>%\n  filter(continent %in% c(\"Asia\")) ->\n  gapminder_asia\n\nggplot(gapminder_asia,\n       aes(x = year,\n           y = log(gdpPercap),\n           color = country))\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/lesson8.1_auto_04_output-1.png){width=1056}\n:::\n:::\n::::\n:::::\n\n## Lesson 8: Juxtapose observations\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\ngapminder %>%\n  filter(continent %in% c(\"Asia\")) ->\n  gapminder_asia\n\nggplot(gapminder_asia,\n       aes(x = year,\n           y = log(gdpPercap),\n           color = country)) +\n  theme_cavis_hgrid\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/lesson8.1_auto_05_output-1.png){width=1056}\n:::\n:::\n::::\n:::::\n\n## Lesson 8: Juxtapose observations\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\ngapminder %>%\n  filter(continent %in% c(\"Asia\")) ->\n  gapminder_asia\n\nggplot(gapminder_asia,\n       aes(x = year,\n           y = log(gdpPercap),\n           color = country)) +\n  theme_cavis_hgrid +\n  geom_line()\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/lesson8.1_auto_06_output-1.png){width=1056}\n:::\n:::\n::::\n:::::\n\n\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\n\n## Lesson 8: Juxtapose observations\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\nset1 <- RColorBrewer::brewer.pal(n = 5, \"Set1\")\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n\n:::\n::::\n:::::\n\n## Lesson 8: Juxtapose observations\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\nset1 <- RColorBrewer::brewer.pal(n = 5, \"Set1\")\norange <- set1[5]; blue <- set1[2]\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n\n:::\n::::\n:::::\n\n## Lesson 8: Juxtapose observations\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\nset1 <- RColorBrewer::brewer.pal(n = 5, \"Set1\")\norange <- set1[5]; blue <- set1[2]\n\nggplot(gapminder_asia,\n       aes(x = year,\n           y = log(gdpPercap),\n           group = country))\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/lesson8.2_auto_03_output-1.png){width=1056}\n:::\n:::\n::::\n:::::\n\n## Lesson 8: Juxtapose observations\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\nset1 <- RColorBrewer::brewer.pal(n = 5, \"Set1\")\norange <- set1[5]; blue <- set1[2]\n\nggplot(gapminder_asia,\n       aes(x = year,\n           y = log(gdpPercap),\n           group = country)) +\n  theme_cavis_hgrid\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/lesson8.2_auto_04_output-1.png){width=1056}\n:::\n:::\n::::\n:::::\n\n## Lesson 8: Juxtapose observations\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\nset1 <- RColorBrewer::brewer.pal(n = 5, \"Set1\")\norange <- set1[5]; blue <- set1[2]\n\nggplot(gapminder_asia,\n       aes(x = year,\n           y = log(gdpPercap),\n           group = country)) +\n  theme_cavis_hgrid +\n  geom_line(color = \"grey90\")\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/lesson8.2_auto_05_output-1.png){width=1056}\n:::\n:::\n::::\n:::::\n\n## Lesson 8: Juxtapose observations\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\nset1 <- RColorBrewer::brewer.pal(n = 5, \"Set1\")\norange <- set1[5]; blue <- set1[2]\n\nggplot(gapminder_asia,\n       aes(x = year,\n           y = log(gdpPercap),\n           group = country)) +\n  theme_cavis_hgrid +\n  geom_line(color = \"grey90\") +\n  geom_line(\n    data = filter(gapminder_asia,\n                  country == \"Korea, Rep.\"),\n    color = blue\n  )\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/lesson8.2_auto_06_output-1.png){width=1056}\n:::\n:::\n::::\n:::::\n\n## Lesson 8: Juxtapose observations\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\nset1 <- RColorBrewer::brewer.pal(n = 5, \"Set1\")\norange <- set1[5]; blue <- set1[2]\n\nggplot(gapminder_asia,\n       aes(x = year,\n           y = log(gdpPercap),\n           group = country)) +\n  theme_cavis_hgrid +\n  geom_line(color = \"grey90\") +\n  geom_line(\n    data = filter(gapminder_asia,\n                  country == \"Korea, Rep.\"),\n    color = blue\n  ) +\n  geom_line(\n    data = filter(gapminder_asia,\n                  country == \"Korea, Dem. Rep.\"),\n    color = orange\n  )\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/lesson8.2_auto_07_output-1.png){width=1056}\n:::\n:::\n::::\n:::::\n\n## Lesson 8: Juxtapose observations\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\nset1 <- RColorBrewer::brewer.pal(n = 5, \"Set1\")\norange <- set1[5]; blue <- set1[2]\n\nggplot(gapminder_asia,\n       aes(x = year,\n           y = log(gdpPercap),\n           group = country)) +\n  theme_cavis_hgrid +\n  geom_line(color = \"grey90\") +\n  geom_line(\n    data = filter(gapminder_asia,\n                  country == \"Korea, Rep.\"),\n    color = blue\n  ) +\n  geom_line(\n    data = filter(gapminder_asia,\n                  country == \"Korea, Dem. Rep.\"),\n    color = orange\n  ) +\n  annotate(\"text\", label = \"South Korea\",\n           x = 2007, y = 10.2,\n           color = blue)\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/lesson8.2_auto_08_output-1.png){width=1056}\n:::\n:::\n::::\n:::::\n\n## Lesson 8: Juxtapose observations\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\nset1 <- RColorBrewer::brewer.pal(n = 5, \"Set1\")\norange <- set1[5]; blue <- set1[2]\n\nggplot(gapminder_asia,\n       aes(x = year,\n           y = log(gdpPercap),\n           group = country)) +\n  theme_cavis_hgrid +\n  geom_line(color = \"grey90\") +\n  geom_line(\n    data = filter(gapminder_asia,\n                  country == \"Korea, Rep.\"),\n    color = blue\n  ) +\n  geom_line(\n    data = filter(gapminder_asia,\n                  country == \"Korea, Dem. Rep.\"),\n    color = orange\n  ) +\n  annotate(\"text\", label = \"South Korea\",\n           x = 2007, y = 10.2,\n           color = blue) +\n  annotate(\"text\", label = \"North Korea\",\n           x = 2007, y = 7.6,\n           color = orange)\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/lesson8.2_auto_09_output-1.png){width=1056}\n:::\n:::\n::::\n:::::\n\n\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\n\n# Lesson 9: Present uncertainty {background-color=\"#DFDDE8\"}\n\n## Lesson 9: Present uncertainty\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\n## Run some regression models\ngapminder\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1,704 × 7\n   country     continent  year lifeExp      pop gdpPercap decade\n   <fct>       <fct>     <int>   <dbl>    <int>     <dbl>  <dbl>\n 1 Afghanistan Asia       1952    28.8  8425333      779.   1950\n 2 Afghanistan Asia       1957    30.3  9240934      821.   1950\n 3 Afghanistan Asia       1962    32.0 10267083      853.   1960\n 4 Afghanistan Asia       1967    34.0 11537966      836.   1960\n 5 Afghanistan Asia       1972    36.1 13079460      740.   1970\n 6 Afghanistan Asia       1977    38.4 14880372      786.   1970\n 7 Afghanistan Asia       1982    39.9 12881816      978.   1980\n 8 Afghanistan Asia       1987    40.8 13867957      852.   1980\n 9 Afghanistan Asia       1992    41.7 16317921      649.   1990\n10 Afghanistan Asia       1997    41.8 22227415      635.   1990\n# ℹ 1,694 more rows\n```\n\n\n:::\n:::\n::::\n:::::\n\n## Lesson 9: Present uncertainty\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\n## Run some regression models\ngapminder %>%\n  mutate(decade = factor(decade))\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1,704 × 7\n   country     continent  year lifeExp      pop gdpPercap decade\n   <fct>       <fct>     <int>   <dbl>    <int>     <dbl> <fct> \n 1 Afghanistan Asia       1952    28.8  8425333      779. 1950  \n 2 Afghanistan Asia       1957    30.3  9240934      821. 1950  \n 3 Afghanistan Asia       1962    32.0 10267083      853. 1960  \n 4 Afghanistan Asia       1967    34.0 11537966      836. 1960  \n 5 Afghanistan Asia       1972    36.1 13079460      740. 1970  \n 6 Afghanistan Asia       1977    38.4 14880372      786. 1970  \n 7 Afghanistan Asia       1982    39.9 12881816      978. 1980  \n 8 Afghanistan Asia       1987    40.8 13867957      852. 1980  \n 9 Afghanistan Asia       1992    41.7 16317921      649. 1990  \n10 Afghanistan Asia       1997    41.8 22227415      635. 1990  \n# ℹ 1,694 more rows\n```\n\n\n:::\n:::\n::::\n:::::\n\n## Lesson 9: Present uncertainty\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\n## Run some regression models\ngapminder %>%\n  mutate(decade = factor(decade)) %>%\n  mutate(continent = fct_relevel(continent, \"Asia\"))\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1,704 × 7\n   country     continent  year lifeExp      pop gdpPercap decade\n   <fct>       <fct>     <int>   <dbl>    <int>     <dbl> <fct> \n 1 Afghanistan Asia       1952    28.8  8425333      779. 1950  \n 2 Afghanistan Asia       1957    30.3  9240934      821. 1950  \n 3 Afghanistan Asia       1962    32.0 10267083      853. 1960  \n 4 Afghanistan Asia       1967    34.0 11537966      836. 1960  \n 5 Afghanistan Asia       1972    36.1 13079460      740. 1970  \n 6 Afghanistan Asia       1977    38.4 14880372      786. 1970  \n 7 Afghanistan Asia       1982    39.9 12881816      978. 1980  \n 8 Afghanistan Asia       1987    40.8 13867957      852. 1980  \n 9 Afghanistan Asia       1992    41.7 16317921      649. 1990  \n10 Afghanistan Asia       1997    41.8 22227415      635. 1990  \n# ℹ 1,694 more rows\n```\n\n\n:::\n:::\n::::\n:::::\n\n## Lesson 9: Present uncertainty\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\n## Run some regression models\ngapminder %>%\n  mutate(decade = factor(decade)) %>%\n  mutate(continent = fct_relevel(continent, \"Asia\")) ->\n  gapminder\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n\n:::\n::::\n:::::\n\n## Lesson 9: Present uncertainty\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\n## Run some regression models\ngapminder %>%\n  mutate(decade = factor(decade)) %>%\n  mutate(continent = fct_relevel(continent, \"Asia\")) ->\n  gapminder\n\nm1 <- lifeExp ~ log(gdpPercap) + log(pop)\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n\n:::\n::::\n:::::\n\n## Lesson 9: Present uncertainty\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\n## Run some regression models\ngapminder %>%\n  mutate(decade = factor(decade)) %>%\n  mutate(continent = fct_relevel(continent, \"Asia\")) ->\n  gapminder\n\nm1 <- lifeExp ~ log(gdpPercap) + log(pop)\nm2 <- lifeExp ~ log(gdpPercap) + log(pop) + continent\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n\n:::\n::::\n:::::\n\n## Lesson 9: Present uncertainty\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\n## Run some regression models\ngapminder %>%\n  mutate(decade = factor(decade)) %>%\n  mutate(continent = fct_relevel(continent, \"Asia\")) ->\n  gapminder\n\nm1 <- lifeExp ~ log(gdpPercap) + log(pop)\nm2 <- lifeExp ~ log(gdpPercap) + log(pop) + continent\nm3 <- lifeExp ~ log(gdpPercap) + log(pop) + continent + decade\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n\n:::\n::::\n:::::\n\n## Lesson 9: Present uncertainty\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\n## Run some regression models\ngapminder %>%\n  mutate(decade = factor(decade)) %>%\n  mutate(continent = fct_relevel(continent, \"Asia\")) ->\n  gapminder\n\nm1 <- lifeExp ~ log(gdpPercap) + log(pop)\nm2 <- lifeExp ~ log(gdpPercap) + log(pop) + continent\nm3 <- lifeExp ~ log(gdpPercap) + log(pop) + continent + decade\n\nm1_res <- lm(m1, data = gapminder)\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n\n:::\n::::\n:::::\n\n## Lesson 9: Present uncertainty\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\n## Run some regression models\ngapminder %>%\n  mutate(decade = factor(decade)) %>%\n  mutate(continent = fct_relevel(continent, \"Asia\")) ->\n  gapminder\n\nm1 <- lifeExp ~ log(gdpPercap) + log(pop)\nm2 <- lifeExp ~ log(gdpPercap) + log(pop) + continent\nm3 <- lifeExp ~ log(gdpPercap) + log(pop) + continent + decade\n\nm1_res <- lm(m1, data = gapminder)\nm2_res <- lm(m2, data = gapminder)\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n\n:::\n::::\n:::::\n\n## Lesson 9: Present uncertainty\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\n## Run some regression models\ngapminder %>%\n  mutate(decade = factor(decade)) %>%\n  mutate(continent = fct_relevel(continent, \"Asia\")) ->\n  gapminder\n\nm1 <- lifeExp ~ log(gdpPercap) + log(pop)\nm2 <- lifeExp ~ log(gdpPercap) + log(pop) + continent\nm3 <- lifeExp ~ log(gdpPercap) + log(pop) + continent + decade\n\nm1_res <- lm(m1, data = gapminder)\nm2_res <- lm(m2, data = gapminder)\nm3_res <- lm(m3, data = gapminder)\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n\n:::\n::::\n:::::\n\n\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\n\n## Lesson 9: Present uncertainty\n\n\n\n\n\n\n::: {.cell}\n<style type=\"text/css\">\n.table, th, td {\n  font-size: 0.6em;\n} \n.table tbody td, .table thead tr {\n    white-space: nowrap;\n}\n</style>\n:::\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code}\nlibrary(modelsummary)\n\nmodelsummary(list(m1_res, m2_res, m3_res), \n             gof_map = c(\"nobs\", \"r.squared\"),\n             stars = TRUE) \n```\n\n::: {.cell-output-display}\n\n```{=html}\n<!-- preamble start -->\n\n    <script>\n      function styleCell_pckzlsdhstg5o2bdrzps(i, j, css_id) {\n        var table = document.getElementById(\"tinytable_pckzlsdhstg5o2bdrzps\");\n        table.rows[i].cells[j].classList.add(css_id);\n      }\n      function insertSpanRow(i, colspan, content) {\n        var table = document.getElementById('tinytable_pckzlsdhstg5o2bdrzps');\n        var newRow = table.insertRow(i);\n        var newCell = newRow.insertCell(0);\n        newCell.setAttribute(\"colspan\", colspan);\n        // newCell.innerText = content;\n        // this may be unsafe, but innerText does not interpret <br>\n        newCell.innerHTML = content;\n      }\n      function spanCell_pckzlsdhstg5o2bdrzps(i, j, rowspan, colspan) {\n        var table = document.getElementById(\"tinytable_pckzlsdhstg5o2bdrzps\");\n        const targetRow = table.rows[i];\n        const targetCell = targetRow.cells[j];\n        for (let r = 0; r < rowspan; r++) {\n          // Only start deleting cells to the right for the first row (r == 0)\n          if (r === 0) {\n            // Delete cells to the right of the target cell in the first row\n            for (let c = colspan - 1; c > 0; c--) {\n              if (table.rows[i + r].cells[j + c]) {\n                table.rows[i + r].deleteCell(j + c);\n              }\n            }\n          }\n          // For rows below the first, delete starting from the target column\n          if (r > 0) {\n            for (let c = colspan - 1; c >= 0; c--) {\n              if (table.rows[i + r] && table.rows[i + r].cells[j]) {\n                table.rows[i + r].deleteCell(j);\n              }\n            }\n          }\n        }\n        // Set rowspan and colspan of the target cell\n        targetCell.rowSpan = rowspan;\n        targetCell.colSpan = colspan;\n      }\nwindow.addEventListener('load', function () { styleCell_pckzlsdhstg5o2bdrzps(0, 0, 'tinytable_css_idzayxy8u47hg301k95alc') })\nwindow.addEventListener('load', function () { styleCell_pckzlsdhstg5o2bdrzps(0, 1, 'tinytable_css_idni5v1ida4gmkciae5cik') })\nwindow.addEventListener('load', function () { styleCell_pckzlsdhstg5o2bdrzps(0, 2, 'tinytable_css_idni5v1ida4gmkciae5cik') })\nwindow.addEventListener('load', function () { styleCell_pckzlsdhstg5o2bdrzps(0, 3, 'tinytable_css_idni5v1ida4gmkciae5cik') })\nwindow.addEventListener('load', function () { styleCell_pckzlsdhstg5o2bdrzps(1, 0, 'tinytable_css_idfmrxkzvlj5rhsn8295gn') })\nwindow.addEventListener('load', function () { styleCell_pckzlsdhstg5o2bdrzps(1, 1, 'tinytable_css_idfmc6cm36ag1e58xu2c7v') })\nwindow.addEventListener('load', function () { styleCell_pckzlsdhstg5o2bdrzps(1, 2, 'tinytable_css_idfmc6cm36ag1e58xu2c7v') })\nwindow.addEventListener('load', function () { styleCell_pckzlsdhstg5o2bdrzps(1, 3, 'tinytable_css_idfmc6cm36ag1e58xu2c7v') })\nwindow.addEventListener('load', function () { styleCell_pckzlsdhstg5o2bdrzps(2, 0, 'tinytable_css_idfmrxkzvlj5rhsn8295gn') })\nwindow.addEventListener('load', function () { styleCell_pckzlsdhstg5o2bdrzps(2, 1, 'tinytable_css_idfmc6cm36ag1e58xu2c7v') })\nwindow.addEventListener('load', function () { styleCell_pckzlsdhstg5o2bdrzps(2, 2, 'tinytable_css_idfmc6cm36ag1e58xu2c7v') })\nwindow.addEventListener('load', function () { styleCell_pckzlsdhstg5o2bdrzps(2, 3, 'tinytable_css_idfmc6cm36ag1e58xu2c7v') })\nwindow.addEventListener('load', function () { styleCell_pckzlsdhstg5o2bdrzps(3, 0, 'tinytable_css_idfmrxkzvlj5rhsn8295gn') })\nwindow.addEventListener('load', function () { styleCell_pckzlsdhstg5o2bdrzps(3, 1, 'tinytable_css_idfmc6cm36ag1e58xu2c7v') })\nwindow.addEventListener('load', function () { styleCell_pckzlsdhstg5o2bdrzps(3, 2, 'tinytable_css_idfmc6cm36ag1e58xu2c7v') })\nwindow.addEventListener('load', function () { styleCell_pckzlsdhstg5o2bdrzps(3, 3, 'tinytable_css_idfmc6cm36ag1e58xu2c7v') })\nwindow.addEventListener('load', function () { styleCell_pckzlsdhstg5o2bdrzps(4, 0, 'tinytable_css_idfmrxkzvlj5rhsn8295gn') })\nwindow.addEventListener('load', function () { styleCell_pckzlsdhstg5o2bdrzps(4, 1, 'tinytable_css_idfmc6cm36ag1e58xu2c7v') })\nwindow.addEventListener('load', function () { styleCell_pckzlsdhstg5o2bdrzps(4, 2, 'tinytable_css_idfmc6cm36ag1e58xu2c7v') })\nwindow.addEventListener('load', function () { styleCell_pckzlsdhstg5o2bdrzps(4, 3, 'tinytable_css_idfmc6cm36ag1e58xu2c7v') })\nwindow.addEventListener('load', function () { styleCell_pckzlsdhstg5o2bdrzps(5, 0, 'tinytable_css_idfmrxkzvlj5rhsn8295gn') })\nwindow.addEventListener('load', function () { styleCell_pckzlsdhstg5o2bdrzps(5, 1, 'tinytable_css_idfmc6cm36ag1e58xu2c7v') })\nwindow.addEventListener('load', function () { styleCell_pckzlsdhstg5o2bdrzps(5, 2, 'tinytable_css_idfmc6cm36ag1e58xu2c7v') })\nwindow.addEventListener('load', function () { styleCell_pckzlsdhstg5o2bdrzps(5, 3, 'tinytable_css_idfmc6cm36ag1e58xu2c7v') })\nwindow.addEventListener('load', function () { styleCell_pckzlsdhstg5o2bdrzps(6, 0, 'tinytable_css_idfmrxkzvlj5rhsn8295gn') })\nwindow.addEventListener('load', function () { styleCell_pckzlsdhstg5o2bdrzps(6, 1, 'tinytable_css_idfmc6cm36ag1e58xu2c7v') })\nwindow.addEventListener('load', function () { styleCell_pckzlsdhstg5o2bdrzps(6, 2, 'tinytable_css_idfmc6cm36ag1e58xu2c7v') })\nwindow.addEventListener('load', function () { styleCell_pckzlsdhstg5o2bdrzps(6, 3, 'tinytable_css_idfmc6cm36ag1e58xu2c7v') })\nwindow.addEventListener('load', function () { styleCell_pckzlsdhstg5o2bdrzps(7, 0, 'tinytable_css_idfmrxkzvlj5rhsn8295gn') })\nwindow.addEventListener('load', function () { styleCell_pckzlsdhstg5o2bdrzps(7, 1, 'tinytable_css_idfmc6cm36ag1e58xu2c7v') })\nwindow.addEventListener('load', function () { styleCell_pckzlsdhstg5o2bdrzps(7, 2, 'tinytable_css_idfmc6cm36ag1e58xu2c7v') })\nwindow.addEventListener('load', function () { styleCell_pckzlsdhstg5o2bdrzps(7, 3, 'tinytable_css_idfmc6cm36ag1e58xu2c7v') })\nwindow.addEventListener('load', function () { styleCell_pckzlsdhstg5o2bdrzps(8, 0, 'tinytable_css_idfmrxkzvlj5rhsn8295gn') })\nwindow.addEventListener('load', function () { styleCell_pckzlsdhstg5o2bdrzps(8, 1, 'tinytable_css_idfmc6cm36ag1e58xu2c7v') })\nwindow.addEventListener('load', function () { styleCell_pckzlsdhstg5o2bdrzps(8, 2, 'tinytable_css_idfmc6cm36ag1e58xu2c7v') })\nwindow.addEventListener('load', function () { styleCell_pckzlsdhstg5o2bdrzps(8, 3, 'tinytable_css_idfmc6cm36ag1e58xu2c7v') })\nwindow.addEventListener('load', function () { styleCell_pckzlsdhstg5o2bdrzps(9, 0, 'tinytable_css_idfmrxkzvlj5rhsn8295gn') })\nwindow.addEventListener('load', function () { styleCell_pckzlsdhstg5o2bdrzps(9, 1, 'tinytable_css_idfmc6cm36ag1e58xu2c7v') })\nwindow.addEventListener('load', function () { styleCell_pckzlsdhstg5o2bdrzps(9, 2, 'tinytable_css_idfmc6cm36ag1e58xu2c7v') })\nwindow.addEventListener('load', function () { styleCell_pckzlsdhstg5o2bdrzps(9, 3, 'tinytable_css_idfmc6cm36ag1e58xu2c7v') })\nwindow.addEventListener('load', function () { styleCell_pckzlsdhstg5o2bdrzps(10, 0, 'tinytable_css_idfmrxkzvlj5rhsn8295gn') })\nwindow.addEventListener('load', function () { styleCell_pckzlsdhstg5o2bdrzps(10, 1, 'tinytable_css_idfmc6cm36ag1e58xu2c7v') })\nwindow.addEventListener('load', function () { styleCell_pckzlsdhstg5o2bdrzps(10, 2, 'tinytable_css_idfmc6cm36ag1e58xu2c7v') })\nwindow.addEventListener('load', function () { styleCell_pckzlsdhstg5o2bdrzps(10, 3, 'tinytable_css_idfmc6cm36ag1e58xu2c7v') })\nwindow.addEventListener('load', function () { styleCell_pckzlsdhstg5o2bdrzps(11, 0, 'tinytable_css_idfmrxkzvlj5rhsn8295gn') })\nwindow.addEventListener('load', function () { styleCell_pckzlsdhstg5o2bdrzps(11, 1, 'tinytable_css_idfmc6cm36ag1e58xu2c7v') })\nwindow.addEventListener('load', function () { styleCell_pckzlsdhstg5o2bdrzps(11, 2, 'tinytable_css_idfmc6cm36ag1e58xu2c7v') })\nwindow.addEventListener('load', function () { styleCell_pckzlsdhstg5o2bdrzps(11, 3, 'tinytable_css_idfmc6cm36ag1e58xu2c7v') })\nwindow.addEventListener('load', function () { styleCell_pckzlsdhstg5o2bdrzps(12, 0, 'tinytable_css_idfmrxkzvlj5rhsn8295gn') })\nwindow.addEventListener('load', function () { styleCell_pckzlsdhstg5o2bdrzps(12, 1, 'tinytable_css_idfmc6cm36ag1e58xu2c7v') })\nwindow.addEventListener('load', function () { styleCell_pckzlsdhstg5o2bdrzps(12, 2, 'tinytable_css_idfmc6cm36ag1e58xu2c7v') })\nwindow.addEventListener('load', function () { styleCell_pckzlsdhstg5o2bdrzps(12, 3, 'tinytable_css_idfmc6cm36ag1e58xu2c7v') })\nwindow.addEventListener('load', function () { styleCell_pckzlsdhstg5o2bdrzps(13, 0, 'tinytable_css_idfmrxkzvlj5rhsn8295gn') })\nwindow.addEventListener('load', function () { styleCell_pckzlsdhstg5o2bdrzps(13, 1, 'tinytable_css_idfmc6cm36ag1e58xu2c7v') })\nwindow.addEventListener('load', function () { styleCell_pckzlsdhstg5o2bdrzps(13, 2, 'tinytable_css_idfmc6cm36ag1e58xu2c7v') })\nwindow.addEventListener('load', function () { styleCell_pckzlsdhstg5o2bdrzps(13, 3, 'tinytable_css_idfmc6cm36ag1e58xu2c7v') })\nwindow.addEventListener('load', function () { styleCell_pckzlsdhstg5o2bdrzps(14, 0, 'tinytable_css_idfmrxkzvlj5rhsn8295gn') })\nwindow.addEventListener('load', function () { styleCell_pckzlsdhstg5o2bdrzps(14, 1, 'tinytable_css_idfmc6cm36ag1e58xu2c7v') })\nwindow.addEventListener('load', function () { styleCell_pckzlsdhstg5o2bdrzps(14, 2, 'tinytable_css_idfmc6cm36ag1e58xu2c7v') })\nwindow.addEventListener('load', function () { styleCell_pckzlsdhstg5o2bdrzps(14, 3, 'tinytable_css_idfmc6cm36ag1e58xu2c7v') })\nwindow.addEventListener('load', function () { styleCell_pckzlsdhstg5o2bdrzps(15, 0, 'tinytable_css_idfmrxkzvlj5rhsn8295gn') })\nwindow.addEventListener('load', function () { styleCell_pckzlsdhstg5o2bdrzps(15, 1, 'tinytable_css_idfmc6cm36ag1e58xu2c7v') })\nwindow.addEventListener('load', function () { styleCell_pckzlsdhstg5o2bdrzps(15, 2, 'tinytable_css_idfmc6cm36ag1e58xu2c7v') })\nwindow.addEventListener('load', function () { styleCell_pckzlsdhstg5o2bdrzps(15, 3, 'tinytable_css_idfmc6cm36ag1e58xu2c7v') })\nwindow.addEventListener('load', function () { styleCell_pckzlsdhstg5o2bdrzps(16, 0, 'tinytable_css_idfmrxkzvlj5rhsn8295gn') })\nwindow.addEventListener('load', function () { styleCell_pckzlsdhstg5o2bdrzps(16, 1, 'tinytable_css_idfmc6cm36ag1e58xu2c7v') })\nwindow.addEventListener('load', function () { styleCell_pckzlsdhstg5o2bdrzps(16, 2, 'tinytable_css_idfmc6cm36ag1e58xu2c7v') })\nwindow.addEventListener('load', function () { styleCell_pckzlsdhstg5o2bdrzps(16, 3, 'tinytable_css_idfmc6cm36ag1e58xu2c7v') })\nwindow.addEventListener('load', function () { styleCell_pckzlsdhstg5o2bdrzps(17, 0, 'tinytable_css_idfmrxkzvlj5rhsn8295gn') })\nwindow.addEventListener('load', function () { styleCell_pckzlsdhstg5o2bdrzps(17, 1, 'tinytable_css_idfmc6cm36ag1e58xu2c7v') })\nwindow.addEventListener('load', function () { styleCell_pckzlsdhstg5o2bdrzps(17, 2, 'tinytable_css_idfmc6cm36ag1e58xu2c7v') })\nwindow.addEventListener('load', function () { styleCell_pckzlsdhstg5o2bdrzps(17, 3, 'tinytable_css_idfmc6cm36ag1e58xu2c7v') })\nwindow.addEventListener('load', function () { styleCell_pckzlsdhstg5o2bdrzps(18, 0, 'tinytable_css_idfmrxkzvlj5rhsn8295gn') })\nwindow.addEventListener('load', function () { styleCell_pckzlsdhstg5o2bdrzps(18, 1, 'tinytable_css_idfmc6cm36ag1e58xu2c7v') })\nwindow.addEventListener('load', function () { styleCell_pckzlsdhstg5o2bdrzps(18, 2, 'tinytable_css_idfmc6cm36ag1e58xu2c7v') })\nwindow.addEventListener('load', function () { styleCell_pckzlsdhstg5o2bdrzps(18, 3, 'tinytable_css_idfmc6cm36ag1e58xu2c7v') })\nwindow.addEventListener('load', function () { styleCell_pckzlsdhstg5o2bdrzps(19, 0, 'tinytable_css_idfmrxkzvlj5rhsn8295gn') })\nwindow.addEventListener('load', function () { styleCell_pckzlsdhstg5o2bdrzps(19, 1, 'tinytable_css_idfmc6cm36ag1e58xu2c7v') })\nwindow.addEventListener('load', function () { styleCell_pckzlsdhstg5o2bdrzps(19, 2, 'tinytable_css_idfmc6cm36ag1e58xu2c7v') })\nwindow.addEventListener('load', function () { styleCell_pckzlsdhstg5o2bdrzps(19, 3, 'tinytable_css_idfmc6cm36ag1e58xu2c7v') })\nwindow.addEventListener('load', function () { styleCell_pckzlsdhstg5o2bdrzps(20, 0, 'tinytable_css_idfmrxkzvlj5rhsn8295gn') })\nwindow.addEventListener('load', function () { styleCell_pckzlsdhstg5o2bdrzps(20, 1, 'tinytable_css_idfmc6cm36ag1e58xu2c7v') })\nwindow.addEventListener('load', function () { styleCell_pckzlsdhstg5o2bdrzps(20, 2, 'tinytable_css_idfmc6cm36ag1e58xu2c7v') })\nwindow.addEventListener('load', function () { styleCell_pckzlsdhstg5o2bdrzps(20, 3, 'tinytable_css_idfmc6cm36ag1e58xu2c7v') })\nwindow.addEventListener('load', function () { styleCell_pckzlsdhstg5o2bdrzps(21, 0, 'tinytable_css_idfmrxkzvlj5rhsn8295gn') })\nwindow.addEventListener('load', function () { styleCell_pckzlsdhstg5o2bdrzps(21, 1, 'tinytable_css_idfmc6cm36ag1e58xu2c7v') })\nwindow.addEventListener('load', function () { styleCell_pckzlsdhstg5o2bdrzps(21, 2, 'tinytable_css_idfmc6cm36ag1e58xu2c7v') })\nwindow.addEventListener('load', function () { styleCell_pckzlsdhstg5o2bdrzps(21, 3, 'tinytable_css_idfmc6cm36ag1e58xu2c7v') })\nwindow.addEventListener('load', function () { styleCell_pckzlsdhstg5o2bdrzps(22, 0, 'tinytable_css_idfmrxkzvlj5rhsn8295gn') })\nwindow.addEventListener('load', function () { styleCell_pckzlsdhstg5o2bdrzps(22, 1, 'tinytable_css_idfmc6cm36ag1e58xu2c7v') })\nwindow.addEventListener('load', function () { styleCell_pckzlsdhstg5o2bdrzps(22, 2, 'tinytable_css_idfmc6cm36ag1e58xu2c7v') })\nwindow.addEventListener('load', function () { styleCell_pckzlsdhstg5o2bdrzps(22, 3, 'tinytable_css_idfmc6cm36ag1e58xu2c7v') })\nwindow.addEventListener('load', function () { styleCell_pckzlsdhstg5o2bdrzps(23, 0, 'tinytable_css_idfmrxkzvlj5rhsn8295gn') })\nwindow.addEventListener('load', function () { styleCell_pckzlsdhstg5o2bdrzps(23, 1, 'tinytable_css_idfmc6cm36ag1e58xu2c7v') })\nwindow.addEventListener('load', function () { styleCell_pckzlsdhstg5o2bdrzps(23, 2, 'tinytable_css_idfmc6cm36ag1e58xu2c7v') })\nwindow.addEventListener('load', function () { styleCell_pckzlsdhstg5o2bdrzps(23, 3, 'tinytable_css_idfmc6cm36ag1e58xu2c7v') })\nwindow.addEventListener('load', function () { styleCell_pckzlsdhstg5o2bdrzps(24, 0, 'tinytable_css_idtdcmvt5r8nt7jfmdwxv1') })\nwindow.addEventListener('load', function () { styleCell_pckzlsdhstg5o2bdrzps(24, 1, 'tinytable_css_idjpiy36wtx86qcr9eh9uo') })\nwindow.addEventListener('load', function () { styleCell_pckzlsdhstg5o2bdrzps(24, 2, 'tinytable_css_idjpiy36wtx86qcr9eh9uo') })\nwindow.addEventListener('load', function () { styleCell_pckzlsdhstg5o2bdrzps(24, 3, 'tinytable_css_idjpiy36wtx86qcr9eh9uo') })\nwindow.addEventListener('load', function () { styleCell_pckzlsdhstg5o2bdrzps(25, 0, 'tinytable_css_idfmrxkzvlj5rhsn8295gn') })\nwindow.addEventListener('load', function () { styleCell_pckzlsdhstg5o2bdrzps(25, 1, 'tinytable_css_idfmc6cm36ag1e58xu2c7v') })\nwindow.addEventListener('load', function () { styleCell_pckzlsdhstg5o2bdrzps(25, 2, 'tinytable_css_idfmc6cm36ag1e58xu2c7v') })\nwindow.addEventListener('load', function () { styleCell_pckzlsdhstg5o2bdrzps(25, 3, 'tinytable_css_idfmc6cm36ag1e58xu2c7v') })\nwindow.addEventListener('load', function () { styleCell_pckzlsdhstg5o2bdrzps(26, 0, 'tinytable_css_idfmrxkzvlj5rhsn8295gn') })\nwindow.addEventListener('load', function () { styleCell_pckzlsdhstg5o2bdrzps(26, 1, 'tinytable_css_idfmc6cm36ag1e58xu2c7v') })\nwindow.addEventListener('load', function () { styleCell_pckzlsdhstg5o2bdrzps(26, 2, 'tinytable_css_idfmc6cm36ag1e58xu2c7v') })\nwindow.addEventListener('load', function () { styleCell_pckzlsdhstg5o2bdrzps(26, 3, 'tinytable_css_idfmc6cm36ag1e58xu2c7v') })\nwindow.addEventListener('load', function () { styleCell_pckzlsdhstg5o2bdrzps(27, 0, 'tinytable_css_idfmrxkzvlj5rhsn8295gn') })\nwindow.addEventListener('load', function () { styleCell_pckzlsdhstg5o2bdrzps(27, 1, 'tinytable_css_idfmrxkzvlj5rhsn8295gn') })\nwindow.addEventListener('load', function () { styleCell_pckzlsdhstg5o2bdrzps(27, 2, 'tinytable_css_idfmrxkzvlj5rhsn8295gn') })\nwindow.addEventListener('load', function () { styleCell_pckzlsdhstg5o2bdrzps(27, 3, 'tinytable_css_idfmrxkzvlj5rhsn8295gn') })\n    </script>\n\n    <style>\n    .table td.tinytable_css_idzayxy8u47hg301k95alc, .table th.tinytable_css_idzayxy8u47hg301k95alc {  text-align: left;  border-bottom: solid 0.1em #d3d8dc; }\n    .table td.tinytable_css_idni5v1ida4gmkciae5cik, .table th.tinytable_css_idni5v1ida4gmkciae5cik {  text-align: center;  border-bottom: solid 0.1em #d3d8dc; }\n    .table td.tinytable_css_idfmrxkzvlj5rhsn8295gn, .table th.tinytable_css_idfmrxkzvlj5rhsn8295gn {  text-align: left; }\n    .table td.tinytable_css_idfmc6cm36ag1e58xu2c7v, .table th.tinytable_css_idfmc6cm36ag1e58xu2c7v {  text-align: center; }\n    .table td.tinytable_css_idtdcmvt5r8nt7jfmdwxv1, .table th.tinytable_css_idtdcmvt5r8nt7jfmdwxv1 {  border-bottom: solid 0.05em black;  text-align: left; }\n    .table td.tinytable_css_idjpiy36wtx86qcr9eh9uo, .table th.tinytable_css_idjpiy36wtx86qcr9eh9uo {  border-bottom: solid 0.05em black;  text-align: center; }\n    </style>\n    <div class=\"container\">\n      <table class=\"table table-borderless\" id=\"tinytable_pckzlsdhstg5o2bdrzps\" style=\"width: auto; margin-left: auto; margin-right: auto;\" data-quarto-disable-processing='true'>\n        <thead>\n        \n              <tr>\n                <th scope=\"col\"> </th>\n                <th scope=\"col\">(1)</th>\n                <th scope=\"col\">(2)</th>\n                <th scope=\"col\">(3)</th>\n              </tr>\n        </thead>\n        <tfoot><tr><td colspan='4'>+ p < 0.1, * p < 0.05, ** p < 0.01, *** p < 0.001</td></tr></tfoot>\n        <tbody>\n                <tr>\n                  <td>(Intercept)      </td>\n                  <td>-28.771***</td>\n                  <td>-7.341** </td>\n                  <td>9.801*** </td>\n                </tr>\n                <tr>\n                  <td>                 </td>\n                  <td>(2.076)   </td>\n                  <td>(2.488)  </td>\n                  <td>(2.197)  </td>\n                </tr>\n                <tr>\n                  <td>log(gdpPercap)   </td>\n                  <td>8.344***  </td>\n                  <td>6.587*** </td>\n                  <td>5.090*** </td>\n                </tr>\n                <tr>\n                  <td>                 </td>\n                  <td>(0.143)   </td>\n                  <td>(0.182)  </td>\n                  <td>(0.163)  </td>\n                </tr>\n                <tr>\n                  <td>log(pop)         </td>\n                  <td>1.279***  </td>\n                  <td>0.866*** </td>\n                  <td>0.163+   </td>\n                </tr>\n                <tr>\n                  <td>                 </td>\n                  <td>(0.111)   </td>\n                  <td>(0.111)  </td>\n                  <td>(0.097)  </td>\n                </tr>\n                <tr>\n                  <td>continentAfrica  </td>\n                  <td>          </td>\n                  <td>-4.674***</td>\n                  <td>-6.801***</td>\n                </tr>\n                <tr>\n                  <td>                 </td>\n                  <td>          </td>\n                  <td>(0.494)  </td>\n                  <td>(0.423)  </td>\n                </tr>\n                <tr>\n                  <td>continentAmericas</td>\n                  <td>          </td>\n                  <td>1.495**  </td>\n                  <td>1.917*** </td>\n                </tr>\n                <tr>\n                  <td>                 </td>\n                  <td>          </td>\n                  <td>(0.541)  </td>\n                  <td>(0.454)  </td>\n                </tr>\n                <tr>\n                  <td>continentEurope  </td>\n                  <td>          </td>\n                  <td>3.888*** </td>\n                  <td>5.442*** </td>\n                </tr>\n                <tr>\n                  <td>                 </td>\n                  <td>          </td>\n                  <td>(0.554)  </td>\n                  <td>(0.469)  </td>\n                </tr>\n                <tr>\n                  <td>continentOceania </td>\n                  <td>          </td>\n                  <td>3.671*   </td>\n                  <td>5.697*** </td>\n                </tr>\n                <tr>\n                  <td>                 </td>\n                  <td>          </td>\n                  <td>(1.487)  </td>\n                  <td>(1.251)  </td>\n                </tr>\n                <tr>\n                  <td>decade1960       </td>\n                  <td>          </td>\n                  <td>         </td>\n                  <td>2.960*** </td>\n                </tr>\n                <tr>\n                  <td>                 </td>\n                  <td>          </td>\n                  <td>         </td>\n                  <td>(0.490)  </td>\n                </tr>\n                <tr>\n                  <td>decade1970       </td>\n                  <td>          </td>\n                  <td>         </td>\n                  <td>5.431*** </td>\n                </tr>\n                <tr>\n                  <td>                 </td>\n                  <td>          </td>\n                  <td>         </td>\n                  <td>(0.499)  </td>\n                </tr>\n                <tr>\n                  <td>decade1980       </td>\n                  <td>          </td>\n                  <td>         </td>\n                  <td>8.638*** </td>\n                </tr>\n                <tr>\n                  <td>                 </td>\n                  <td>          </td>\n                  <td>         </td>\n                  <td>(0.505)  </td>\n                </tr>\n                <tr>\n                  <td>decade1990       </td>\n                  <td>          </td>\n                  <td>         </td>\n                  <td>10.618***</td>\n                </tr>\n                <tr>\n                  <td>                 </td>\n                  <td>          </td>\n                  <td>         </td>\n                  <td>(0.510)  </td>\n                </tr>\n                <tr>\n                  <td>decade2000       </td>\n                  <td>          </td>\n                  <td>         </td>\n                  <td>11.384***</td>\n                </tr>\n                <tr>\n                  <td>                 </td>\n                  <td>          </td>\n                  <td>         </td>\n                  <td>(0.523)  </td>\n                </tr>\n                <tr>\n                  <td>Num.Obs.         </td>\n                  <td>1704      </td>\n                  <td>1704     </td>\n                  <td>1704     </td>\n                </tr>\n                <tr>\n                  <td>R2               </td>\n                  <td>0.677     </td>\n                  <td>0.714    </td>\n                  <td>0.799    </td>\n                </tr>\n        </tbody>\n      </table>\n    </div>\n<!-- hack to avoid NA insertion in last line -->\n```\n\n:::\n:::\n\n\n\n\n\n\n## Lesson 9: Present uncertainty\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(broom)\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n\n:::\n::::\n:::::\n\n## Lesson 9: Present uncertainty\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(broom)\n\ntidy(m1_res, conf.int = T)\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 7\n  term           estimate std.error statistic  p.value conf.low conf.high\n  <chr>             <dbl>     <dbl>     <dbl>    <dbl>    <dbl>     <dbl>\n1 (Intercept)      -28.8      2.08      -13.9 1.78e-41   -32.8     -24.7 \n2 log(gdpPercap)     8.34     0.143      58.2 0            8.06      8.63\n3 log(pop)           1.28     0.111      11.5 1.12e-29     1.06      1.50\n```\n\n\n:::\n:::\n::::\n:::::\n\n## Lesson 9: Present uncertainty\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(broom)\n\ntidy(m1_res, conf.int = T) %>%\n  mutate(model = \"M1: baseline\")\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 8\n  term           estimate std.error statistic  p.value conf.low conf.high model \n  <chr>             <dbl>     <dbl>     <dbl>    <dbl>    <dbl>     <dbl> <chr> \n1 (Intercept)      -28.8      2.08      -13.9 1.78e-41   -32.8     -24.7  M1: b…\n2 log(gdpPercap)     8.34     0.143      58.2 0            8.06      8.63 M1: b…\n3 log(pop)           1.28     0.111      11.5 1.12e-29     1.06      1.50 M1: b…\n```\n\n\n:::\n:::\n::::\n:::::\n\n## Lesson 9: Present uncertainty\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(broom)\n\ntidy(m1_res, conf.int = T) %>%\n  mutate(model = \"M1: baseline\") %>%\n  filter(term != \"(Intercept)\")\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 8\n  term           estimate std.error statistic  p.value conf.low conf.high model \n  <chr>             <dbl>     <dbl>     <dbl>    <dbl>    <dbl>     <dbl> <chr> \n1 log(gdpPercap)     8.34     0.143      58.2 0            8.06      8.63 M1: b…\n2 log(pop)           1.28     0.111      11.5 1.12e-29     1.06      1.50 M1: b…\n```\n\n\n:::\n:::\n::::\n:::::\n\n## Lesson 9: Present uncertainty\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(broom)\n\ntidy(m1_res, conf.int = T) %>%\n  mutate(model = \"M1: baseline\") %>%\n  filter(term != \"(Intercept)\") ->\n  m1_res_tidy\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n\n:::\n::::\n:::::\n\n## Lesson 9: Present uncertainty\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(broom)\n\ntidy(m1_res, conf.int = T) %>%\n  mutate(model = \"M1: baseline\") %>%\n  filter(term != \"(Intercept)\") ->\n  m1_res_tidy\n\ntidy(m2_res, conf.int = T)\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 7 × 7\n  term              estimate std.error statistic   p.value conf.low conf.high\n  <chr>                <dbl>     <dbl>     <dbl>     <dbl>    <dbl>     <dbl>\n1 (Intercept)         -7.34      2.49      -2.95 3.22e-  3  -12.2       -2.46\n2 log(gdpPercap)       6.59      0.182     36.3  6.77e-214    6.23       6.94\n3 log(pop)             0.866     0.111      7.83 8.48e- 15    0.649      1.08\n4 continentAfrica     -4.67      0.494     -9.45 1.06e- 20   -5.64      -3.70\n5 continentAmericas    1.49      0.541      2.76 5.77e-  3    0.434      2.56\n6 continentEurope      3.89      0.554      7.02 3.30e- 12    2.80       4.98\n7 continentOceania     3.67      1.49       2.47 1.36e-  2    0.755      6.59\n```\n\n\n:::\n:::\n::::\n:::::\n\n## Lesson 9: Present uncertainty\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(broom)\n\ntidy(m1_res, conf.int = T) %>%\n  mutate(model = \"M1: baseline\") %>%\n  filter(term != \"(Intercept)\") ->\n  m1_res_tidy\n\ntidy(m2_res, conf.int = T) %>%\n  mutate(model = \"M2: w/ continent FEs\")\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 7 × 8\n  term           estimate std.error statistic   p.value conf.low conf.high model\n  <chr>             <dbl>     <dbl>     <dbl>     <dbl>    <dbl>     <dbl> <chr>\n1 (Intercept)      -7.34      2.49      -2.95 3.22e-  3  -12.2       -2.46 M2: …\n2 log(gdpPercap)    6.59      0.182     36.3  6.77e-214    6.23       6.94 M2: …\n3 log(pop)          0.866     0.111      7.83 8.48e- 15    0.649      1.08 M2: …\n4 continentAfri…   -4.67      0.494     -9.45 1.06e- 20   -5.64      -3.70 M2: …\n5 continentAmer…    1.49      0.541      2.76 5.77e-  3    0.434      2.56 M2: …\n6 continentEuro…    3.89      0.554      7.02 3.30e- 12    2.80       4.98 M2: …\n7 continentOcea…    3.67      1.49       2.47 1.36e-  2    0.755      6.59 M2: …\n```\n\n\n:::\n:::\n::::\n:::::\n\n## Lesson 9: Present uncertainty\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(broom)\n\ntidy(m1_res, conf.int = T) %>%\n  mutate(model = \"M1: baseline\") %>%\n  filter(term != \"(Intercept)\") ->\n  m1_res_tidy\n\ntidy(m2_res, conf.int = T) %>%\n  mutate(model = \"M2: w/ continent FEs\") %>%\n  filter(term != \"(Intercept)\")\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 8\n  term           estimate std.error statistic   p.value conf.low conf.high model\n  <chr>             <dbl>     <dbl>     <dbl>     <dbl>    <dbl>     <dbl> <chr>\n1 log(gdpPercap)    6.59      0.182     36.3  6.77e-214    6.23       6.94 M2: …\n2 log(pop)          0.866     0.111      7.83 8.48e- 15    0.649      1.08 M2: …\n3 continentAfri…   -4.67      0.494     -9.45 1.06e- 20   -5.64      -3.70 M2: …\n4 continentAmer…    1.49      0.541      2.76 5.77e-  3    0.434      2.56 M2: …\n5 continentEuro…    3.89      0.554      7.02 3.30e- 12    2.80       4.98 M2: …\n6 continentOcea…    3.67      1.49       2.47 1.36e-  2    0.755      6.59 M2: …\n```\n\n\n:::\n:::\n::::\n:::::\n\n## Lesson 9: Present uncertainty\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(broom)\n\ntidy(m1_res, conf.int = T) %>%\n  mutate(model = \"M1: baseline\") %>%\n  filter(term != \"(Intercept)\") ->\n  m1_res_tidy\n\ntidy(m2_res, conf.int = T) %>%\n  mutate(model = \"M2: w/ continent FEs\") %>%\n  filter(term != \"(Intercept)\") ->\n  m2_res_tidy\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n\n:::\n::::\n:::::\n\n## Lesson 9: Present uncertainty\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(broom)\n\ntidy(m1_res, conf.int = T) %>%\n  mutate(model = \"M1: baseline\") %>%\n  filter(term != \"(Intercept)\") ->\n  m1_res_tidy\n\ntidy(m2_res, conf.int = T) %>%\n  mutate(model = \"M2: w/ continent FEs\") %>%\n  filter(term != \"(Intercept)\") ->\n  m2_res_tidy\n\ntidy(m3_res, conf.int = T)\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 12 × 7\n   term              estimate std.error statistic   p.value conf.low conf.high\n   <chr>                <dbl>     <dbl>     <dbl>     <dbl>    <dbl>     <dbl>\n 1 (Intercept)          9.80     2.20        4.46 8.68e-  6   5.49      14.1  \n 2 log(gdpPercap)       5.09     0.163      31.2  1.53e-169   4.77       5.41 \n 3 log(pop)             0.163    0.0966      1.68 9.24e-  2  -0.0268     0.352\n 4 continentAfrica     -6.80     0.423     -16.1  3.06e- 54  -7.63      -5.97 \n 5 continentAmericas    1.92     0.454       4.22 2.57e-  5   1.03       2.81 \n 6 continentEurope      5.44     0.469      11.6  5.65e- 30   4.52       6.36 \n 7 continentOceania     5.70     1.25        4.55 5.65e-  6   3.24       8.15 \n 8 decade1960           2.96     0.490       6.04 1.91e-  9   2.00       3.92 \n 9 decade1970           5.43     0.499      10.9  1.02e- 26   4.45       6.41 \n10 decade1980           8.64     0.505      17.1  1.54e- 60   7.65       9.63 \n11 decade1990          10.6      0.510      20.8  8.75e- 86   9.62      11.6  \n12 decade2000          11.4      0.523      21.8  6.19e- 93  10.4       12.4  \n```\n\n\n:::\n:::\n::::\n:::::\n\n## Lesson 9: Present uncertainty\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(broom)\n\ntidy(m1_res, conf.int = T) %>%\n  mutate(model = \"M1: baseline\") %>%\n  filter(term != \"(Intercept)\") ->\n  m1_res_tidy\n\ntidy(m2_res, conf.int = T) %>%\n  mutate(model = \"M2: w/ continent FEs\") %>%\n  filter(term != \"(Intercept)\") ->\n  m2_res_tidy\n\ntidy(m3_res, conf.int = T) %>%\n  mutate(model = \"M3: w/ continent + decade FEs\")\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 12 × 8\n   term          estimate std.error statistic   p.value conf.low conf.high model\n   <chr>            <dbl>     <dbl>     <dbl>     <dbl>    <dbl>     <dbl> <chr>\n 1 (Intercept)      9.80     2.20        4.46 8.68e-  6   5.49      14.1   M3: …\n 2 log(gdpPerca…    5.09     0.163      31.2  1.53e-169   4.77       5.41  M3: …\n 3 log(pop)         0.163    0.0966      1.68 9.24e-  2  -0.0268     0.352 M3: …\n 4 continentAfr…   -6.80     0.423     -16.1  3.06e- 54  -7.63      -5.97  M3: …\n 5 continentAme…    1.92     0.454       4.22 2.57e-  5   1.03       2.81  M3: …\n 6 continentEur…    5.44     0.469      11.6  5.65e- 30   4.52       6.36  M3: …\n 7 continentOce…    5.70     1.25        4.55 5.65e-  6   3.24       8.15  M3: …\n 8 decade1960       2.96     0.490       6.04 1.91e-  9   2.00       3.92  M3: …\n 9 decade1970       5.43     0.499      10.9  1.02e- 26   4.45       6.41  M3: …\n10 decade1980       8.64     0.505      17.1  1.54e- 60   7.65       9.63  M3: …\n11 decade1990      10.6      0.510      20.8  8.75e- 86   9.62      11.6   M3: …\n12 decade2000      11.4      0.523      21.8  6.19e- 93  10.4       12.4   M3: …\n```\n\n\n:::\n:::\n::::\n:::::\n\n## Lesson 9: Present uncertainty\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(broom)\n\ntidy(m1_res, conf.int = T) %>%\n  mutate(model = \"M1: baseline\") %>%\n  filter(term != \"(Intercept)\") ->\n  m1_res_tidy\n\ntidy(m2_res, conf.int = T) %>%\n  mutate(model = \"M2: w/ continent FEs\") %>%\n  filter(term != \"(Intercept)\") ->\n  m2_res_tidy\n\ntidy(m3_res, conf.int = T) %>%\n  mutate(model = \"M3: w/ continent + decade FEs\") %>%\n  filter(term != \"(Intercept)\")\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 11 × 8\n   term          estimate std.error statistic   p.value conf.low conf.high model\n   <chr>            <dbl>     <dbl>     <dbl>     <dbl>    <dbl>     <dbl> <chr>\n 1 log(gdpPerca…    5.09     0.163      31.2  1.53e-169   4.77       5.41  M3: …\n 2 log(pop)         0.163    0.0966      1.68 9.24e-  2  -0.0268     0.352 M3: …\n 3 continentAfr…   -6.80     0.423     -16.1  3.06e- 54  -7.63      -5.97  M3: …\n 4 continentAme…    1.92     0.454       4.22 2.57e-  5   1.03       2.81  M3: …\n 5 continentEur…    5.44     0.469      11.6  5.65e- 30   4.52       6.36  M3: …\n 6 continentOce…    5.70     1.25        4.55 5.65e-  6   3.24       8.15  M3: …\n 7 decade1960       2.96     0.490       6.04 1.91e-  9   2.00       3.92  M3: …\n 8 decade1970       5.43     0.499      10.9  1.02e- 26   4.45       6.41  M3: …\n 9 decade1980       8.64     0.505      17.1  1.54e- 60   7.65       9.63  M3: …\n10 decade1990      10.6      0.510      20.8  8.75e- 86   9.62      11.6   M3: …\n11 decade2000      11.4      0.523      21.8  6.19e- 93  10.4       12.4   M3: …\n```\n\n\n:::\n:::\n::::\n:::::\n\n## Lesson 9: Present uncertainty\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(broom)\n\ntidy(m1_res, conf.int = T) %>%\n  mutate(model = \"M1: baseline\") %>%\n  filter(term != \"(Intercept)\") ->\n  m1_res_tidy\n\ntidy(m2_res, conf.int = T) %>%\n  mutate(model = \"M2: w/ continent FEs\") %>%\n  filter(term != \"(Intercept)\") ->\n  m2_res_tidy\n\ntidy(m3_res, conf.int = T) %>%\n  mutate(model = \"M3: w/ continent + decade FEs\") %>%\n  filter(term != \"(Intercept)\") ->\n  m3_res_tidy\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n\n:::\n::::\n:::::\n\n## Lesson 9: Present uncertainty\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(broom)\n\ntidy(m1_res, conf.int = T) %>%\n  mutate(model = \"M1: baseline\") %>%\n  filter(term != \"(Intercept)\") ->\n  m1_res_tidy\n\ntidy(m2_res, conf.int = T) %>%\n  mutate(model = \"M2: w/ continent FEs\") %>%\n  filter(term != \"(Intercept)\") ->\n  m2_res_tidy\n\ntidy(m3_res, conf.int = T) %>%\n  mutate(model = \"M3: w/ continent + decade FEs\") %>%\n  filter(term != \"(Intercept)\") ->\n  m3_res_tidy\n\nall_res_tidy <- bind_rows(m1_res_tidy, m2_res_tidy, m3_res_tidy)\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell}\n\n:::\n::::\n:::::\n\n\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\n\n## Lesson 9: Present uncertainty\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\nggplot(m2_res_tidy,\n       aes(y = fct_reorder(term, estimate),\n           x = estimate,\n           xmin = conf.low,\n           xmax = conf.high))\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/lesson9.3_auto_01_output-1.png){fig-align='center' width=672}\n:::\n:::\n::::\n:::::\n\n## Lesson 9: Present uncertainty\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\nggplot(m2_res_tidy,\n       aes(y = fct_reorder(term, estimate),\n           x = estimate,\n           xmin = conf.low,\n           xmax = conf.high)) +\n  theme_cavis_vgrid\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/lesson9.3_auto_02_output-1.png){fig-align='center' width=672}\n:::\n:::\n::::\n:::::\n\n## Lesson 9: Present uncertainty\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\nggplot(m2_res_tidy,\n       aes(y = fct_reorder(term, estimate),\n           x = estimate,\n           xmin = conf.low,\n           xmax = conf.high)) +\n  theme_cavis_vgrid +\n  geom_vline(\n    xintercept = 1,\n    linetype = 2,\n    color = \"grey\"\n  )\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/lesson9.3_auto_03_output-1.png){fig-align='center' width=672}\n:::\n:::\n::::\n:::::\n\n## Lesson 9: Present uncertainty\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\nggplot(m2_res_tidy,\n       aes(y = fct_reorder(term, estimate),\n           x = estimate,\n           xmin = conf.low,\n           xmax = conf.high)) +\n  theme_cavis_vgrid +\n  geom_vline(\n    xintercept = 1,\n    linetype = 2,\n    color = \"grey\"\n  ) +\n  geom_pointrange()\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/lesson9.3_auto_04_output-1.png){fig-align='center' width=672}\n:::\n:::\n::::\n:::::\n\n## Lesson 9: Present uncertainty\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\nggplot(m2_res_tidy,\n       aes(y = fct_reorder(term, estimate),\n           x = estimate,\n           xmin = conf.low,\n           xmax = conf.high)) +\n  theme_cavis_vgrid +\n  geom_vline(\n    xintercept = 1,\n    linetype = 2,\n    color = \"grey\"\n  ) +\n  geom_pointrange() +\n  scale_x_continuous(\n    sec.axis = dup_axis(name = NULL)\n  )\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/lesson9.3_auto_05_output-1.png){fig-align='center' width=672}\n:::\n:::\n::::\n:::::\n\n## Lesson 9: Present uncertainty\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\nggplot(m2_res_tidy,\n       aes(y = fct_reorder(term, estimate),\n           x = estimate,\n           xmin = conf.low,\n           xmax = conf.high)) +\n  theme_cavis_vgrid +\n  geom_vline(\n    xintercept = 1,\n    linetype = 2,\n    color = \"grey\"\n  ) +\n  geom_pointrange() +\n  scale_x_continuous(\n    sec.axis = dup_axis(name = NULL)\n  ) +\n  labs(y = NULL, x = \"Estimate\")\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/lesson9.3_auto_06_output-1.png){fig-align='center' width=672}\n:::\n:::\n::::\n:::::\n\n\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\n\n## Lesson 9: Present uncertainty\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\nblues <- RColorBrewer::brewer.pal(9, \"Blues\")\nblues <- blues[c(3, 6, 9)]\n\nall_res_tidy\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell layout-align=\"center\"}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 19 × 8\n   term          estimate std.error statistic   p.value conf.low conf.high model\n   <chr>            <dbl>     <dbl>     <dbl>     <dbl>    <dbl>     <dbl> <chr>\n 1 log(gdpPerca…    8.34     0.143      58.2  0           8.06       8.63  M1: …\n 2 log(pop)         1.28     0.111      11.5  1.12e- 29   1.06       1.50  M1: …\n 3 log(gdpPerca…    6.59     0.182      36.3  6.77e-214   6.23       6.94  M2: …\n 4 log(pop)         0.866    0.111       7.83 8.48e- 15   0.649      1.08  M2: …\n 5 continentAfr…   -4.67     0.494      -9.45 1.06e- 20  -5.64      -3.70  M2: …\n 6 continentAme…    1.49     0.541       2.76 5.77e-  3   0.434      2.56  M2: …\n 7 continentEur…    3.89     0.554       7.02 3.30e- 12   2.80       4.98  M2: …\n 8 continentOce…    3.67     1.49        2.47 1.36e-  2   0.755      6.59  M2: …\n 9 log(gdpPerca…    5.09     0.163      31.2  1.53e-169   4.77       5.41  M3: …\n10 log(pop)         0.163    0.0966      1.68 9.24e-  2  -0.0268     0.352 M3: …\n11 continentAfr…   -6.80     0.423     -16.1  3.06e- 54  -7.63      -5.97  M3: …\n12 continentAme…    1.92     0.454       4.22 2.57e-  5   1.03       2.81  M3: …\n13 continentEur…    5.44     0.469      11.6  5.65e- 30   4.52       6.36  M3: …\n14 continentOce…    5.70     1.25        4.55 5.65e-  6   3.24       8.15  M3: …\n15 decade1960       2.96     0.490       6.04 1.91e-  9   2.00       3.92  M3: …\n16 decade1970       5.43     0.499      10.9  1.02e- 26   4.45       6.41  M3: …\n17 decade1980       8.64     0.505      17.1  1.54e- 60   7.65       9.63  M3: …\n18 decade1990      10.6      0.510      20.8  8.75e- 86   9.62      11.6   M3: …\n19 decade2000      11.4      0.523      21.8  6.19e- 93  10.4       12.4   M3: …\n```\n\n\n:::\n:::\n::::\n:::::\n\n## Lesson 9: Present uncertainty\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\nblues <- RColorBrewer::brewer.pal(9, \"Blues\")\nblues <- blues[c(3, 6, 9)]\n\nall_res_tidy %>%\n  filter(term %in% c(\"log(gdpPercap)\", \"log(pop)\"))\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell layout-align=\"center\"}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 8\n  term           estimate std.error statistic   p.value conf.low conf.high model\n  <chr>             <dbl>     <dbl>     <dbl>     <dbl>    <dbl>     <dbl> <chr>\n1 log(gdpPercap)    8.34     0.143      58.2  0           8.06       8.63  M1: …\n2 log(pop)          1.28     0.111      11.5  1.12e- 29   1.06       1.50  M1: …\n3 log(gdpPercap)    6.59     0.182      36.3  6.77e-214   6.23       6.94  M2: …\n4 log(pop)          0.866    0.111       7.83 8.48e- 15   0.649      1.08  M2: …\n5 log(gdpPercap)    5.09     0.163      31.2  1.53e-169   4.77       5.41  M3: …\n6 log(pop)          0.163    0.0966      1.68 9.24e-  2  -0.0268     0.352 M3: …\n```\n\n\n:::\n:::\n::::\n:::::\n\n## Lesson 9: Present uncertainty\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\nblues <- RColorBrewer::brewer.pal(9, \"Blues\")\nblues <- blues[c(3, 6, 9)]\n\nall_res_tidy %>%\n  filter(term %in% c(\"log(gdpPercap)\", \"log(pop)\")) %>%\n  ggplot(aes(y = fct_reorder(term, estimate),\n             x = estimate,\n             xmin = conf.low,\n             xmax = conf.high,\n             color = model))\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/lesson9.4_non_seq_03_output-1.png){fig-align='center' width=672}\n:::\n:::\n::::\n:::::\n\n## Lesson 9: Present uncertainty\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\nblues <- RColorBrewer::brewer.pal(9, \"Blues\")\nblues <- blues[c(3, 6, 9)]\n\nall_res_tidy %>%\n  filter(term %in% c(\"log(gdpPercap)\", \"log(pop)\")) %>%\n  ggplot(aes(y = fct_reorder(term, estimate),\n             x = estimate,\n             xmin = conf.low,\n             xmax = conf.high,\n             color = model)) +\n  theme_cavis_vgrid\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/lesson9.4_non_seq_04_output-1.png){fig-align='center' width=672}\n:::\n:::\n::::\n:::::\n\n## Lesson 9: Present uncertainty\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\nblues <- RColorBrewer::brewer.pal(9, \"Blues\")\nblues <- blues[c(3, 6, 9)]\n\nall_res_tidy %>%\n  filter(term %in% c(\"log(gdpPercap)\", \"log(pop)\")) %>%\n  ggplot(aes(y = fct_reorder(term, estimate),\n             x = estimate,\n             xmin = conf.low,\n             xmax = conf.high,\n             color = model)) +\n  theme_cavis_vgrid +\n  geom_vline(xintercept = 0, linetype = 2, color = \"grey\")\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/lesson9.4_non_seq_05_output-1.png){fig-align='center' width=672}\n:::\n:::\n::::\n:::::\n\n## Lesson 9: Present uncertainty\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\nblues <- RColorBrewer::brewer.pal(9, \"Blues\")\nblues <- blues[c(3, 6, 9)]\n\nall_res_tidy %>%\n  filter(term %in% c(\"log(gdpPercap)\", \"log(pop)\")) %>%\n  ggplot(aes(y = fct_reorder(term, estimate),\n             x = estimate,\n             xmin = conf.low,\n             xmax = conf.high,\n             color = model)) +\n  theme_cavis_vgrid +\n  geom_vline(xintercept = 0, linetype = 2, color = \"grey\") +\n  geom_pointrange(\n  )\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/lesson9.4_non_seq_06_output-1.png){fig-align='center' width=672}\n:::\n:::\n::::\n:::::\n\n## Lesson 9: Present uncertainty\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\nblues <- RColorBrewer::brewer.pal(9, \"Blues\")\nblues <- blues[c(3, 6, 9)]\n\nall_res_tidy %>%\n  filter(term %in% c(\"log(gdpPercap)\", \"log(pop)\")) %>%\n  ggplot(aes(y = fct_reorder(term, estimate),\n             x = estimate,\n             xmin = conf.low,\n             xmax = conf.high,\n             color = model)) +\n  theme_cavis_vgrid +\n  geom_vline(xintercept = 0, linetype = 2, color = \"grey\") +\n  geom_pointrange(\n    position = position_dodge2(width = 0.5)\n  )\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/lesson9.4_non_seq_07_output-1.png){fig-align='center' width=672}\n:::\n:::\n::::\n:::::\n\n## Lesson 9: Present uncertainty\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\nblues <- RColorBrewer::brewer.pal(9, \"Blues\")\nblues <- blues[c(3, 6, 9)]\n\nall_res_tidy %>%\n  filter(term %in% c(\"log(gdpPercap)\", \"log(pop)\")) %>%\n  ggplot(aes(y = fct_reorder(term, estimate),\n             x = estimate,\n             xmin = conf.low,\n             xmax = conf.high,\n             color = model)) +\n  theme_cavis_vgrid +\n  geom_vline(xintercept = 0, linetype = 2, color = \"grey\") +\n  geom_pointrange(\n    position = position_dodge2(width = 0.5)\n  ) +\n  scale_color_manual(values = blues)\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/lesson9.4_non_seq_08_output-1.png){fig-align='center' width=672}\n:::\n:::\n::::\n:::::\n\n## Lesson 9: Present uncertainty\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\nblues <- RColorBrewer::brewer.pal(9, \"Blues\")\nblues <- blues[c(3, 6, 9)]\n\nall_res_tidy %>%\n  filter(term %in% c(\"log(gdpPercap)\", \"log(pop)\")) %>%\n  ggplot(aes(y = fct_reorder(term, estimate),\n             x = estimate,\n             xmin = conf.low,\n             xmax = conf.high,\n             color = model)) +\n  theme_cavis_vgrid +\n  geom_vline(xintercept = 0, linetype = 2, color = \"grey\") +\n  geom_pointrange(\n    position = position_dodge2(width = 0.5)\n  ) +\n  scale_color_manual(values = blues) +\n  theme(legend.position = \"top\")\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/lesson9.4_non_seq_09_output-1.png){fig-align='center' width=672}\n:::\n:::\n::::\n:::::\n\n## Lesson 9: Present uncertainty\n:::: {.columns  }\n:::: {.column width='40%'}\n::: {.cell}\n\n```{.r .cell-code}\nblues <- RColorBrewer::brewer.pal(9, \"Blues\")\nblues <- blues[c(3, 6, 9)]\n\nall_res_tidy %>%\n  filter(term %in% c(\"log(gdpPercap)\", \"log(pop)\")) %>%\n  ggplot(aes(y = fct_reorder(term, estimate),\n             x = estimate,\n             xmin = conf.low,\n             xmax = conf.high,\n             color = model)) +\n  theme_cavis_vgrid +\n  geom_vline(xintercept = 0, linetype = 2, color = \"grey\") +\n  geom_pointrange(\n    position = position_dodge2(width = 0.5)\n  ) +\n  scale_color_manual(values = blues) +\n  theme(legend.position = \"top\") +\n  scale_x_continuous(\n    sec.axis = dup_axis(name = NULL)\n  ) +\n  labs(y = NULL, x = \"Estimate\")\n```\n:::\n::::\n \n:::: {.column width='60%'}\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/lesson9.4_non_seq_10_output-1.png){fig-align='center' width=672}\n:::\n:::\n::::\n:::::\n\n\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\n\n# Lesson 10: Save graphics with code {background-color=\"#DFDDE8\"}\n\n## Lesson 10: Save graphics with code\n\nPlease don't use:\n\n![](plot/saveRgraphic.png){width=\"500,\" fig-align=\"center\"}\n\n## Lesson 10: Save graphics with code\n\n\n\n\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code}\nggplot(gapminder_aa_07, aes(x = gdpPercap, y = lifeExp)) +\n  theme_cavis_grids +\n  geom_point() +\n  scale_x_continuous(trans = \"log10\") +\n  geom_smooth(method = \"lm\", color = \"grey30\") +\n  labs(y = \"Life expectancy\", \n       x = \"GDP per capita (logged)\") ->\n  plot1\n\nplot1\n```\n\n::: {.cell-output-display}\n![](data_vis_10lessons_files/figure-revealjs/unnamed-chunk-38-1.png){width=1056}\n:::\n:::\n\n\n\n\n\n\n## Lesson 10: Save graphics with code\n\n::::: columns\n::: {.column width=\"40%\"}\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwidth = 7\nggsave(\"plot/gdp_lifExp_width7.png\", \n       width = width, \n       height = width/1.618)\n```\n:::\n\n\n\n\n\n:::\n\n::: {.column width=\"60%\"}\n![](plot/gdp_lifExp_width7.png)\n:::\n:::::\n\n## Lesson 10: Save graphics with code\n\n::::: columns\n::: {.column width=\"40%\"}\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwidth = 14\nggsave(\"plot/gdp_lifExp_width14.png\", \n       width = width, \n       height = width/1.618)\n```\n:::\n\n\n\n\n\n:::\n\n::: {.column width=\"60%\"}\n![](plot/gdp_lifExp_width14.png)\n:::\n:::::\n\n## Lesson 10: Save graphics with code\n\n::: nonincremental\n-   PNG is a raster image with lossless compression (better quality than JPG)\n\n-   But PDF -- vector image -- is often preferred, especially if you work with LaTeX\n:::\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwidth = 8\nggsave(\"plot/gdp_lifExp.pdf\", \n       width = width, \n       height = width/1.618,\n       device = cairo_pdf # only for fancy font \n       )\n```\n:::\n\n\n\n\n\n\n# Thank you {background-color=\"#DFDDE8\"}\n\nWebsite: <https://brianleungkp.github.io/>\n\nEmail: [kpleung\\@uw.edu](mailto:kpleung@uw.edu)\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}