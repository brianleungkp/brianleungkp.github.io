{
  "hash": "406cd003c2ed0554d624ea6446ca6962",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Efficient R Programming\"\nsubtitle: \"Working with Many Columns, Functions, and Models\"\nauthor: Brian Leung\ninstitute: CSSCR & Political Science, UW\nformat: \n  revealjs:\n    slide-number: true\n    include-in-header: \n      text: |\n        <style>\n        .v-center-container {\n          display: flex;\n          justify-content: center;\n          align-items: center;\n          height: 75%;\n        }\n        </style>\neditor: visual\neditor_options: \n  chunk_output_type: console\n---\n\n\n\n## Introduction\n\n-   Rule of thumb: \"consider writing a **function** whenever you’ve copied and pasted a block of code more than twice\"\n\n-   What is in a function?\n\n    -   Input → Output\n\n-   In R, you can write a named function\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmultiply <- function(x, y) { x * y }\nmultiply(2, 3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 6\n```\n\n\n:::\n:::\n\n\n\n## Introduction\n\n-   Benefits of functional programming\n\n    -   Reduce redundancy & improve readability\n\n        -   Less copy-and-paste and mistakes; more reusable\n\n    -   Encourage modular thinking\n\n        -   Break complex workflows into small, testable functions\n\n    -   Enhance scalability\n\n        -   Apply across many observations, columns or datasets\n\n    -   tidyverse pipelines friendly\n\n        -   Integrate with `mutate()`, `across()`, `map()`\n\n## Operations in R\n\n-   Step back and think about basic operations in R\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnums <- 1:10\nnums\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1]  1  2  3  4  5  6  7  8  9 10\n```\n\n\n:::\n:::\n\n\n\n## Operations in R\n\n-   What if I want to add 1 to each and every value?\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnums <- 1:10\nnums + 1\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1]  2  3  4  5  6  7  8  9 10 11\n```\n\n\n:::\n:::\n\n\n\n-   Why it works?\n\n## Operations in R\n\n-   It's like having two vectors of the same length\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnums\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1]  1  2  3  4  5  6  7  8  9 10\n```\n\n\n:::\n\n```{.r .cell-code}\nones <- rep(1, 10)\nones\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] 1 1 1 1 1 1 1 1 1 1\n```\n\n\n:::\n:::\n\n\n\n-   And adding two vectors together *at once*\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnums + ones\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1]  2  3  4  5  6  7  8  9 10 11\n```\n\n\n:::\n:::\n\n\n\n## Operations in R\n\n::: v-center-container\nVectorized operation is extremely fast and efficient\n:::\n\n## Operations in R\n\n-   Let's go to another extreme: for loop\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfor (i in 1:length(nums)) {\n  print(nums[i] + 1)\n}\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 2\n[1] 3\n[1] 4\n[1] 5\n[1] 6\n[1] 7\n[1] 8\n[1] 9\n[1] 10\n[1] 11\n```\n\n\n:::\n:::\n\n\n\n## Operations in R\n\n-   It iterates through each and every value\n\n    -   It's generally slower and involves more memory & computational overhead\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nx <- 1:1e6\n\nsystem.time({\n  x <- x + 1\n})\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   user  system elapsed \n  0.001   0.001   0.002 \n```\n\n\n:::\n\n```{.r .cell-code}\nsystem.time({\n  for (i in 1:length(x)) x[i] <- x[i] + 1\n})\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   user  system elapsed \n  0.032   0.000   0.033 \n```\n\n\n:::\n:::\n\n\n\n## Operations in R\n\n-   Vectorized operation\n\n    -   \"Do this operation on the whole vector at once!\"\n\n-   For loop\n\n    -   \"Do this, then this, then ... -- repeat manually for each element!\"\n\n-   Functional programming\n\n    -   \"Define a function and apply it automatically to each element or column!\"\n\n## Functions and map()\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nadd_one <- function(x) {\n  x + 1\n}\n\nadd_one(1:10)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1]  2  3  4  5  6  7  8  9 10 11\n```\n\n\n:::\n:::\n\n\n\n## Functions and map()\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(purrr)\nmap(1:10, add_one)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[[1]]\n[1] 2\n\n[[2]]\n[1] 3\n\n[[3]]\n[1] 4\n\n[[4]]\n[1] 5\n\n[[5]]\n[1] 6\n\n[[6]]\n[1] 7\n\n[[7]]\n[1] 8\n\n[[8]]\n[1] 9\n\n[[9]]\n[1] 10\n\n[[10]]\n[1] 11\n```\n\n\n:::\n\n```{.r .cell-code}\nmap_dbl(1:10, add_one)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1]  2  3  4  5  6  7  8  9 10 11\n```\n\n\n:::\n:::\n\n\n\n## Functions and map()\n\n-   Why uses map()?\n\n    -   B/c many operations don't work with vectors\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nadd_one_scalar <- function(x) {\n  if (length(x) != 1) stop(\"Only one number at a time!\")\n  x + 1\n}\n```\n:::\n\n\n\n-   It doesn't work on vectors\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nadd_one_scalar(1:10)\n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError in add_one_scalar(1:10): Only one number at a time!\n```\n\n\n:::\n:::\n\n\n\n## Functions and map()\n\n-   But `map()` works\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmap_dbl(1:10, add_one_scalar)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1]  2  3  4  5  6  7  8  9 10 11\n```\n\n\n:::\n:::\n\n\n\n## Functions and map()\n\n-   A more realistic example: a list of vectors\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsome_data <- list(\n \"Group A\" = rnorm(5),\n \"Group B\" = rnorm(5),\n \"Group C\" = rnorm(5)\n)\n\nsome_data\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$`Group A`\n[1] -0.3901175 -0.7516687  1.1894436  0.2955950 -0.5227733\n\n$`Group B`\n[1]  0.8254738  0.7300041 -0.3148819 -0.9441314 -0.2647824\n\n$`Group C`\n[1]  0.2754437 -1.1706525 -0.5063522  1.1297897 -1.9233868\n```\n\n\n:::\n\n```{.r .cell-code}\nclass(some_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"list\"\n```\n\n\n:::\n:::\n\n\n\n## Functions and map()\n\n-   A more realistic example: a list of vectors\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmean(some_data)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in mean.default(some_data): argument is not numeric or logical:\nreturning NA\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] NA\n```\n\n\n:::\n:::\n\n\n\n-   Why error?\n\n## Functions and map()\n\n-   A more realistic example: a list of vectors\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmap(some_data, mean)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$`Group A`\n[1] -0.03590419\n\n$`Group B`\n[1] 0.006336455\n\n$`Group C`\n[1] -0.4390316\n```\n\n\n:::\n:::\n\n\n\n## Functions and map()\n\n-   Why if you need more flexibility from functions?\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsome_data <- list(\n \"Group A\" = c(rnorm(4), NA),\n \"Group B\" = c(rnorm(4), NA),\n \"Group C\" = c(rnorm(4), NA)\n)\n\nmap(some_data, mean)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$`Group A`\n[1] NA\n\n$`Group B`\n[1] NA\n\n$`Group C`\n[1] NA\n```\n\n\n:::\n:::\n\n\n\n## Functions and map()\n\n-   Define a new function that takes care of NAs\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmean_ignore_na <- function(x) { mean(x, na.rm = TRUE) }\n\nmap(some_data, mean_ignore_na)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$`Group A`\n[1] 0.8123263\n\n$`Group B`\n[1] -0.2839768\n\n$`Group C`\n[1] 0.3209036\n```\n\n\n:::\n:::\n\n\n\n## Functions and map()\n\n-   Or, you can directly write an *anonymous function*\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmap(some_data, function(x) { mean(x, na.rm = TRUE) })\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$`Group A`\n[1] 0.8123263\n\n$`Group B`\n[1] -0.2839768\n\n$`Group C`\n[1] 0.3209036\n```\n\n\n:::\n:::\n\n\n\n## Functions and map()\n\n-   Or, using shorthand `~` (lambda) and `.x` (placeholder)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmap(some_data, ~ mean(.x, na.rm = TRUE))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$`Group A`\n[1] 0.8123263\n\n$`Group B`\n[1] -0.2839768\n\n$`Group C`\n[1] 0.3209036\n```\n\n\n:::\n:::\n\n\n\n## Wrangling multiple columns\n\n-   Iris example\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\niris <- as_tibble(iris)\niris\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 150 × 5\n   Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n          <dbl>       <dbl>        <dbl>       <dbl> <fct>  \n 1          5.1         3.5          1.4         0.2 setosa \n 2          4.9         3            1.4         0.2 setosa \n 3          4.7         3.2          1.3         0.2 setosa \n 4          4.6         3.1          1.5         0.2 setosa \n 5          5           3.6          1.4         0.2 setosa \n 6          5.4         3.9          1.7         0.4 setosa \n 7          4.6         3.4          1.4         0.3 setosa \n 8          5           3.4          1.5         0.2 setosa \n 9          4.4         2.9          1.4         0.2 setosa \n10          4.9         3.1          1.5         0.1 setosa \n# ℹ 140 more rows\n```\n\n\n:::\n:::\n\n\n\n## Wrangling multiple columns\n\n-   Round up one column\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\niris %>%\n  mutate(Sepal.Length = round(Sepal.Length))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 150 × 5\n   Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n          <dbl>       <dbl>        <dbl>       <dbl> <fct>  \n 1            5         3.5          1.4         0.2 setosa \n 2            5         3            1.4         0.2 setosa \n 3            5         3.2          1.3         0.2 setosa \n 4            5         3.1          1.5         0.2 setosa \n 5            5         3.6          1.4         0.2 setosa \n 6            5         3.9          1.7         0.4 setosa \n 7            5         3.4          1.4         0.3 setosa \n 8            5         3.4          1.5         0.2 setosa \n 9            4         2.9          1.4         0.2 setosa \n10            5         3.1          1.5         0.1 setosa \n# ℹ 140 more rows\n```\n\n\n:::\n:::\n\n\n\n## Wrangling multiple columns\n\n-   How about multiple columns?\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\niris %>%\n  mutate(Sepal.Length = round(Sepal.Length),\n         Sepal.Width = round(Sepal.Width),\n         Petal.Length = round(Petal.Length),\n         Petal.Width = round(Petal.Width))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 150 × 5\n   Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n          <dbl>       <dbl>        <dbl>       <dbl> <fct>  \n 1            5           4            1           0 setosa \n 2            5           3            1           0 setosa \n 3            5           3            1           0 setosa \n 4            5           3            2           0 setosa \n 5            5           4            1           0 setosa \n 6            5           4            2           0 setosa \n 7            5           3            1           0 setosa \n 8            5           3            2           0 setosa \n 9            4           3            1           0 setosa \n10            5           3            2           0 setosa \n# ℹ 140 more rows\n```\n\n\n:::\n:::\n\n\n\n## Wrangling multiple columns\n\n-   Using `across()` with function\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\niris %>%\n  mutate(across(.cols = c(Sepal.Length, Sepal.Width, Petal.Length, Petal.Width),\n                .fns = round))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 150 × 5\n   Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n          <dbl>       <dbl>        <dbl>       <dbl> <fct>  \n 1            5           4            1           0 setosa \n 2            5           3            1           0 setosa \n 3            5           3            1           0 setosa \n 4            5           3            2           0 setosa \n 5            5           4            1           0 setosa \n 6            5           4            2           0 setosa \n 7            5           3            1           0 setosa \n 8            5           3            2           0 setosa \n 9            4           3            1           0 setosa \n10            5           3            2           0 setosa \n# ℹ 140 more rows\n```\n\n\n:::\n:::\n\n\n\n## Wrangling multiple columns\n\n-   For simplicity\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\niris %>%\n  mutate(across(Sepal.Length:Petal.Width, round))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 150 × 5\n   Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n          <dbl>       <dbl>        <dbl>       <dbl> <fct>  \n 1            5           4            1           0 setosa \n 2            5           3            1           0 setosa \n 3            5           3            1           0 setosa \n 4            5           3            2           0 setosa \n 5            5           4            1           0 setosa \n 6            5           4            2           0 setosa \n 7            5           3            1           0 setosa \n 8            5           3            2           0 setosa \n 9            4           3            1           0 setosa \n10            5           3            2           0 setosa \n# ℹ 140 more rows\n```\n\n\n:::\n:::\n\n\n\n## Wrangling multiple columns\n\n-   Target specific columns\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\niris %>%\n  mutate(across(starts_with(\"Sepal\"), round))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 150 × 5\n   Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n          <dbl>       <dbl>        <dbl>       <dbl> <fct>  \n 1            5           4          1.4         0.2 setosa \n 2            5           3          1.4         0.2 setosa \n 3            5           3          1.3         0.2 setosa \n 4            5           3          1.5         0.2 setosa \n 5            5           4          1.4         0.2 setosa \n 6            5           4          1.7         0.4 setosa \n 7            5           3          1.4         0.3 setosa \n 8            5           3          1.5         0.2 setosa \n 9            4           3          1.4         0.2 setosa \n10            5           3          1.5         0.1 setosa \n# ℹ 140 more rows\n```\n\n\n:::\n:::\n\n\n\n## Wrangling multiple columns\n\n-   Target specific columns\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\niris %>%\n  mutate(across(ends_with(\"Width\"), round))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 150 × 5\n   Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n          <dbl>       <dbl>        <dbl>       <dbl> <fct>  \n 1          5.1           4          1.4           0 setosa \n 2          4.9           3          1.4           0 setosa \n 3          4.7           3          1.3           0 setosa \n 4          4.6           3          1.5           0 setosa \n 5          5             4          1.4           0 setosa \n 6          5.4           4          1.7           0 setosa \n 7          4.6           3          1.4           0 setosa \n 8          5             3          1.5           0 setosa \n 9          4.4           3          1.4           0 setosa \n10          4.9           3          1.5           0 setosa \n# ℹ 140 more rows\n```\n\n\n:::\n:::\n\n\n\n## Wrangling multiple columns\n\n-   Target specific columns\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\niris %>%\n  mutate(across(matches(\"Sepal|Petal\"), round))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 150 × 5\n   Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n          <dbl>       <dbl>        <dbl>       <dbl> <fct>  \n 1            5           4            1           0 setosa \n 2            5           3            1           0 setosa \n 3            5           3            1           0 setosa \n 4            5           3            2           0 setosa \n 5            5           4            1           0 setosa \n 6            5           4            2           0 setosa \n 7            5           3            1           0 setosa \n 8            5           3            2           0 setosa \n 9            4           3            1           0 setosa \n10            5           3            2           0 setosa \n# ℹ 140 more rows\n```\n\n\n:::\n:::\n\n\n\n## Wrangling multiple columns\n\n-   Target specific columns based on *another function*\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\niris %>%\n  mutate(across(where(is.numeric), round))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 150 × 5\n   Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n          <dbl>       <dbl>        <dbl>       <dbl> <fct>  \n 1            5           4            1           0 setosa \n 2            5           3            1           0 setosa \n 3            5           3            1           0 setosa \n 4            5           3            2           0 setosa \n 5            5           4            1           0 setosa \n 6            5           4            2           0 setosa \n 7            5           3            1           0 setosa \n 8            5           3            2           0 setosa \n 9            4           3            1           0 setosa \n10            5           3            2           0 setosa \n# ℹ 140 more rows\n```\n\n\n:::\n:::\n\n\n\n## Wrangling multiple columns\n\n-   Using anonymous function to further specify arguments\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\niris %>%\n  mutate(across(where(is.numeric), ~ round(.x, digits = -1)))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 150 × 5\n   Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n          <dbl>       <dbl>        <dbl>       <dbl> <fct>  \n 1           10           0            0           0 setosa \n 2            0           0            0           0 setosa \n 3            0           0            0           0 setosa \n 4            0           0            0           0 setosa \n 5            0           0            0           0 setosa \n 6           10           0            0           0 setosa \n 7            0           0            0           0 setosa \n 8            0           0            0           0 setosa \n 9            0           0            0           0 setosa \n10            0           0            0           0 setosa \n# ℹ 140 more rows\n```\n\n\n:::\n:::\n\n\n\n## Wrangling multiple columns\n\n-   A more realistic example: survey data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(surveydata)\nmembersurvey <- as_tibble(surveydata::membersurvey)\nglimpse(membersurvey)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 215\nColumns: 109\n$ id        <dbl> 3, 5, 6, 11, 13, 15, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31,…\n$ Q1_1      <dbl> 8, 35, 34, 20, 20, 36, 12, 11, 18, 24, 29, 21, 43, 10, 26, 2…\n$ Q1_2      <dbl> 2.0, 12.0, 12.0, 9.0, 3.0, 20.0, 2.5, 0.5, 3.0, 8.0, 14.0, 5…\n$ Q2        <ord> 2009, Before 2002, Before 2002, 2010, 2010, Before 2002, 200…\n$ Q3_1      <fct> No, Yes, Yes, No, No, No, Yes, Yes, Yes, No, Yes, No, Yes, N…\n$ Q3_2      <fct> No, No, Yes, No, No, Yes, No, Yes, Yes, No, Yes, Yes, Yes, Y…\n$ Q3_3      <fct> No, No, No, No, No, No, No, Yes, Yes, No, Yes, Yes, No, No, …\n$ Q3_4      <fct> No, No, No, No, No, No, No, Yes, Yes, Yes, Yes, No, No, No, …\n$ Q3_5      <fct> No, No, No, No, No, No, No, Yes, Yes, Yes, Yes, No, No, Yes,…\n$ Q3_6      <fct> No, No, Yes, No, No, No, Yes, No, Yes, Yes, Yes, No, Yes, No…\n$ Q3_7      <fct> No, No, No, No, No, No, Yes, No, No, No, Yes, No, No, No, No…\n$ Q3_8      <fct> No, No, No, No, No, No, No, No, No, No, No, No, No, No, No, …\n$ Q3_9      <fct> No, Yes, No, No, No, Yes, No, No, Yes, Yes, No, No, No, No, …\n$ Q3_10     <fct> Yes, No, No, No, No, No, No, No, No, No, No, No, No, No, No,…\n$ Q3_11     <fct> No, No, No, Yes, No, No, No, No, No, No, No, No, No, Yes, No…\n$ Q3_12     <fct> No, Yes, No, No, No, No, No, Yes, Yes, No, Yes, No, Yes, No,…\n$ Q3_13     <fct> No, No, No, No, No, No, No, No, No, No, No, No, No, No, No, …\n$ Q3_14     <fct> No, No, No, No, Yes, No, Yes, Yes, No, No, No, No, No, No, N…\n$ Q3_15     <fct> No, No, No, No, No, No, No, Yes, No, No, No, No, No, No, No,…\n$ Q4        <fct> Field services, Ad hoc qual, Ad hoc qual, Data processing, T…\n$ Q5        <fct> Yes, Yes, No, No, No, No, No, No, No, Yes, No, Yes, Yes, Yes…\n$ Q6_1      <fct> Yes, Yes, No, No, No, No, No, No, No, Yes, No, Yes, Yes, Yes…\n$ Q6_2      <fct> Yes, Yes, No, No, No, No, No, No, No, No, No, No, No, Yes, N…\n$ Q6_3      <fct> Yes, Yes, No, No, No, No, No, No, No, Yes, No, No, No, Yes, …\n$ Q6_4      <fct> No, Yes, No, No, No, No, No, No, No, Yes, No, No, No, No, No…\n$ Q6_5      <fct> Yes, Yes, No, No, No, No, No, No, No, Yes, No, No, No, No, N…\n$ Q6_6      <fct> No, No, No, No, No, No, No, No, No, Yes, No, No, No, No, No,…\n$ Q6_7      <fct> No, Yes, No, No, No, No, No, No, No, Yes, No, No, No, No, No…\n$ Q6_8      <fct> No, No, No, No, No, No, No, No, No, No, No, No, No, No, No, …\n$ Q6_9      <fct> No, Yes, No, No, No, No, No, No, No, No, No, No, No, No, No,…\n$ Q6_10     <fct> No, No, No, No, No, No, No, No, No, No, No, No, No, No, No, …\n$ Q7        <fct> 40-60%, 20-40%, 20-40%, 40-60%, 80-100%, 0-20%, 0-20%, 0-20%…\n$ Q8        <fct> Yes, Yes, No, Yes, Yes, No, Yes, No, Yes, Yes, Yes, Yes, Yes…\n$ Q9_1      <fct> Occasionally, Never, Never, Never, Frequently, Never, Freque…\n$ Q9_2      <fct> Frequently, Occasionally, Never, Occasionally, Frequently, N…\n$ Q9_3      <fct> Never, Never, Never, Never, Occasionally, Never, Frequently,…\n$ Q9_4      <fct> Never, Never, Never, Never, Never, Never, Never, Never, Neve…\n$ Q9_5      <fct> Never, Never, Never, Never, Never, Never, Never, Never, Neve…\n$ Q10       <fct> Yes, Yes, No, Yes, Yes, Yes, No, No, No, No, Yes, No, No, No…\n$ Q11_1     <fct> Yes, Yes, No, Yes, Yes, No, Yes, Yes, No, No, Yes, Yes, No, …\n$ Q11_2     <fct> No, No, No, Yes, No, Yes, Yes, No, No, No, Yes, No, Yes, No,…\n$ Q11_3     <fct> No, No, No, Yes, No, No, No, No, No, No, No, No, No, No, No,…\n$ Q11_4     <fct> No, No, No, Yes, No, Yes, No, No, No, No, Yes, No, Yes, No, …\n$ Q11_5     <fct> No, No, Yes, No, No, No, No, No, Yes, Yes, No, No, No, Yes, …\n$ Q11_other <fct> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ Q12_1     <fct> Very satisfied, Satisfied, Completely satisfied, Dissatisfie…\n$ Q13_1     <fct> Satisfied, Very satisfied, Very satisfied, Satisfied, Neutra…\n$ Q13_2     <fct> Very satisfied, Completely satisfied, Completely satisfied, …\n$ Q13_3     <fct> Neutral, Very satisfied, Very satisfied, Neutral, Satisfied,…\n$ Q13_4     <fct> Neutral, Satisfied, Neutral, Neutral, Neutral, Neutral, Neut…\n$ Q14_1     <fct> Neutral, Satisfied, Neutral, Neutral, Satisfied, Neutral, Sa…\n$ Q14_2     <fct> Very satisfied, Very satisfied, Very satisfied, Neutral, Ver…\n$ Q14_3     <fct> Satisfied, Very satisfied, Very satisfied, Neutral, Neutral,…\n$ Q14_4     <fct> Neutral, Neutral, Neutral, Dissatisfied, Dissatisfied, Neutr…\n$ Q14_5     <fct> Very satisfied, Completely satisfied, Very satisfied, Neutra…\n$ Q14_6     <fct> Very satisfied, Very satisfied, Neutral, Neutral, Satisfied,…\n$ Q14_7     <fct> Satisfied, Neutral, Neutral, Neutral, Neutral, Neutral, Neut…\n$ Q14_8     <fct> Satisfied, Very satisfied, Very satisfied, Neutral, Neutral,…\n$ Q14_9     <fct> Satisfied, Very satisfied, Neutral, Neutral, Satisfied, Sati…\n$ Q14_10    <fct> Satisfied, Very satisfied, Very satisfied, Neutral, Neutral,…\n$ Q15_1     <fct> \"Support via the e-group\", \"Support via the e-group\", \"Suppo…\n$ Q15_2     <fct> \"Opportunities for new business\", \"Events for networking, so…\n$ Q15_3     <fct> \"Opportunities for individual promotion\", \"Promotion of smal…\n$ Q15_4     <fct> \"Online resources ( website)\", NA, \"Promotion of smaller MR …\n$ Q15_5     <fct> \"Promotion of smaller MR consultant sector\", NA, \"Opportunit…\n$ Q15_6     <fct> \"Events for networking, socialising and learning\", NA, \"Oppo…\n$ Q19_1     <fct> Rarely, Never, Never, Rarely, Never, Never, Never, Never, Ne…\n$ Q19_2     <fct> Never, Occasionally, Rarely, Never, Never, Never, Never, Nev…\n$ Q19_3     <fct> Never, Rarely, Never, Never, Never, Never, Occasionally, Nev…\n$ Q19_4     <fct> Occasionally, Often / Always, Often / Always, Rarely, Occasi…\n$ Q19_5     <fct> Often / Always, Occasionally, Occasionally, Rarely, Occasion…\n$ Q19_6     <fct> Often / Always, Occasionally, Occasionally, Never, Occasiona…\n$ Q20_1     <fct> Yes, No, No, Yes, No, No, No, Yes, No, No, Yes, No, No, No, …\n$ Q20_2     <fct> No, No, No, Yes, No, Yes, No, No, No, No, Yes, No, No, No, Y…\n$ Q20_3     <fct> No, No, No, No, No, No, No, No, No, No, No, No, No, No, No, …\n$ Q20_4     <fct> No, No, No, No, No, Yes, No, No, No, No, Yes, Yes, No, No, N…\n$ Q20_5     <fct> No, No, No, No, No, Yes, No, No, No, No, No, No, No, No, No,…\n$ Q20_6     <fct> No, No, No, No, No, No, No, No, No, No, Yes, No, No, No, No,…\n$ Q20_7     <fct> No, No, No, No, No, No, No, No, No, No, No, No, No, No, No, …\n$ Q20_8     <fct> No, No, No, No, No, No, No, Yes, No, No, Yes, No, No, Yes, N…\n$ Q20_9     <fct> No, No, No, No, No, No, No, No, No, No, No, No, No, No, No, …\n$ Q20_10    <fct> No, No, No, Yes, No, No, No, No, No, No, No, No, No, No, No,…\n$ Q20_other <fct> NA, NA, NA, NA, \"I rarely attend business events in the even…\n$ Q21_1     <fct> 2, 5 - Highly interested, 3 - Neutral / Not sure, 1 - Comple…\n$ Q21_2     <fct> 4, 5 - Highly interested, 4, 1 - Completely uninterested, 2,…\n$ Q21_3     <fct> 3 - Neutral / Not sure, 3 - Neutral / Not sure, 4, 1 - Compl…\n$ Q21_4     <fct> 5 - Highly interested, 4, 1 - Completely uninterested, 1 - C…\n$ Q21_5     <fct> 5 - Highly interested, 4, 1 - Completely uninterested, 1 - C…\n$ Q21_6     <fct> 3 - Neutral / Not sure, 4, 3 - Neutral / Not sure, 3 - Neutr…\n$ Q23_1     <fct> No, No, Yes, Yes, Yes, Yes, No, Yes, Yes, Yes, Yes, No, Yes,…\n$ Q23_2     <fct> Yes, Yes, No, No, No, No, No, No, No, No, No, No, No, No, Ye…\n$ Q23_3     <fct> No, No, No, No, No, No, No, No, No, No, No, No, No, No, No, …\n$ Q23_4     <fct> No, No, No, No, No, No, No, No, No, No, No, No, Yes, No, No,…\n$ Q23_5     <fct> No, No, No, No, No, No, Yes, No, No, No, No, Yes, No, Yes, N…\n$ Q23_other <fct> NA, \"qrca\", NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ Q24       <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ Q25       <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ Q26_1     <ord> 21-49, 6-10, 6-10, 6-10, 21-49, 1-5, 6-10, NA, 6-10, 11-20, …\n$ Q27_1     <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ Q27_2     <dbl> 1000, 700, 400, 300, NA, 450, 400, 200, 350, NA, 300, 350, 4…\n$ Q30       <fct> Fieldwork, Consultancy, Consultancy, Data analysis, NA, Cons…\n$ Q30_other <fct> NA, NA, NA, NA, Coach/Trainer, NA, NA, NA, NA, NA, NA, NA, N…\n$ Q31       <fct> Sole trader, Limited company, Sole trader, Limited company, …\n$ Q31_other <fct> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ Q32       <ord> Part-time (20-34 hours a week), Full-time (35 or more hours …\n$ Q33       <fct> UK - Greater London, UK - Midlands / East of England / Wales…\n$ Q35       <fct> Male, Female, Female, Female, Male, Male, Male, Female, Fema…\n$ weight    <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, …\n$ size      <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, …\n```\n\n\n:::\n:::\n\n\n\n## Wrangling multiple columns\n\n-   Converting text to binary values\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmembersurvey %>%\n  mutate(Q3_1 = if_else(Q3_1 == \"Yes\", 1, 0))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 215 × 109\n      id  Q1_1  Q1_2 Q2     Q3_1 Q3_2  Q3_3  Q3_4  Q3_5  Q3_6  Q3_7  Q3_8  Q3_9 \n   <dbl> <dbl> <dbl> <ord> <dbl> <fct> <fct> <fct> <fct> <fct> <fct> <fct> <fct>\n 1     3     8   2   2009      0 No    No    No    No    No    No    No    No   \n 2     5    35  12   Befo…     1 No    No    No    No    No    No    No    Yes  \n 3     6    34  12   Befo…     1 Yes   No    No    No    Yes   No    No    No   \n 4    11    20   9   2010      0 No    No    No    No    No    No    No    No   \n 5    13    20   3   2010      0 No    No    No    No    No    No    No    No   \n 6    15    36  20   Befo…     0 Yes   No    No    No    No    No    No    Yes  \n 7    21    12   2.5 2009      1 No    No    No    No    Yes   Yes   No    No   \n 8    22    11   0.5 2011      1 Yes   Yes   Yes   Yes   No    No    No    No   \n 9    23    18   3   2008      1 Yes   Yes   Yes   Yes   Yes   No    No    Yes  \n10    25    24   8   2006      0 No    No    Yes   Yes   Yes   No    No    Yes  \n# ℹ 205 more rows\n# ℹ 96 more variables: Q3_10 <fct>, Q3_11 <fct>, Q3_12 <fct>, Q3_13 <fct>,\n#   Q3_14 <fct>, Q3_15 <fct>, Q4 <fct>, Q5 <fct>, Q6_1 <fct>, Q6_2 <fct>,\n#   Q6_3 <fct>, Q6_4 <fct>, Q6_5 <fct>, Q6_6 <fct>, Q6_7 <fct>, Q6_8 <fct>,\n#   Q6_9 <fct>, Q6_10 <fct>, Q7 <fct>, Q8 <fct>, Q9_1 <fct>, Q9_2 <fct>,\n#   Q9_3 <fct>, Q9_4 <fct>, Q9_5 <fct>, Q10 <fct>, Q11_1 <fct>, Q11_2 <fct>,\n#   Q11_3 <fct>, Q11_4 <fct>, Q11_5 <fct>, Q11_other <fct>, Q12_1 <fct>, …\n```\n\n\n:::\n:::\n\n\n\n## Wrangling multiple columns\n\n-   Converting all Q3\\_\\* columns\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmembersurvey %>%\n  mutate(across(starts_with(\"Q3_\"), ~ if_else(.x == \"Yes\", 1, 0)))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 215 × 109\n      id  Q1_1  Q1_2 Q2     Q3_1  Q3_2  Q3_3  Q3_4  Q3_5  Q3_6  Q3_7  Q3_8  Q3_9\n   <dbl> <dbl> <dbl> <ord> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>\n 1     3     8   2   2009      0     0     0     0     0     0     0     0     0\n 2     5    35  12   Befo…     1     0     0     0     0     0     0     0     1\n 3     6    34  12   Befo…     1     1     0     0     0     1     0     0     0\n 4    11    20   9   2010      0     0     0     0     0     0     0     0     0\n 5    13    20   3   2010      0     0     0     0     0     0     0     0     0\n 6    15    36  20   Befo…     0     1     0     0     0     0     0     0     1\n 7    21    12   2.5 2009      1     0     0     0     0     1     1     0     0\n 8    22    11   0.5 2011      1     1     1     1     1     0     0     0     0\n 9    23    18   3   2008      1     1     1     1     1     1     0     0     1\n10    25    24   8   2006      0     0     0     1     1     1     0     0     1\n# ℹ 205 more rows\n# ℹ 96 more variables: Q3_10 <dbl>, Q3_11 <dbl>, Q3_12 <dbl>, Q3_13 <dbl>,\n#   Q3_14 <dbl>, Q3_15 <dbl>, Q4 <fct>, Q5 <fct>, Q6_1 <fct>, Q6_2 <fct>,\n#   Q6_3 <fct>, Q6_4 <fct>, Q6_5 <fct>, Q6_6 <fct>, Q6_7 <fct>, Q6_8 <fct>,\n#   Q6_9 <fct>, Q6_10 <fct>, Q7 <fct>, Q8 <fct>, Q9_1 <fct>, Q9_2 <fct>,\n#   Q9_3 <fct>, Q9_4 <fct>, Q9_5 <fct>, Q10 <fct>, Q11_1 <fct>, Q11_2 <fct>,\n#   Q11_3 <fct>, Q11_4 <fct>, Q11_5 <fct>, Q11_other <fct>, Q12_1 <fct>, …\n```\n\n\n:::\n:::\n\n\n\n## Wrangling multiple columns\n\n-   Q13\\_\\* columns are coded in Likert scale values in text\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmembersurvey %>%\n  select(starts_with(\"Q13_\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                   Q13_1                Q13_2                Q13_3\n1              Satisfied       Very satisfied              Neutral\n2         Very satisfied Completely satisfied       Very satisfied\n3         Very satisfied Completely satisfied       Very satisfied\n4              Satisfied         Dissatisfied              Neutral\n5                Neutral         Dissatisfied            Satisfied\n6              Satisfied            Satisfied              Neutral\n7              Satisfied       Very satisfied Completely satisfied\n8              Satisfied              Neutral              Neutral\n9         Very satisfied Completely satisfied              Neutral\n10             Satisfied Completely satisfied            Satisfied\n11        Very satisfied            Satisfied       Very satisfied\n12             Satisfied       Very satisfied            Satisfied\n13        Very satisfied       Very satisfied            Satisfied\n14             Satisfied            Satisfied              Neutral\n15             Satisfied       Very satisfied       Very satisfied\n16             Satisfied       Very satisfied              Neutral\n17             Satisfied Completely satisfied       Very satisfied\n18               Neutral            Satisfied              Neutral\n19               Neutral Completely satisfied       Very satisfied\n20               Neutral            Satisfied              Neutral\n21             Satisfied Completely satisfied            Satisfied\n22             Satisfied            Satisfied              Neutral\n23             Satisfied       Very satisfied            Satisfied\n24        Very satisfied       Very satisfied              Neutral\n25               Neutral            Satisfied              Neutral\n26             Satisfied            Satisfied              Neutral\n27        Very satisfied       Very satisfied       Very satisfied\n28             Satisfied       Very satisfied            Satisfied\n29             Satisfied       Very satisfied         Dissatisfied\n30             Satisfied       Very satisfied            Satisfied\n31               Neutral              Neutral              Neutral\n32             Satisfied       Very satisfied            Satisfied\n33        Very satisfied       Very satisfied              Neutral\n34        Very satisfied       Very satisfied       Very satisfied\n35               Neutral       Very satisfied       Very satisfied\n36        Very satisfied Completely satisfied Completely satisfied\n37               Neutral              Neutral              Neutral\n38        Very satisfied Completely satisfied       Very satisfied\n39             Satisfied       Very satisfied            Satisfied\n40        Very satisfied Completely satisfied       Very satisfied\n41             Satisfied       Very satisfied            Satisfied\n42               Neutral       Very satisfied              Neutral\n43             Satisfied       Very satisfied            Satisfied\n44        Very satisfied Completely satisfied       Very satisfied\n45        Very satisfied       Very satisfied              Neutral\n46  Completely satisfied Completely satisfied Completely satisfied\n47        Very satisfied         Dissatisfied              Neutral\n48             Satisfied            Satisfied              Neutral\n49             Satisfied         Dissatisfied       Very satisfied\n50        Very satisfied              Neutral       Very satisfied\n51               Neutral            Satisfied              Neutral\n52             Satisfied       Very satisfied            Satisfied\n53             Satisfied       Very satisfied            Satisfied\n54               Neutral Completely satisfied            Satisfied\n55        Very satisfied Completely satisfied       Very satisfied\n56               Neutral              Neutral              Neutral\n57  Completely satisfied Completely satisfied       Very satisfied\n58        Very satisfied       Very satisfied            Satisfied\n59               Neutral       Very satisfied            Satisfied\n60             Satisfied            Satisfied       Very satisfied\n61             Satisfied       Very satisfied            Satisfied\n62             Satisfied       Very satisfied            Satisfied\n63               Neutral         Dissatisfied         Dissatisfied\n64             Satisfied       Very satisfied              Neutral\n65               Neutral              Neutral              Neutral\n66  Completely satisfied Completely satisfied Completely satisfied\n67        Very satisfied Completely satisfied            Satisfied\n68             Satisfied       Very satisfied            Satisfied\n69               Neutral Completely satisfied              Neutral\n70             Satisfied       Very satisfied            Satisfied\n71             Satisfied            Satisfied            Satisfied\n72               Neutral            Satisfied              Neutral\n73        Very satisfied Completely satisfied              Neutral\n74             Satisfied            Satisfied              Neutral\n75          Dissatisfied              Neutral         Dissatisfied\n76               Neutral            Satisfied            Satisfied\n77               Neutral       Very satisfied            Satisfied\n78               Neutral Completely satisfied              Neutral\n79             Satisfied            Satisfied            Satisfied\n80               Neutral            Satisfied              Neutral\n81        Very satisfied       Very satisfied       Very satisfied\n82             Satisfied Completely satisfied              Neutral\n83        Very satisfied Completely satisfied            Satisfied\n84             Satisfied       Very satisfied       Very satisfied\n85             Satisfied Completely satisfied            Satisfied\n86        Very satisfied Completely satisfied            Satisfied\n87             Satisfied Completely satisfied            Satisfied\n88               Neutral            Satisfied              Neutral\n89             Satisfied       Very satisfied            Satisfied\n90             Satisfied       Very satisfied            Satisfied\n91        Very satisfied       Very satisfied       Very satisfied\n92               Neutral       Very satisfied              Neutral\n93             Satisfied Completely satisfied       Very satisfied\n94             Satisfied            Satisfied              Neutral\n95               Neutral       Very satisfied              Neutral\n96        Very satisfied            Satisfied              Neutral\n97             Satisfied            Satisfied            Satisfied\n98             Satisfied       Very satisfied            Satisfied\n99               Neutral            Satisfied              Neutral\n100              Neutral Completely satisfied              Neutral\n101       Very satisfied Completely satisfied       Very satisfied\n102            Satisfied Completely satisfied              Neutral\n103       Very satisfied            Satisfied       Very satisfied\n104              Neutral       Very satisfied              Neutral\n105            Satisfied       Very satisfied            Satisfied\n106            Satisfied       Very satisfied            Satisfied\n107              Neutral       Very satisfied              Neutral\n108            Satisfied Completely satisfied              Neutral\n109              Neutral       Very satisfied              Neutral\n110       Very satisfied Completely satisfied       Very satisfied\n111            Satisfied       Very satisfied       Very satisfied\n112            Satisfied            Satisfied            Satisfied\n113              Neutral       Very satisfied            Satisfied\n114 Completely satisfied       Very satisfied              Neutral\n115              Neutral       Very satisfied              Neutral\n116            Satisfied Completely satisfied            Satisfied\n117            Satisfied       Very satisfied            Satisfied\n118         Dissatisfied       Very satisfied              Neutral\n119              Neutral            Satisfied              Neutral\n120              Neutral              Neutral              Neutral\n121            Satisfied       Very satisfied            Satisfied\n122            Satisfied       Very satisfied    Very dissatisfied\n123              Neutral Completely satisfied              Neutral\n124              Neutral       Very satisfied            Satisfied\n125              Neutral       Very satisfied            Satisfied\n126       Very satisfied       Very satisfied       Very satisfied\n127            Satisfied Completely satisfied              Neutral\n128              Neutral       Very satisfied       Very satisfied\n129              Neutral              Neutral              Neutral\n130            Satisfied       Very satisfied            Satisfied\n131            Satisfied       Very satisfied            Satisfied\n132            Satisfied       Very satisfied            Satisfied\n133            Satisfied            Satisfied              Neutral\n134       Very satisfied Completely satisfied       Very satisfied\n135         Dissatisfied            Satisfied    Very dissatisfied\n136       Very satisfied Completely satisfied            Satisfied\n137            Satisfied       Very satisfied              Neutral\n138 Completely satisfied Completely satisfied       Very satisfied\n139              Neutral              Neutral              Neutral\n140            Satisfied       Very satisfied              Neutral\n141         Dissatisfied            Satisfied              Neutral\n142 Completely satisfied Completely satisfied       Very satisfied\n143              Neutral              Neutral            Satisfied\n144              Neutral              Neutral              Neutral\n145            Satisfied            Satisfied              Neutral\n146            Satisfied Completely satisfied       Very satisfied\n147            Satisfied       Very satisfied              Neutral\n148         Dissatisfied       Very satisfied              Neutral\n149       Very satisfied       Very satisfied       Very satisfied\n150            Satisfied              Neutral            Satisfied\n151            Satisfied            Satisfied              Neutral\n152            Satisfied            Satisfied              Neutral\n153            Satisfied       Very satisfied              Neutral\n154    Very dissatisfied            Satisfied              Neutral\n155       Very satisfied            Satisfied              Neutral\n156         Dissatisfied            Satisfied              Neutral\n157              Neutral            Satisfied              Neutral\n158       Very satisfied         Dissatisfied              Neutral\n159            Satisfied       Very satisfied            Satisfied\n160              Neutral Completely satisfied              Neutral\n161            Satisfied       Very satisfied              Neutral\n162            Satisfied Completely satisfied              Neutral\n163              Neutral            Satisfied       Very satisfied\n164            Satisfied            Satisfied              Neutral\n165            Satisfied       Very satisfied              Neutral\n166       Very satisfied       Very satisfied       Very satisfied\n167              Neutral       Very satisfied              Neutral\n168       Very satisfied            Satisfied            Satisfied\n169       Very satisfied Completely satisfied       Very satisfied\n170            Satisfied            Satisfied            Satisfied\n171         Dissatisfied            Satisfied              Neutral\n172            Satisfied       Very satisfied              Neutral\n173       Very satisfied       Very satisfied       Very satisfied\n174              Neutral            Satisfied              Neutral\n175            Satisfied            Satisfied              Neutral\n176            Satisfied Completely satisfied            Satisfied\n177            Satisfied            Satisfied       Very satisfied\n178       Very satisfied       Very satisfied            Satisfied\n179       Very satisfied       Very satisfied            Satisfied\n180       Very satisfied       Very satisfied              Neutral\n181              Neutral       Very satisfied            Satisfied\n182 Completely satisfied Completely satisfied Completely satisfied\n183              Neutral            Satisfied              Neutral\n184            Satisfied       Very satisfied            Satisfied\n185            Satisfied       Very satisfied            Satisfied\n186            Satisfied       Very satisfied            Satisfied\n187       Very satisfied       Very satisfied       Very satisfied\n188            Satisfied       Very satisfied              Neutral\n189              Neutral       Very satisfied              Neutral\n190            Satisfied            Satisfied              Neutral\n191         Dissatisfied       Very satisfied              Neutral\n192            Satisfied Completely satisfied            Satisfied\n193            Satisfied       Very satisfied            Satisfied\n194       Very satisfied       Very satisfied       Very satisfied\n195            Satisfied       Very satisfied            Satisfied\n196            Satisfied         Dissatisfied            Satisfied\n197       Very satisfied       Very satisfied       Very satisfied\n198              Neutral       Very satisfied              Neutral\n199            Satisfied       Very satisfied            Satisfied\n200       Very satisfied         Dissatisfied       Very satisfied\n201            Satisfied            Satisfied            Satisfied\n202 Completely satisfied Completely satisfied Completely satisfied\n203            Satisfied            Satisfied              Neutral\n204         Dissatisfied            Satisfied              Neutral\n205            Satisfied       Very satisfied              Neutral\n206       Very satisfied       Very satisfied            Satisfied\n207              Neutral            Satisfied              Neutral\n208              Neutral         Dissatisfied              Neutral\n209       Very satisfied       Very satisfied       Very satisfied\n210       Very satisfied       Very satisfied       Very satisfied\n211              Neutral            Satisfied              Neutral\n212            Satisfied            Satisfied            Satisfied\n213            Satisfied            Satisfied            Satisfied\n214            Satisfied            Satisfied            Satisfied\n215              Neutral       Very satisfied              Neutral\n                   Q13_4\n1                Neutral\n2              Satisfied\n3                Neutral\n4                Neutral\n5                Neutral\n6                Neutral\n7                Neutral\n8                Neutral\n9   Completely satisfied\n10             Satisfied\n11             Satisfied\n12               Neutral\n13             Satisfied\n14               Neutral\n15               Neutral\n16     Very dissatisfied\n17        Very satisfied\n18               Neutral\n19  Completely satisfied\n20             Satisfied\n21             Satisfied\n22               Neutral\n23          Dissatisfied\n24               Neutral\n25               Neutral\n26               Neutral\n27               Neutral\n28             Satisfied\n29             Satisfied\n30        Very satisfied\n31               Neutral\n32          Dissatisfied\n33             Satisfied\n34        Very satisfied\n35        Very satisfied\n36             Satisfied\n37               Neutral\n38             Satisfied\n39               Neutral\n40        Very satisfied\n41             Satisfied\n42               Neutral\n43               Neutral\n44        Very satisfied\n45               Neutral\n46  Completely satisfied\n47               Neutral\n48               Neutral\n49               Neutral\n50               Neutral\n51               Neutral\n52               Neutral\n53               Neutral\n54             Satisfied\n55               Neutral\n56               Neutral\n57        Very satisfied\n58             Satisfied\n59               Neutral\n60        Very satisfied\n61               Neutral\n62             Satisfied\n63             Satisfied\n64               Neutral\n65               Neutral\n66             Satisfied\n67        Very satisfied\n68             Satisfied\n69             Satisfied\n70               Neutral\n71               Neutral\n72               Neutral\n73        Very satisfied\n74             Satisfied\n75             Satisfied\n76               Neutral\n77               Neutral\n78          Dissatisfied\n79             Satisfied\n80               Neutral\n81        Very satisfied\n82               Neutral\n83        Very satisfied\n84        Very satisfied\n85               Neutral\n86               Neutral\n87        Very satisfied\n88          Dissatisfied\n89               Neutral\n90        Very satisfied\n91               Neutral\n92               Neutral\n93        Very satisfied\n94               Neutral\n95               Neutral\n96               Neutral\n97               Neutral\n98               Neutral\n99               Neutral\n100            Satisfied\n101            Satisfied\n102         Dissatisfied\n103         Dissatisfied\n104            Satisfied\n105            Satisfied\n106            Satisfied\n107            Satisfied\n108              Neutral\n109            Satisfied\n110       Very satisfied\n111            Satisfied\n112            Satisfied\n113            Satisfied\n114              Neutral\n115              Neutral\n116              Neutral\n117            Satisfied\n118              Neutral\n119            Satisfied\n120              Neutral\n121            Satisfied\n122       Very satisfied\n123              Neutral\n124              Neutral\n125            Satisfied\n126            Satisfied\n127            Satisfied\n128         Dissatisfied\n129              Neutral\n130            Satisfied\n131              Neutral\n132            Satisfied\n133       Very satisfied\n134            Satisfied\n135            Satisfied\n136              Neutral\n137              Neutral\n138              Neutral\n139            Satisfied\n140              Neutral\n141              Neutral\n142       Very satisfied\n143            Satisfied\n144              Neutral\n145              Neutral\n146            Satisfied\n147              Neutral\n148         Dissatisfied\n149       Very satisfied\n150              Neutral\n151              Neutral\n152         Dissatisfied\n153              Neutral\n154         Dissatisfied\n155              Neutral\n156              Neutral\n157            Satisfied\n158              Neutral\n159            Satisfied\n160            Satisfied\n161              Neutral\n162            Satisfied\n163       Very satisfied\n164              Neutral\n165         Dissatisfied\n166       Very satisfied\n167              Neutral\n168            Satisfied\n169            Satisfied\n170            Satisfied\n171              Neutral\n172              Neutral\n173       Very satisfied\n174              Neutral\n175            Satisfied\n176            Satisfied\n177            Satisfied\n178       Very satisfied\n179            Satisfied\n180            Satisfied\n181              Neutral\n182            Satisfied\n183              Neutral\n184            Satisfied\n185       Very satisfied\n186              Neutral\n187       Very satisfied\n188              Neutral\n189              Neutral\n190              Neutral\n191            Satisfied\n192              Neutral\n193              Neutral\n194              Neutral\n195              Neutral\n196            Satisfied\n197              Neutral\n198              Neutral\n199            Satisfied\n200            Satisfied\n201            Satisfied\n202            Satisfied\n203              Neutral\n204              Neutral\n205            Satisfied\n206              Neutral\n207            Satisfied\n208              Neutral\n209       Very satisfied\n210       Very satisfied\n211              Neutral\n212              Neutral\n213            Satisfied\n214            Satisfied\n215         Dissatisfied\n```\n\n\n:::\n:::\n\n\n\n## Wrangling multiple columns\n\n::::: columns\n::: {.column width=\"60%\"}\n-   Manually recode all columns\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmembersurvey %>%\n  select(starts_with(\"Q13_\")) %>%\n  mutate(\n    Q13_1 =  case_when(\n      Q13_1 == \"Completely dissatisfied\" ~ -3,\n      Q13_1 == \"Very dissatisfied\" ~ -2,\n      Q13_1 == \"Dissatisfied\" ~ -1,\n      Q13_1 == \"Neutral\" ~ 0,\n      Q13_1 == \"Satisfied\" ~ 1,\n      Q13_1 == \"Very satisfied\" ~ 2,\n      Q13_1 == \"Completely satisfied\" ~ 3\n    ),\n    Q13_2 =  case_when(\n      Q13_2 == \"Completely dissatisfied\" ~ -3,\n      Q13_2 == \"Very dissatisfied\" ~ -2,\n      Q13_2 == \"Dissatisfied\" ~ -1,\n      Q13_2 == \"Neutral\" ~ 0,\n      Q13_2 == \"Satisfied\" ~ 1,\n      Q13_2 == \"Very satisfied\" ~ 2,\n      Q13_2 == \"Completely satisfied\" ~ 3\n    ),\n    Q13_3 =  case_when(\n      Q13_3 == \"Completely dissatisfied\" ~ -3,\n      Q13_3 == \"Very dissatisfied\" ~ -2,\n      Q13_3 == \"Dissatisfied\" ~ -1,\n      Q13_3 == \"Neutral\" ~ 0,\n      Q13_3 == \"Satisfied\" ~ 1,\n      Q13_3 == \"Very satisfied\" ~ 2,\n      Q13_3 == \"Completely satisfied\" ~ 3\n    ),\n    Q13_4 =  case_when(\n      Q13_4 == \"Completely dissatisfied\" ~ -3,\n      Q13_4 == \"Very dissatisfied\" ~ -2,\n      Q13_4 == \"Dissatisfied\" ~ -1,\n      Q13_4 == \"Neutral\" ~ 0,\n      Q13_4 == \"Satisfied\" ~ 1,\n      Q13_4 == \"Very satisfied\" ~ 2,\n      Q13_4 == \"Completely satisfied\" ~ 3\n    )\n  )\n```\n:::\n\n\n:::\n\n::: {.column width=\"40%\"}\n-   Output\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n    Q13_1 Q13_2 Q13_3 Q13_4\n1       1     2     0     0\n2       2     3     2     1\n3       2     3     2     0\n4       1    -1     0     0\n5       0    -1     1     0\n6       1     1     0     0\n7       1     2     3     0\n8       1     0     0     0\n9       2     3     0     3\n10      1     3     1     1\n11      2     1     2     1\n12      1     2     1     0\n13      2     2     1     1\n14      1     1     0     0\n15      1     2     2     0\n16      1     2     0    -2\n17      1     3     2     2\n18      0     1     0     0\n19      0     3     2     3\n20      0     1     0     1\n21      1     3     1     1\n22      1     1     0     0\n23      1     2     1    -1\n24      2     2     0     0\n25      0     1     0     0\n26      1     1     0     0\n27      2     2     2     0\n28      1     2     1     1\n29      1     2    -1     1\n30      1     2     1     2\n31      0     0     0     0\n32      1     2     1    -1\n33      2     2     0     1\n34      2     2     2     2\n35      0     2     2     2\n36      2     3     3     1\n37      0     0     0     0\n38      2     3     2     1\n39      1     2     1     0\n40      2     3     2     2\n41      1     2     1     1\n42      0     2     0     0\n43      1     2     1     0\n44      2     3     2     2\n45      2     2     0     0\n46      3     3     3     3\n47      2    -1     0     0\n48      1     1     0     0\n49      1    -1     2     0\n50      2     0     2     0\n51      0     1     0     0\n52      1     2     1     0\n53      1     2     1     0\n54      0     3     1     1\n55      2     3     2     0\n56      0     0     0     0\n57      3     3     2     2\n58      2     2     1     1\n59      0     2     1     0\n60      1     1     2     2\n61      1     2     1     0\n62      1     2     1     1\n63      0    -1    -1     1\n64      1     2     0     0\n65      0     0     0     0\n66      3     3     3     1\n67      2     3     1     2\n68      1     2     1     1\n69      0     3     0     1\n70      1     2     1     0\n71      1     1     1     0\n72      0     1     0     0\n73      2     3     0     2\n74      1     1     0     1\n75     -1     0    -1     1\n76      0     1     1     0\n77      0     2     1     0\n78      0     3     0    -1\n79      1     1     1     1\n80      0     1     0     0\n81      2     2     2     2\n82      1     3     0     0\n83      2     3     1     2\n84      1     2     2     2\n85      1     3     1     0\n86      2     3     1     0\n87      1     3     1     2\n88      0     1     0    -1\n89      1     2     1     0\n90      1     2     1     2\n91      2     2     2     0\n92      0     2     0     0\n93      1     3     2     2\n94      1     1     0     0\n95      0     2     0     0\n96      2     1     0     0\n97      1     1     1     0\n98      1     2     1     0\n99      0     1     0     0\n100     0     3     0     1\n101     2     3     2     1\n102     1     3     0    -1\n103     2     1     2    -1\n104     0     2     0     1\n105     1     2     1     1\n106     1     2     1     1\n107     0     2     0     1\n108     1     3     0     0\n109     0     2     0     1\n110     2     3     2     2\n111     1     2     2     1\n112     1     1     1     1\n113     0     2     1     1\n114     3     2     0     0\n115     0     2     0     0\n116     1     3     1     0\n117     1     2     1     1\n118    -1     2     0     0\n119     0     1     0     1\n120     0     0     0     0\n121     1     2     1     1\n122     1     2    -2     2\n123     0     3     0     0\n124     0     2     1     0\n125     0     2     1     1\n126     2     2     2     1\n127     1     3     0     1\n128     0     2     2    -1\n129     0     0     0     0\n130     1     2     1     1\n131     1     2     1     0\n132     1     2     1     1\n133     1     1     0     2\n134     2     3     2     1\n135    -1     1    -2     1\n136     2     3     1     0\n137     1     2     0     0\n138     3     3     2     0\n139     0     0     0     1\n140     1     2     0     0\n141    -1     1     0     0\n142     3     3     2     2\n143     0     0     1     1\n144     0     0     0     0\n145     1     1     0     0\n146     1     3     2     1\n147     1     2     0     0\n148    -1     2     0    -1\n149     2     2     2     2\n150     1     0     1     0\n151     1     1     0     0\n152     1     1     0    -1\n153     1     2     0     0\n154    -2     1     0    -1\n155     2     1     0     0\n156    -1     1     0     0\n157     0     1     0     1\n158     2    -1     0     0\n159     1     2     1     1\n160     0     3     0     1\n161     1     2     0     0\n162     1     3     0     1\n163     0     1     2     2\n164     1     1     0     0\n165     1     2     0    -1\n166     2     2     2     2\n167     0     2     0     0\n168     2     1     1     1\n169     2     3     2     1\n170     1     1     1     1\n171    -1     1     0     0\n172     1     2     0     0\n173     2     2     2     2\n174     0     1     0     0\n175     1     1     0     1\n176     1     3     1     1\n177     1     1     2     1\n178     2     2     1     2\n179     2     2     1     1\n180     2     2     0     1\n181     0     2     1     0\n182     3     3     3     1\n183     0     1     0     0\n184     1     2     1     1\n185     1     2     1     2\n186     1     2     1     0\n187     2     2     2     2\n188     1     2     0     0\n189     0     2     0     0\n190     1     1     0     0\n191    -1     2     0     1\n192     1     3     1     0\n193     1     2     1     0\n194     2     2     2     0\n195     1     2     1     0\n196     1    -1     1     1\n197     2     2     2     0\n198     0     2     0     0\n199     1     2     1     1\n200     2    -1     2     1\n201     1     1     1     1\n202     3     3     3     1\n203     1     1     0     0\n204    -1     1     0     0\n205     1     2     0     1\n206     2     2     1     0\n207     0     1     0     1\n208     0    -1     0     0\n209     2     2     2     2\n210     2     2     2     2\n211     0     1     0     0\n212     1     1     1     0\n213     1     1     1     1\n214     1     1     1     1\n215     0     2     0    -1\n```\n\n\n:::\n:::\n\n\n:::\n:::::\n\n## Wrangling multiple columns\n\n-   Functional approach: write a simple function!\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nconvert_text_to_num <- function(x) {\n  case_when(\n    x == \"Completely dissatisfied\" ~ -3,\n    x == \"Very dissatisfied\" ~ -2,\n    x == \"Dissatisfied\" ~ -1,\n    x == \"Neutral\" ~ 0,\n    x == \"Satisfied\" ~ 1,               \n    x == \"Very satisfied\" ~ 2,\n    x == \"Completely satisfied\" ~ 3\n  )\n}\n\nconvert_text_to_num(\"Dissatisfied\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] -1\n```\n\n\n:::\n\n```{.r .cell-code}\nconvert_text_to_num(\"Satisfied\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1\n```\n\n\n:::\n:::\n\n\n\n## Wrangling multiple columns\n\n-   Functional approach: apply the function across columns\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmembersurvey %>%\n  mutate(across(starts_with(\"Q13_\"), convert_text_to_num)) %>%\n  select(starts_with(\"Q13_\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n    Q13_1 Q13_2 Q13_3 Q13_4\n1       1     2     0     0\n2       2     3     2     1\n3       2     3     2     0\n4       1    -1     0     0\n5       0    -1     1     0\n6       1     1     0     0\n7       1     2     3     0\n8       1     0     0     0\n9       2     3     0     3\n10      1     3     1     1\n11      2     1     2     1\n12      1     2     1     0\n13      2     2     1     1\n14      1     1     0     0\n15      1     2     2     0\n16      1     2     0    -2\n17      1     3     2     2\n18      0     1     0     0\n19      0     3     2     3\n20      0     1     0     1\n21      1     3     1     1\n22      1     1     0     0\n23      1     2     1    -1\n24      2     2     0     0\n25      0     1     0     0\n26      1     1     0     0\n27      2     2     2     0\n28      1     2     1     1\n29      1     2    -1     1\n30      1     2     1     2\n31      0     0     0     0\n32      1     2     1    -1\n33      2     2     0     1\n34      2     2     2     2\n35      0     2     2     2\n36      2     3     3     1\n37      0     0     0     0\n38      2     3     2     1\n39      1     2     1     0\n40      2     3     2     2\n41      1     2     1     1\n42      0     2     0     0\n43      1     2     1     0\n44      2     3     2     2\n45      2     2     0     0\n46      3     3     3     3\n47      2    -1     0     0\n48      1     1     0     0\n49      1    -1     2     0\n50      2     0     2     0\n51      0     1     0     0\n52      1     2     1     0\n53      1     2     1     0\n54      0     3     1     1\n55      2     3     2     0\n56      0     0     0     0\n57      3     3     2     2\n58      2     2     1     1\n59      0     2     1     0\n60      1     1     2     2\n61      1     2     1     0\n62      1     2     1     1\n63      0    -1    -1     1\n64      1     2     0     0\n65      0     0     0     0\n66      3     3     3     1\n67      2     3     1     2\n68      1     2     1     1\n69      0     3     0     1\n70      1     2     1     0\n71      1     1     1     0\n72      0     1     0     0\n73      2     3     0     2\n74      1     1     0     1\n75     -1     0    -1     1\n76      0     1     1     0\n77      0     2     1     0\n78      0     3     0    -1\n79      1     1     1     1\n80      0     1     0     0\n81      2     2     2     2\n82      1     3     0     0\n83      2     3     1     2\n84      1     2     2     2\n85      1     3     1     0\n86      2     3     1     0\n87      1     3     1     2\n88      0     1     0    -1\n89      1     2     1     0\n90      1     2     1     2\n91      2     2     2     0\n92      0     2     0     0\n93      1     3     2     2\n94      1     1     0     0\n95      0     2     0     0\n96      2     1     0     0\n97      1     1     1     0\n98      1     2     1     0\n99      0     1     0     0\n100     0     3     0     1\n101     2     3     2     1\n102     1     3     0    -1\n103     2     1     2    -1\n104     0     2     0     1\n105     1     2     1     1\n106     1     2     1     1\n107     0     2     0     1\n108     1     3     0     0\n109     0     2     0     1\n110     2     3     2     2\n111     1     2     2     1\n112     1     1     1     1\n113     0     2     1     1\n114     3     2     0     0\n115     0     2     0     0\n116     1     3     1     0\n117     1     2     1     1\n118    -1     2     0     0\n119     0     1     0     1\n120     0     0     0     0\n121     1     2     1     1\n122     1     2    -2     2\n123     0     3     0     0\n124     0     2     1     0\n125     0     2     1     1\n126     2     2     2     1\n127     1     3     0     1\n128     0     2     2    -1\n129     0     0     0     0\n130     1     2     1     1\n131     1     2     1     0\n132     1     2     1     1\n133     1     1     0     2\n134     2     3     2     1\n135    -1     1    -2     1\n136     2     3     1     0\n137     1     2     0     0\n138     3     3     2     0\n139     0     0     0     1\n140     1     2     0     0\n141    -1     1     0     0\n142     3     3     2     2\n143     0     0     1     1\n144     0     0     0     0\n145     1     1     0     0\n146     1     3     2     1\n147     1     2     0     0\n148    -1     2     0    -1\n149     2     2     2     2\n150     1     0     1     0\n151     1     1     0     0\n152     1     1     0    -1\n153     1     2     0     0\n154    -2     1     0    -1\n155     2     1     0     0\n156    -1     1     0     0\n157     0     1     0     1\n158     2    -1     0     0\n159     1     2     1     1\n160     0     3     0     1\n161     1     2     0     0\n162     1     3     0     1\n163     0     1     2     2\n164     1     1     0     0\n165     1     2     0    -1\n166     2     2     2     2\n167     0     2     0     0\n168     2     1     1     1\n169     2     3     2     1\n170     1     1     1     1\n171    -1     1     0     0\n172     1     2     0     0\n173     2     2     2     2\n174     0     1     0     0\n175     1     1     0     1\n176     1     3     1     1\n177     1     1     2     1\n178     2     2     1     2\n179     2     2     1     1\n180     2     2     0     1\n181     0     2     1     0\n182     3     3     3     1\n183     0     1     0     0\n184     1     2     1     1\n185     1     2     1     2\n186     1     2     1     0\n187     2     2     2     2\n188     1     2     0     0\n189     0     2     0     0\n190     1     1     0     0\n191    -1     2     0     1\n192     1     3     1     0\n193     1     2     1     0\n194     2     2     2     0\n195     1     2     1     0\n196     1    -1     1     1\n197     2     2     2     0\n198     0     2     0     0\n199     1     2     1     1\n200     2    -1     2     1\n201     1     1     1     1\n202     3     3     3     1\n203     1     1     0     0\n204    -1     1     0     0\n205     1     2     0     1\n206     2     2     1     0\n207     0     1     0     1\n208     0    -1     0     0\n209     2     2     2     2\n210     2     2     2     2\n211     0     1     0     0\n212     1     1     1     0\n213     1     1     1     1\n214     1     1     1     1\n215     0     2     0    -1\n```\n\n\n:::\n:::\n\n\n\n## Wrangling multiple columns\n\n-   `across()` also works with `summarize()`!\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmembersurvey %>%\n  mutate(across(starts_with(\"Q13_\"), convert_text_to_num)) %>%\n  summarize(across(starts_with(\"Q13_\"), mean))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 4\n  Q13_1 Q13_2 Q13_3 Q13_4\n  <dbl> <dbl> <dbl> <dbl>\n1 0.949  1.72 0.772 0.567\n```\n\n\n:::\n:::\n\n\n\n## Short break\n\n::: v-center-container\nAny question so far?\n:::\n\n## A segue to tibble\n\n-   Tibble is a extremely flexible data structure\n\n    -   A column can be numeric, character, logical, date...etc\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntibble(\n  x = 1:3\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 1\n      x\n  <int>\n1     1\n2     2\n3     3\n```\n\n\n:::\n:::\n\n\n\n## A segue to tibble\n\n-   Tibble is a extremely flexible data structure\n\n    -   It can also be a list of vectors\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntibble(\n  x = 1:3,\n  y = list(1:2, 3:4, 5:6)\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 2\n      x y        \n  <int> <list>   \n1     1 <int [2]>\n2     2 <int [2]>\n3     3 <int [2]>\n```\n\n\n:::\n:::\n\n\n\n## A segue to tibble\n\n-   Tibble is a extremely flexible data structure\n\n    -   Or even a list of tibbles (or df, or anything)!\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntibble(\n  x = 1:3,\n  y = list(1:2, 3:4, 5:6),\n  z = list(tibble(a = 1:2, b = a^2), \n           tibble(a = 3:4, b = a^2), \n           tibble(a = 5:6, b = a^2))\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 3\n      x y         z               \n  <int> <list>    <list>          \n1     1 <int [2]> <tibble [2 × 2]>\n2     2 <int [2]> <tibble [2 × 2]>\n3     3 <int [2]> <tibble [2 × 2]>\n```\n\n\n:::\n:::\n\n\n\n## A segue to tibble\n\n-   Tibble is a extremely flexible data structure\n\n    -   We usually think of tidy data this way:\n\n        -   Columns = variables (some characteristics of obs.)\n\n        -   Rows = observations (e.g., people, countries)\n\n    -   Another way to exploit tibble\n\n        -   Columns = different inputs/arguments to a function\n\n        -   Rows = different specifications/values to those inputs\n\n        -   Then `map()` a function over those specifications\n\n## Mapping a function in a tibble\n\n-   A realistic example: running regressions\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(gapminder)\nslice_sample(gapminder, n = 10)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 10 × 6\n   country      continent  year lifeExp      pop gdpPercap\n   <fct>        <fct>     <int>   <dbl>    <int>     <dbl>\n 1 Uganda       Africa     1957    42.6  6675501      774.\n 2 Korea, Rep.  Asia       1982    67.1 39326000     5623.\n 3 Algeria      Africa     1972    54.5 14760787     4183.\n 4 Panama       Americas   1987    71.5  2253639     7035.\n 5 Iceland      Europe     1997    79.0   271192    28061.\n 6 Saudi Arabia Asia       1952    39.9  4005677     6460.\n 7 Puerto Rico  Americas   1987    74.6  3444468    12281.\n 8 Slovenia     Europe     1982    71.1  1861252    17867.\n 9 Zambia       Africa     1967    47.8  3900000     1777.\n10 Yemen, Rep.  Asia       1992    55.6 13367997     1879.\n```\n\n\n:::\n:::\n\n\n\n## Mapping a function in a tibble\n\n-   A realistic example: running regressions\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nm1 <- lifeExp ~ gdpPercap\nm1_res <- lm(m1, data = gapminder)\nsummary(m1_res)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = m1, data = gapminder)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-82.754  -7.758   2.176   8.225  18.426 \n\nCoefficients:\n             Estimate Std. Error t value Pr(>|t|)    \n(Intercept) 5.396e+01  3.150e-01  171.29   <2e-16 ***\ngdpPercap   7.649e-04  2.579e-05   29.66   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 10.49 on 1702 degrees of freedom\nMultiple R-squared:  0.3407,\tAdjusted R-squared:  0.3403 \nF-statistic: 879.6 on 1 and 1702 DF,  p-value: < 2.2e-16\n```\n\n\n:::\n:::\n\n\n\n## Mapping a function in a tibble\n\n-   A realistic example: running regressions\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(broom)\nm1_res_tidy <- tidy(m1_res, conf.int = TRUE)\nm1_res_tidy\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 7\n  term         estimate std.error statistic   p.value  conf.low conf.high\n  <chr>           <dbl>     <dbl>     <dbl>     <dbl>     <dbl>     <dbl>\n1 (Intercept) 54.0      0.315         171.  0         53.3      54.6     \n2 gdpPercap    0.000765 0.0000258      29.7 3.57e-156  0.000714  0.000815\n```\n\n\n:::\n:::\n\n\n\n## Mapping a function in a tibble\n\n-   I can run a regression inside a tibble\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntibble(\n  data = list(gapminder)\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 1\n  data                \n  <list>              \n1 <tibble [1,704 × 6]>\n```\n\n\n:::\n:::\n\n\n\n## Mapping a function in a tibble\n\n-   I can run a regression inside a tibble\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntibble(\n  data = list(gapminder),\n  lm_res = map(data, ~ lm(lifeExp ~ gdpPercap, data = .x))\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 2\n  data                 lm_res\n  <list>               <list>\n1 <tibble [1,704 × 6]> <lm>  \n```\n\n\n:::\n:::\n\n\n\n## Mapping a function in a tibble\n\n-   I can run a regression inside a tibble\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntibble(\n  data = list(gapminder),\n  lm_res = map(data, ~ lm(lifeExp ~ gdpPercap, data = .x)),\n  lm_res_tidy = map(lm_res, ~ tidy(.x, conf.int = TRUE))\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 3\n  data                 lm_res lm_res_tidy     \n  <list>               <list> <list>          \n1 <tibble [1,704 × 6]> <lm>   <tibble [2 × 7]>\n```\n\n\n:::\n:::\n\n\n\n## Mapping a function in a tibble\n\n-   I can run a regression inside a tibble\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlm_tbl <- \n  tibble(\n    data = list(gapminder),\n    lm_res = map(data, ~ lm(lifeExp ~ gdpPercap, data = .x)),\n    lm_res_tidy = map(lm_res, ~ tidy(.x, conf.int = TRUE))\n  )\n\nlm_tbl$lm_res_tidy\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[[1]]\n# A tibble: 2 × 7\n  term         estimate std.error statistic   p.value  conf.low conf.high\n  <chr>           <dbl>     <dbl>     <dbl>     <dbl>     <dbl>     <dbl>\n1 (Intercept) 54.0      0.315         171.  0         53.3      54.6     \n2 gdpPercap    0.000765 0.0000258      29.7 3.57e-156  0.000714  0.000815\n```\n\n\n:::\n:::\n\n\n\n## Mapping a function in a tibble\n\n::: v-center-container\nWhy? -- We can run *many* regressions simultaneously and wrangle all output efficiently\n:::\n\n## Mapping a function in a tibble\n\n-   Running multiple regressions\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngapminder %>%\n  group_by(continent) %>%\n  nest()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 2\n# Groups:   continent [5]\n  continent data              \n  <fct>     <list>            \n1 Asia      <tibble [396 × 5]>\n2 Europe    <tibble [360 × 5]>\n3 Africa    <tibble [624 × 5]>\n4 Americas  <tibble [300 × 5]>\n5 Oceania   <tibble [24 × 5]> \n```\n\n\n:::\n:::\n\n\n\n## Mapping a function in a tibble\n\n-   Running multiple regressions\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngapminder %>%\n  group_by(continent) %>%\n  nest() %>%\n  mutate(lm_res = map(data, ~ lm(lifeExp ~ gdpPercap, data = .x)))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 3\n# Groups:   continent [5]\n  continent data               lm_res\n  <fct>     <list>             <list>\n1 Asia      <tibble [396 × 5]> <lm>  \n2 Europe    <tibble [360 × 5]> <lm>  \n3 Africa    <tibble [624 × 5]> <lm>  \n4 Americas  <tibble [300 × 5]> <lm>  \n5 Oceania   <tibble [24 × 5]>  <lm>  \n```\n\n\n:::\n:::\n\n\n\n## Mapping a function in a tibble\n\n-   Running multiple regressions\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngapminder %>%\n  group_by(continent) %>%\n  nest() %>%\n  mutate(lm_res = map(data, ~ lm(lifeExp ~ gdpPercap, data = .x)),\n         lm_res_tidy = map(lm_res, ~ tidy(.x, conf.int = TRUE)))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 4\n# Groups:   continent [5]\n  continent data               lm_res lm_res_tidy     \n  <fct>     <list>             <list> <list>          \n1 Asia      <tibble [396 × 5]> <lm>   <tibble [2 × 7]>\n2 Europe    <tibble [360 × 5]> <lm>   <tibble [2 × 7]>\n3 Africa    <tibble [624 × 5]> <lm>   <tibble [2 × 7]>\n4 Americas  <tibble [300 × 5]> <lm>   <tibble [2 × 7]>\n5 Oceania   <tibble [24 × 5]>  <lm>   <tibble [2 × 7]>\n```\n\n\n:::\n:::\n\n\n\n## Mapping a function in a tibble\n\n-   Running multiple regressions\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nby_continent_res <- \n  gapminder %>%\n  group_by(continent) %>%\n  nest() %>%\n  mutate(lm_res = map(data, ~ lm(lifeExp ~ gdpPercap, data = .x)),\n         lm_res_tidy = map(lm_res, ~ tidy(.x, conf.int = TRUE)))\n```\n:::\n\n\n\n## Mapping a function in a tibble\n\n-   Running multiple regressions\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nby_continent_res %>%\n  select(continent, lm_res_tidy) %>%\n  unnest(lm_res_tidy)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 10 × 8\n# Groups:   continent [5]\n   continent term      estimate std.error statistic   p.value conf.low conf.high\n   <fct>     <chr>        <dbl>     <dbl>     <dbl>     <dbl>    <dbl>     <dbl>\n 1 Asia      (Interce…  5.75e+1 0.633         90.8  2.45e-266  5.63e+1 58.8     \n 2 Asia      gdpPercap  3.23e-4 0.0000393      8.21 3.29e- 15  2.45e-4  0.000400\n 3 Europe    (Interce…  6.53e+1 0.330        198.   0          6.47e+1 66.0     \n 4 Europe    gdpPercap  4.53e-4 0.0000192     23.6  4.05e- 75  4.16e-4  0.000491\n 5 Africa    (Interce…  4.58e+1 0.420        109.   0          4.50e+1 46.7     \n 6 Africa    gdpPercap  1.38e-3 0.000117      11.7  7.60e- 29  1.15e-3  0.00161 \n 7 Americas  (Interce…  5.88e+1 0.672         87.5  1.33e-214  5.75e+1 60.2     \n 8 Americas  gdpPercap  8.16e-4 0.0000702     11.6  5.45e- 26  6.78e-4  0.000954\n 9 Oceania   (Interce…  6.37e+1 0.729         87.4  1.87e- 29  6.22e+1 65.2     \n10 Oceania   gdpPercap  5.71e-4 0.0000371     15.4  2.99e- 13  4.94e-4  0.000648\n```\n\n\n:::\n:::\n\n\n\n## Mapping a function in a tibble\n\n-   Running multiple regressions\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nby_continent_res_tidy <- \n  by_continent_res %>%\n  select(continent, lm_res_tidy) %>%\n  unnest(lm_res_tidy)\n```\n:::\n\n\n\n## Mapping a function in a tibble\n\n-   Visualizing multiple regressions\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nby_continent_res_tidy %>% filter(term == \"gdpPercap\") %>%\n  ggplot(aes(y = fct_reorder(continent, estimate), x = estimate, xmin = conf.low, xmax = conf.high)) +\n  geom_pointrange() + \n  cowplot::theme_minimal_vgrid() + labs(y = \"continent\")\n```\n\n::: {.cell-output-display}\n![](many_functions_files/figure-revealjs/unnamed-chunk-55-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n## Mapping a function in a tibble\n\n-   Many specifications: 4 models x 5 continents\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nm1 <- lifeExp ~ gdpPercap\nm2 <- lifeExp ~ gdpPercap + I(gdpPercap^2)\nm3 <- lifeExp ~ gdpPercap + log(gdpPercap)\nm4 <- lifeExp ~ gdpPercap + log(gdpPercap) + log(pop)\n\nmodel_list <- list(\"m1\" = m1, \"m2\" = m2, \"m3\" = m3, \"m4\" = m4)\nmodel_list\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$m1\nlifeExp ~ gdpPercap\n\n$m2\nlifeExp ~ gdpPercap + I(gdpPercap^2)\n\n$m3\nlifeExp ~ gdpPercap + log(gdpPercap)\n\n$m4\nlifeExp ~ gdpPercap + log(gdpPercap) + log(pop)\n```\n\n\n:::\n:::\n\n\n\n## Mapping a function in a tibble\n\n-   Many specifications: 4 models x 5 continents\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngapminder %>%\n  group_by(continent) %>% nest() %>%\n  mutate(model = list(model_list)) \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 3\n# Groups:   continent [5]\n  continent data               model           \n  <fct>     <list>             <list>          \n1 Asia      <tibble [396 × 5]> <named list [4]>\n2 Europe    <tibble [360 × 5]> <named list [4]>\n3 Africa    <tibble [624 × 5]> <named list [4]>\n4 Americas  <tibble [300 × 5]> <named list [4]>\n5 Oceania   <tibble [24 × 5]>  <named list [4]>\n```\n\n\n:::\n:::\n\n\n\n## Mapping a function in a tibble\n\n-   Many specifications: 4 models x 5 continents\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngapminder %>%\n  group_by(continent) %>% nest() %>%\n  mutate(model = list(model_list)) %>%\n  unnest_longer(model, values_to = \"formula\", indices_to = \"model_name\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 20 × 4\n# Groups:   continent [5]\n   continent data               formula      model_name\n   <fct>     <list>             <named list> <chr>     \n 1 Asia      <tibble [396 × 5]> <formula>    m1        \n 2 Asia      <tibble [396 × 5]> <formula>    m2        \n 3 Asia      <tibble [396 × 5]> <formula>    m3        \n 4 Asia      <tibble [396 × 5]> <formula>    m4        \n 5 Europe    <tibble [360 × 5]> <formula>    m1        \n 6 Europe    <tibble [360 × 5]> <formula>    m2        \n 7 Europe    <tibble [360 × 5]> <formula>    m3        \n 8 Europe    <tibble [360 × 5]> <formula>    m4        \n 9 Africa    <tibble [624 × 5]> <formula>    m1        \n10 Africa    <tibble [624 × 5]> <formula>    m2        \n11 Africa    <tibble [624 × 5]> <formula>    m3        \n12 Africa    <tibble [624 × 5]> <formula>    m4        \n13 Americas  <tibble [300 × 5]> <formula>    m1        \n14 Americas  <tibble [300 × 5]> <formula>    m2        \n15 Americas  <tibble [300 × 5]> <formula>    m3        \n16 Americas  <tibble [300 × 5]> <formula>    m4        \n17 Oceania   <tibble [24 × 5]>  <formula>    m1        \n18 Oceania   <tibble [24 × 5]>  <formula>    m2        \n19 Oceania   <tibble [24 × 5]>  <formula>    m3        \n20 Oceania   <tibble [24 × 5]>  <formula>    m4        \n```\n\n\n:::\n:::\n\n\n\n## Mapping a function in a tibble\n\n-   Many specifications: 4 models x 5 continents\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngapminder %>%\n  group_by(continent) %>% nest() %>%\n  mutate(model = list(model_list)) %>%\n  unnest_longer(model, values_to = \"formula\", indices_to = \"model_name\") %>%\n  mutate(lm_res = map2(formula, data, lm)) \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 20 × 5\n# Groups:   continent [5]\n   continent data               formula      model_name lm_res      \n   <fct>     <list>             <named list> <chr>      <named list>\n 1 Asia      <tibble [396 × 5]> <formula>    m1         <lm>        \n 2 Asia      <tibble [396 × 5]> <formula>    m2         <lm>        \n 3 Asia      <tibble [396 × 5]> <formula>    m3         <lm>        \n 4 Asia      <tibble [396 × 5]> <formula>    m4         <lm>        \n 5 Europe    <tibble [360 × 5]> <formula>    m1         <lm>        \n 6 Europe    <tibble [360 × 5]> <formula>    m2         <lm>        \n 7 Europe    <tibble [360 × 5]> <formula>    m3         <lm>        \n 8 Europe    <tibble [360 × 5]> <formula>    m4         <lm>        \n 9 Africa    <tibble [624 × 5]> <formula>    m1         <lm>        \n10 Africa    <tibble [624 × 5]> <formula>    m2         <lm>        \n11 Africa    <tibble [624 × 5]> <formula>    m3         <lm>        \n12 Africa    <tibble [624 × 5]> <formula>    m4         <lm>        \n13 Americas  <tibble [300 × 5]> <formula>    m1         <lm>        \n14 Americas  <tibble [300 × 5]> <formula>    m2         <lm>        \n15 Americas  <tibble [300 × 5]> <formula>    m3         <lm>        \n16 Americas  <tibble [300 × 5]> <formula>    m4         <lm>        \n17 Oceania   <tibble [24 × 5]>  <formula>    m1         <lm>        \n18 Oceania   <tibble [24 × 5]>  <formula>    m2         <lm>        \n19 Oceania   <tibble [24 × 5]>  <formula>    m3         <lm>        \n20 Oceania   <tibble [24 × 5]>  <formula>    m4         <lm>        \n```\n\n\n:::\n:::\n\n\n\n## Mapping a function in a tibble\n\n-   Many specifications: 4 models x 5 continents\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngapminder %>%\n  group_by(continent) %>% nest() %>%\n  mutate(model = list(model_list)) %>%\n  unnest_longer(model, values_to = \"formula\", indices_to = \"model_name\") %>%\n  mutate(lm_res = map2(formula, data, lm),\n         lm_res = map(lm_res, ~ tidy(.x, conf.int = TRUE))) \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 20 × 5\n# Groups:   continent [5]\n   continent data               formula      model_name lm_res          \n   <fct>     <list>             <named list> <chr>      <named list>    \n 1 Asia      <tibble [396 × 5]> <formula>    m1         <tibble [2 × 7]>\n 2 Asia      <tibble [396 × 5]> <formula>    m2         <tibble [3 × 7]>\n 3 Asia      <tibble [396 × 5]> <formula>    m3         <tibble [3 × 7]>\n 4 Asia      <tibble [396 × 5]> <formula>    m4         <tibble [4 × 7]>\n 5 Europe    <tibble [360 × 5]> <formula>    m1         <tibble [2 × 7]>\n 6 Europe    <tibble [360 × 5]> <formula>    m2         <tibble [3 × 7]>\n 7 Europe    <tibble [360 × 5]> <formula>    m3         <tibble [3 × 7]>\n 8 Europe    <tibble [360 × 5]> <formula>    m4         <tibble [4 × 7]>\n 9 Africa    <tibble [624 × 5]> <formula>    m1         <tibble [2 × 7]>\n10 Africa    <tibble [624 × 5]> <formula>    m2         <tibble [3 × 7]>\n11 Africa    <tibble [624 × 5]> <formula>    m3         <tibble [3 × 7]>\n12 Africa    <tibble [624 × 5]> <formula>    m4         <tibble [4 × 7]>\n13 Americas  <tibble [300 × 5]> <formula>    m1         <tibble [2 × 7]>\n14 Americas  <tibble [300 × 5]> <formula>    m2         <tibble [3 × 7]>\n15 Americas  <tibble [300 × 5]> <formula>    m3         <tibble [3 × 7]>\n16 Americas  <tibble [300 × 5]> <formula>    m4         <tibble [4 × 7]>\n17 Oceania   <tibble [24 × 5]>  <formula>    m1         <tibble [2 × 7]>\n18 Oceania   <tibble [24 × 5]>  <formula>    m2         <tibble [3 × 7]>\n19 Oceania   <tibble [24 × 5]>  <formula>    m3         <tibble [3 × 7]>\n20 Oceania   <tibble [24 × 5]>  <formula>    m4         <tibble [4 × 7]>\n```\n\n\n:::\n:::\n\n\n\n## Mapping a function in a tibble\n\n-   Many specifications: 4 models x 5 continents\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmany_models_tbl <- \n  gapminder %>%\n  group_by(continent) %>% nest() %>%\n  mutate(model = list(model_list)) %>%\n  unnest_longer(model, values_to = \"formula\", indices_to = \"model_name\") %>%\n  mutate(lm_res = map2(formula, data, lm),\n         lm_res = map(lm_res, ~ tidy(.x, conf.int = TRUE))) \n```\n:::\n\n\n\n## Mapping a function in a tibble\n\n-   Many specifications: 4 models x 5 continents\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmany_models_tbl %>%\n  select(continent, model_name, lm_res) %>%\n  unnest(lm_res)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 60 × 9\n# Groups:   continent [5]\n   continent model_name term     estimate std.error statistic   p.value conf.low\n   <fct>     <chr>      <chr>       <dbl>     <dbl>     <dbl>     <dbl>    <dbl>\n 1 Asia      m1         (Interc…  5.75e+1  6.33e- 1     90.8  2.45e-266  5.63e+1\n 2 Asia      m1         gdpPerc…  3.23e-4  3.93e- 5      8.21 3.29e- 15  2.45e-4\n 3 Asia      m2         (Interc…  5.38e+1  6.20e- 1     86.8  1.65e-258  5.26e+1\n 4 Asia      m2         gdpPerc…  1.12e-3  7.42e- 5     15.1  4.05e- 41  9.78e-4\n 5 Asia      m2         I(gdpPe… -1.03e-8  8.47e-10    -12.1  7.01e- 29 -1.19e-8\n 6 Asia      m3         (Interc… -6.16e+0  3.67e+ 0     -1.68 9.38e-  2 -1.34e+1\n 7 Asia      m3         gdpPerc… -2.73e-4  4.50e- 5     -6.07 3.04e-  9 -3.62e-4\n 8 Asia      m3         log(gdp…  8.47e+0  4.84e- 1     17.5  3.55e- 51  7.52e+0\n 9 Asia      m4         (Interc… -4.56e+1  5.63e+ 0     -8.10 6.83e- 15 -5.67e+1\n10 Asia      m4         gdpPerc… -2.46e-4  4.14e- 5     -5.94 6.19e-  9 -3.27e-4\n# ℹ 50 more rows\n# ℹ 1 more variable: conf.high <dbl>\n```\n\n\n:::\n:::\n\n\n\n## Mapping a function in a tibble\n\n-   Many specifications: 4 models x 5 continents\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmany_models_tbl %>%\n  select(continent, model_name, lm_res) %>%\n  unnest(lm_res) %>%\n  filter(term == \"gdpPercap\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 20 × 9\n# Groups:   continent [5]\n   continent model_name term      estimate std.error statistic  p.value conf.low\n   <fct>     <chr>      <chr>        <dbl>     <dbl>     <dbl>    <dbl>    <dbl>\n 1 Asia      m1         gdpPercap  3.23e-4 0.0000393     8.21  3.29e-15  2.45e-4\n 2 Asia      m2         gdpPercap  1.12e-3 0.0000742    15.1   4.05e-41  9.78e-4\n 3 Asia      m3         gdpPercap -2.73e-4 0.0000450    -6.07  3.04e- 9 -3.62e-4\n 4 Asia      m4         gdpPercap -2.46e-4 0.0000414    -5.94  6.19e- 9 -3.27e-4\n 5 Europe    m1         gdpPercap  4.53e-4 0.0000192    23.6   4.05e-75  4.16e-4\n 6 Europe    m2         gdpPercap  9.50e-4 0.0000607    15.6   2.28e-42  8.30e-4\n 7 Europe    m3         gdpPercap -3.17e-5 0.0000423    -0.750 4.54e- 1 -1.15e-4\n 8 Europe    m4         gdpPercap -4.57e-5 0.0000417    -1.10  2.74e- 1 -1.28e-4\n 9 Africa    m1         gdpPercap  1.38e-3 0.000117     11.7   7.60e-29  1.15e-3\n10 Africa    m2         gdpPercap  3.68e-3 0.000266     13.8   3.31e-38  3.16e-3\n11 Africa    m3         gdpPercap -3.90e-4 0.000212     -1.84  6.60e- 2 -8.05e-4\n12 Africa    m4         gdpPercap -3.71e-4 0.000210     -1.77  7.76e- 2 -7.84e-4\n13 Americas  m1         gdpPercap  8.16e-4 0.0000702    11.6   5.45e-26  6.78e-4\n14 Americas  m2         gdpPercap  2.36e-3 0.000182     13.0   9.81e-31  2.00e-3\n15 Americas  m3         gdpPercap -4.76e-4 0.000125     -3.79  1.79e- 4 -7.23e-4\n16 Americas  m4         gdpPercap -4.55e-4 0.000128     -3.55  4.50e- 4 -7.07e-4\n17 Oceania   m1         gdpPercap  5.71e-4 0.0000371    15.4   2.99e-13  4.94e-4\n18 Oceania   m2         gdpPercap  1.03e-3 0.000189      5.43  2.19e- 5  6.33e-4\n19 Oceania   m3         gdpPercap  2.35e-4 0.000192      1.22  2.35e- 1 -1.64e-4\n20 Oceania   m4         gdpPercap  3.23e-4 0.000194      1.66  1.12e- 1 -8.25e-5\n# ℹ 1 more variable: conf.high <dbl>\n```\n\n\n:::\n:::\n\n\n\n## Mapping a function in a tibble\n\n-   Many specifications: 4 models x 5 continents\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmany_models_tbl %>%\n  select(continent, model_name, lm_res) %>%\n  unnest(lm_res) %>%\n  filter(term == \"gdpPercap\") %>%\n  ggplot(aes(y = fct_rev(model_name), \n             color = model_name, \n             x = estimate, xmin = conf.low, xmax = conf.high)) +\n  geom_pointrange() +\n  geom_vline(xintercept = 0, linetype = 2) +\n  facet_wrap(~ continent, scales = \"free_x\") +\n  labs(y = \"Model\") +\n  scale_color_brewer(type = \"qual\", palette = 3) +\n  cowplot::theme_minimal_vgrid() +\n  theme(legend.position = c(0.75,0.25))\n```\n:::\n\n\n\n## Mapping a function in a tibble\n\n-   Many specifications: 4 models x 5 continents\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](many_functions_files/figure-revealjs/unnamed-chunk-65-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n## Any questions?\n",
    "supporting": [
      "many_functions_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}